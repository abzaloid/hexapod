
GccApplication6.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800200  00002a1a  00002aae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002a1a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000330  00800208  00800208  00002ab6  2**0
                  ALLOC
  3 .stab         00003b58  00000000  00000000  00002ab8  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      0000107a  00000000  00000000  00006610  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  0000768a  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000438  00000000  00000000  000076b9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000dda9  00000000  00000000  00007af1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000015a1  00000000  00000000  0001589a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00003a36  00000000  00000000  00016e3b  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000d54  00000000  00000000  0001a874  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000c3e  00000000  00000000  0001b5c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00004d4d  00000000  00000000  0001c206  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000340  00000000  00000000  00020f53  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	9f c0       	rjmp	.+318    	; 0x140 <__ctors_end>
       2:	00 00       	nop
       4:	bd c0       	rjmp	.+378    	; 0x180 <__bad_interrupt>
       6:	00 00       	nop
       8:	bb c0       	rjmp	.+374    	; 0x180 <__bad_interrupt>
       a:	00 00       	nop
       c:	b9 c0       	rjmp	.+370    	; 0x180 <__bad_interrupt>
       e:	00 00       	nop
      10:	b7 c0       	rjmp	.+366    	; 0x180 <__bad_interrupt>
      12:	00 00       	nop
      14:	b5 c0       	rjmp	.+362    	; 0x180 <__bad_interrupt>
      16:	00 00       	nop
      18:	b3 c0       	rjmp	.+358    	; 0x180 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	b1 c0       	rjmp	.+354    	; 0x180 <__bad_interrupt>
      1e:	00 00       	nop
      20:	af c0       	rjmp	.+350    	; 0x180 <__bad_interrupt>
      22:	00 00       	nop
      24:	ad c0       	rjmp	.+346    	; 0x180 <__bad_interrupt>
      26:	00 00       	nop
      28:	ab c0       	rjmp	.+342    	; 0x180 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	a9 c0       	rjmp	.+338    	; 0x180 <__bad_interrupt>
      2e:	00 00       	nop
      30:	a7 c0       	rjmp	.+334    	; 0x180 <__bad_interrupt>
      32:	00 00       	nop
      34:	a5 c0       	rjmp	.+330    	; 0x180 <__bad_interrupt>
      36:	00 00       	nop
      38:	a3 c0       	rjmp	.+326    	; 0x180 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	a1 c0       	rjmp	.+322    	; 0x180 <__bad_interrupt>
      3e:	00 00       	nop
      40:	9f c0       	rjmp	.+318    	; 0x180 <__bad_interrupt>
      42:	00 00       	nop
      44:	9d c0       	rjmp	.+314    	; 0x180 <__bad_interrupt>
      46:	00 00       	nop
      48:	9b c0       	rjmp	.+310    	; 0x180 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	99 c0       	rjmp	.+306    	; 0x180 <__bad_interrupt>
      4e:	00 00       	nop
      50:	97 c0       	rjmp	.+302    	; 0x180 <__bad_interrupt>
      52:	00 00       	nop
      54:	95 c0       	rjmp	.+298    	; 0x180 <__bad_interrupt>
      56:	00 00       	nop
      58:	93 c0       	rjmp	.+294    	; 0x180 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	91 c0       	rjmp	.+290    	; 0x180 <__bad_interrupt>
      5e:	00 00       	nop
      60:	8f c0       	rjmp	.+286    	; 0x180 <__bad_interrupt>
      62:	00 00       	nop
      64:	dc c1       	rjmp	.+952    	; 0x41e <__vector_25>
      66:	00 00       	nop
      68:	8b c0       	rjmp	.+278    	; 0x180 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	89 c0       	rjmp	.+274    	; 0x180 <__bad_interrupt>
      6e:	00 00       	nop
      70:	87 c0       	rjmp	.+270    	; 0x180 <__bad_interrupt>
      72:	00 00       	nop
      74:	85 c0       	rjmp	.+266    	; 0x180 <__bad_interrupt>
      76:	00 00       	nop
      78:	83 c0       	rjmp	.+262    	; 0x180 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	81 c0       	rjmp	.+258    	; 0x180 <__bad_interrupt>
      7e:	00 00       	nop
      80:	7f c0       	rjmp	.+254    	; 0x180 <__bad_interrupt>
      82:	00 00       	nop
      84:	7d c0       	rjmp	.+250    	; 0x180 <__bad_interrupt>
      86:	00 00       	nop
      88:	7b c0       	rjmp	.+246    	; 0x180 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	79 c0       	rjmp	.+242    	; 0x180 <__bad_interrupt>
      8e:	00 00       	nop
      90:	0c 94 e8 0f 	jmp	0x1fd0	; 0x1fd0 <__vector_36>
      94:	75 c0       	rjmp	.+234    	; 0x180 <__bad_interrupt>
      96:	00 00       	nop
      98:	73 c0       	rjmp	.+230    	; 0x180 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	71 c0       	rjmp	.+226    	; 0x180 <__bad_interrupt>
      9e:	00 00       	nop
      a0:	6f c0       	rjmp	.+222    	; 0x180 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	6d c0       	rjmp	.+218    	; 0x180 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	6b c0       	rjmp	.+214    	; 0x180 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	69 c0       	rjmp	.+210    	; 0x180 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	67 c0       	rjmp	.+206    	; 0x180 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	65 c0       	rjmp	.+202    	; 0x180 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	63 c0       	rjmp	.+198    	; 0x180 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	61 c0       	rjmp	.+194    	; 0x180 <__bad_interrupt>
      be:	00 00       	nop
      c0:	5f c0       	rjmp	.+190    	; 0x180 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	5d c0       	rjmp	.+186    	; 0x180 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	5b c0       	rjmp	.+182    	; 0x180 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	08 4a       	sbci	r16, 0xA8	; 168
      ce:	d7 3b       	cpi	r29, 0xB7	; 183
      d0:	3b ce       	rjmp	.-906    	; 0xfffffd48 <__eeprom_end+0xff7efd48>
      d2:	01 6e       	ori	r16, 0xE1	; 225
      d4:	84 bc       	out	0x24, r8	; 36
      d6:	bf fd       	.word	0xfdbf	; ????
      d8:	c1 2f       	mov	r28, r17
      da:	3d 6c       	ori	r19, 0xCD	; 205
      dc:	74 31       	cpi	r23, 0x14	; 20
      de:	9a bd       	out	0x2a, r25	; 42
      e0:	56 83       	std	Z+6, r21	; 0x06
      e2:	3d da       	rcall	.-2950   	; 0xfffff55e <__eeprom_end+0xff7ef55e>
      e4:	3d 00       	.word	0x003d	; ????
      e6:	c7 7f       	andi	r28, 0xF7	; 247
      e8:	11 be       	out	0x31, r1	; 49
      ea:	d9 e4       	ldi	r29, 0x49	; 73
      ec:	bb 4c       	sbci	r27, 0xCB	; 203
      ee:	3e 91       	ld	r19, -X
      f0:	6b aa       	std	Y+51, r6	; 0x33
      f2:	aa be       	out	0x3a, r10	; 58
      f4:	00 00       	nop
      f6:	00 80       	ld	r0, Z
      f8:	3f 07       	cpc	r19, r31
      fa:	2c 7a       	andi	r18, 0xAC	; 172
      fc:	a5 ba       	out	0x15, r10	; 21
      fe:	6c c5       	rjmp	.+2776   	; 0xbd8 <main+0x38e>
     100:	90 da       	rcall	.-2784   	; 0xfffff622 <__eeprom_end+0xff7ef622>
     102:	3b 93       	.word	0x933b	; ????
     104:	65 fc       	sbrc	r6, 5
     106:	8b bc       	out	0x2b, r8	; 43
     108:	53 f8       	bld	r5, 3
     10a:	10 fd       	sbrc	r17, 0
     10c:	3c 56       	subi	r19, 0x6C	; 108
     10e:	92 83       	std	Z+2, r25	; 0x02
     110:	4d bd       	out	0x2d, r20	; 45
     112:	87 9d       	mul	r24, r7
     114:	3a b6       	in	r3, 0x3a	; 58
     116:	3d cb       	rjmp	.-2438   	; 0xfffff792 <__eeprom_end+0xff7ef792>
     118:	c9 bf       	out	0x39, r28	; 57
     11a:	5b be       	out	0x3b, r5	; 59
     11c:	73 da       	rcall	.-2842   	; 0xfffff604 <__eeprom_end+0xff7ef604>
     11e:	0f c9       	rjmp	.-3554   	; 0xfffff33e <__eeprom_end+0xff7ef33e>
     120:	3f 05       	cpc	r19, r15
     122:	a8 4c       	sbci	r26, 0xC8	; 200
     124:	cd b2       	in	r12, 0x1d	; 29
     126:	d4 4e       	sbci	r29, 0xE4	; 228
     128:	b9 38       	cpi	r27, 0x89	; 137
     12a:	36 a9       	ldd	r19, Z+54	; 0x36
     12c:	02 0c       	add	r0, r2
     12e:	50 b9       	out	0x00, r21	; 0
     130:	91 86       	std	Z+9, r9	; 0x09
     132:	88 08       	sbc	r8, r8
     134:	3c a6       	std	Y+44, r3	; 0x2c
     136:	aa aa       	std	Y+50, r10	; 0x32
     138:	2a be       	out	0x3a, r2	; 58
     13a:	00 00       	nop
     13c:	00 80       	ld	r0, Z
     13e:	3f 00       	.word	0x003f	; ????

00000140 <__ctors_end>:
     140:	11 24       	eor	r1, r1
     142:	1f be       	out	0x3f, r1	; 63
     144:	cf ef       	ldi	r28, 0xFF	; 255
     146:	d1 e2       	ldi	r29, 0x21	; 33
     148:	de bf       	out	0x3e, r29	; 62
     14a:	cd bf       	out	0x3d, r28	; 61
     14c:	00 e0       	ldi	r16, 0x00	; 0
     14e:	0c bf       	out	0x3c, r16	; 60

00000150 <__do_copy_data>:
     150:	12 e0       	ldi	r17, 0x02	; 2
     152:	a0 e0       	ldi	r26, 0x00	; 0
     154:	b2 e0       	ldi	r27, 0x02	; 2
     156:	ea e1       	ldi	r30, 0x1A	; 26
     158:	fa e2       	ldi	r31, 0x2A	; 42
     15a:	00 e0       	ldi	r16, 0x00	; 0
     15c:	0b bf       	out	0x3b, r16	; 59
     15e:	02 c0       	rjmp	.+4      	; 0x164 <__do_copy_data+0x14>
     160:	07 90       	elpm	r0, Z+
     162:	0d 92       	st	X+, r0
     164:	a8 30       	cpi	r26, 0x08	; 8
     166:	b1 07       	cpc	r27, r17
     168:	d9 f7       	brne	.-10     	; 0x160 <__do_copy_data+0x10>

0000016a <__do_clear_bss>:
     16a:	25 e0       	ldi	r18, 0x05	; 5
     16c:	a8 e0       	ldi	r26, 0x08	; 8
     16e:	b2 e0       	ldi	r27, 0x02	; 2
     170:	01 c0       	rjmp	.+2      	; 0x174 <.do_clear_bss_start>

00000172 <.do_clear_bss_loop>:
     172:	1d 92       	st	X+, r1

00000174 <.do_clear_bss_start>:
     174:	a8 33       	cpi	r26, 0x38	; 56
     176:	b2 07       	cpc	r27, r18
     178:	e1 f7       	brne	.-8      	; 0x172 <.do_clear_bss_loop>
     17a:	67 d3       	rcall	.+1742   	; 0x84a <main>
     17c:	0c 94 0b 15 	jmp	0x2a16	; 0x2a16 <_exit>

00000180 <__bad_interrupt>:
     180:	3f cf       	rjmp	.-386    	; 0x0 <__vectors>

00000182 <dxl_hal_open>:
     182:	cf 92       	push	r12
     184:	df 92       	push	r13
     186:	ef 92       	push	r14
     188:	ff 92       	push	r15
     18a:	6a 01       	movw	r12, r20
     18c:	7b 01       	movw	r14, r22
     18e:	82 e4       	ldi	r24, 0x42	; 66
     190:	80 93 c0 00 	sts	0x00C0, r24
     194:	88 e9       	ldi	r24, 0x98	; 152
     196:	80 93 c1 00 	sts	0x00C1, r24
     19a:	86 e0       	ldi	r24, 0x06	; 6
     19c:	80 93 c2 00 	sts	0x00C2, r24
     1a0:	9a 01       	movw	r18, r20
     1a2:	ab 01       	movw	r20, r22
     1a4:	60 e0       	ldi	r22, 0x00	; 0
     1a6:	74 e2       	ldi	r23, 0x24	; 36
     1a8:	84 ef       	ldi	r24, 0xF4	; 244
     1aa:	99 e4       	ldi	r25, 0x49	; 73
     1ac:	0e 94 e9 10 	call	0x21d2	; 0x21d2 <__divsf3>
     1b0:	0e 94 56 11 	call	0x22ac	; 0x22ac <__fixunssfsi>
     1b4:	61 50       	subi	r22, 0x01	; 1
     1b6:	71 09       	sbc	r23, r1
     1b8:	70 93 c5 00 	sts	0x00C5, r23
     1bc:	60 93 c4 00 	sts	0x00C4, r22
     1c0:	a7 01       	movw	r20, r14
     1c2:	96 01       	movw	r18, r12
     1c4:	60 e0       	ldi	r22, 0x00	; 0
     1c6:	74 e2       	ldi	r23, 0x24	; 36
     1c8:	84 e7       	ldi	r24, 0x74	; 116
     1ca:	99 e4       	ldi	r25, 0x49	; 73
     1cc:	0e 94 e9 10 	call	0x21d2	; 0x21d2 <__divsf3>
     1d0:	20 e0       	ldi	r18, 0x00	; 0
     1d2:	30 e0       	ldi	r19, 0x00	; 0
     1d4:	40 e4       	ldi	r20, 0x40	; 64
     1d6:	51 e4       	ldi	r21, 0x41	; 65
     1d8:	0e 94 90 12 	call	0x2520	; 0x2520 <__mulsf3>
     1dc:	46 2f       	mov	r20, r22
     1de:	57 2f       	mov	r21, r23
     1e0:	68 2f       	mov	r22, r24
     1e2:	79 2f       	mov	r23, r25
     1e4:	40 93 7e 04 	sts	0x047E, r20
     1e8:	50 93 7f 04 	sts	0x047F, r21
     1ec:	60 93 80 04 	sts	0x0480, r22
     1f0:	70 93 81 04 	sts	0x0481, r23
     1f4:	40 93 7a 04 	sts	0x047A, r20
     1f8:	50 93 7b 04 	sts	0x047B, r21
     1fc:	60 93 7c 04 	sts	0x047C, r22
     200:	70 93 7d 04 	sts	0x047D, r23
     204:	20 91 7e 04 	lds	r18, 0x047E
     208:	30 91 7f 04 	lds	r19, 0x047F
     20c:	40 91 80 04 	lds	r20, 0x0480
     210:	50 91 81 04 	lds	r21, 0x0481
     214:	60 e0       	ldi	r22, 0x00	; 0
     216:	70 e0       	ldi	r23, 0x00	; 0
     218:	8a e7       	ldi	r24, 0x7A	; 122
     21a:	93 e4       	ldi	r25, 0x43	; 67
     21c:	0e 94 e9 10 	call	0x21d2	; 0x21d2 <__divsf3>
     220:	0e 94 56 11 	call	0x22ac	; 0x22ac <__fixunssfsi>
     224:	70 93 79 04 	sts	0x0479, r23
     228:	60 93 78 04 	sts	0x0478, r22
     22c:	72 98       	cbi	0x0e, 2	; 14
     22e:	73 9a       	sbi	0x0e, 3	; 14
     230:	8f ef       	ldi	r24, 0xFF	; 255
     232:	80 93 c6 00 	sts	0x00C6, r24
     236:	10 92 09 02 	sts	0x0209, r1
     23a:	10 92 08 02 	sts	0x0208, r1
     23e:	81 e0       	ldi	r24, 0x01	; 1
     240:	90 e0       	ldi	r25, 0x00	; 0
     242:	ff 90       	pop	r15
     244:	ef 90       	pop	r14
     246:	df 90       	pop	r13
     248:	cf 90       	pop	r12
     24a:	08 95       	ret

0000024c <dxl_hal_clear>:
     24c:	80 91 08 02 	lds	r24, 0x0208
     250:	80 93 09 02 	sts	0x0209, r24
     254:	08 95       	ret

00000256 <dxl_hal_tx>:
     256:	cf 93       	push	r28
     258:	df 93       	push	r29
     25a:	f8 94       	cli
     25c:	73 98       	cbi	0x0e, 3	; 14
     25e:	72 9a       	sbi	0x0e, 2	; 14
     260:	16 16       	cp	r1, r22
     262:	17 06       	cpc	r1, r23
     264:	ac f4       	brge	.+42     	; 0x290 <dxl_hal_tx+0x3a>
     266:	a8 2f       	mov	r26, r24
     268:	b9 2f       	mov	r27, r25
     26a:	9d 01       	movw	r18, r26
     26c:	26 0f       	add	r18, r22
     26e:	37 1f       	adc	r19, r23
     270:	e0 ec       	ldi	r30, 0xC0	; 192
     272:	f0 e0       	ldi	r31, 0x00	; 0
     274:	c6 ec       	ldi	r28, 0xC6	; 198
     276:	d0 e0       	ldi	r29, 0x00	; 0
     278:	80 81       	ld	r24, Z
     27a:	85 ff       	sbrs	r24, 5
     27c:	fd cf       	rjmp	.-6      	; 0x278 <dxl_hal_tx+0x22>
     27e:	80 81       	ld	r24, Z
     280:	80 64       	ori	r24, 0x40	; 64
     282:	80 83       	st	Z, r24
     284:	8d 91       	ld	r24, X+
     286:	88 83       	st	Y, r24
     288:	a2 17       	cp	r26, r18
     28a:	b3 07       	cpc	r27, r19
     28c:	a9 f7       	brne	.-22     	; 0x278 <dxl_hal_tx+0x22>
     28e:	02 c0       	rjmp	.+4      	; 0x294 <dxl_hal_tx+0x3e>
     290:	60 e0       	ldi	r22, 0x00	; 0
     292:	70 e0       	ldi	r23, 0x00	; 0
     294:	e0 ec       	ldi	r30, 0xC0	; 192
     296:	f0 e0       	ldi	r31, 0x00	; 0
     298:	80 81       	ld	r24, Z
     29a:	86 ff       	sbrs	r24, 6
     29c:	fd cf       	rjmp	.-6      	; 0x298 <dxl_hal_tx+0x42>
     29e:	72 98       	cbi	0x0e, 2	; 14
     2a0:	73 9a       	sbi	0x0e, 3	; 14
     2a2:	78 94       	sei
     2a4:	86 2f       	mov	r24, r22
     2a6:	97 2f       	mov	r25, r23
     2a8:	df 91       	pop	r29
     2aa:	cf 91       	pop	r28
     2ac:	08 95       	ret

000002ae <dxl_hal_set_timeout>:
     2ae:	10 92 85 04 	sts	0x0485, r1
     2b2:	10 92 84 04 	sts	0x0484, r1
     2b6:	20 91 78 04 	lds	r18, 0x0478
     2ba:	30 91 79 04 	lds	r19, 0x0479
     2be:	26 5f       	subi	r18, 0xF6	; 246
     2c0:	3f 4f       	sbci	r19, 0xFF	; 255
     2c2:	82 0f       	add	r24, r18
     2c4:	93 1f       	adc	r25, r19
     2c6:	90 93 83 04 	sts	0x0483, r25
     2ca:	80 93 82 04 	sts	0x0482, r24
     2ce:	08 95       	ret

000002d0 <dxl_hal_timeout>:
     2d0:	80 91 84 04 	lds	r24, 0x0484
     2d4:	90 91 85 04 	lds	r25, 0x0485
     2d8:	01 96       	adiw	r24, 0x01	; 1
     2da:	90 93 85 04 	sts	0x0485, r25
     2de:	80 93 84 04 	sts	0x0484, r24
     2e2:	20 91 84 04 	lds	r18, 0x0484
     2e6:	30 91 85 04 	lds	r19, 0x0485
     2ea:	80 91 82 04 	lds	r24, 0x0482
     2ee:	90 91 83 04 	lds	r25, 0x0483
     2f2:	82 17       	cp	r24, r18
     2f4:	93 07       	cpc	r25, r19
     2f6:	40 f0       	brcs	.+16     	; 0x308 <dxl_hal_timeout+0x38>
     2f8:	89 eb       	ldi	r24, 0xB9	; 185
     2fa:	9b e0       	ldi	r25, 0x0B	; 11
     2fc:	01 97       	sbiw	r24, 0x01	; 1
     2fe:	f1 f7       	brne	.-4      	; 0x2fc <dxl_hal_timeout+0x2c>
     300:	00 00       	nop
     302:	20 e0       	ldi	r18, 0x00	; 0
     304:	30 e0       	ldi	r19, 0x00	; 0
     306:	02 c0       	rjmp	.+4      	; 0x30c <dxl_hal_timeout+0x3c>
     308:	21 e0       	ldi	r18, 0x01	; 1
     30a:	30 e0       	ldi	r19, 0x00	; 0
     30c:	82 2f       	mov	r24, r18
     30e:	93 2f       	mov	r25, r19
     310:	08 95       	ret

00000312 <dxl_hal_get_qstate>:
     312:	90 91 09 02 	lds	r25, 0x0209
     316:	80 91 08 02 	lds	r24, 0x0208
     31a:	98 17       	cp	r25, r24
     31c:	b9 f0       	breq	.+46     	; 0x34c <dxl_hal_get_qstate+0x3a>
     31e:	90 91 09 02 	lds	r25, 0x0209
     322:	80 91 08 02 	lds	r24, 0x0208
     326:	98 17       	cp	r25, r24
     328:	40 f4       	brcc	.+16     	; 0x33a <dxl_hal_get_qstate+0x28>
     32a:	20 91 08 02 	lds	r18, 0x0208
     32e:	80 91 09 02 	lds	r24, 0x0209
     332:	30 e0       	ldi	r19, 0x00	; 0
     334:	28 1b       	sub	r18, r24
     336:	31 09       	sbc	r19, r1
     338:	0b c0       	rjmp	.+22     	; 0x350 <dxl_hal_get_qstate+0x3e>
     33a:	20 91 08 02 	lds	r18, 0x0208
     33e:	80 91 09 02 	lds	r24, 0x0209
     342:	30 e0       	ldi	r19, 0x00	; 0
     344:	28 1b       	sub	r18, r24
     346:	31 09       	sbc	r19, r1
     348:	33 95       	inc	r19
     34a:	02 c0       	rjmp	.+4      	; 0x350 <dxl_hal_get_qstate+0x3e>
     34c:	20 e0       	ldi	r18, 0x00	; 0
     34e:	30 e0       	ldi	r19, 0x00	; 0
     350:	82 2f       	mov	r24, r18
     352:	93 2f       	mov	r25, r19
     354:	08 95       	ret

00000356 <dxl_hal_put_queue>:
     356:	cf 93       	push	r28
     358:	c8 2f       	mov	r28, r24
     35a:	db df       	rcall	.-74     	; 0x312 <dxl_hal_get_qstate>
     35c:	8f 3f       	cpi	r24, 0xFF	; 255
     35e:	91 05       	cpc	r25, r1
     360:	91 f0       	breq	.+36     	; 0x386 <dxl_hal_put_queue+0x30>
     362:	e0 91 08 02 	lds	r30, 0x0208
     366:	f0 e0       	ldi	r31, 0x00	; 0
     368:	e6 5f       	subi	r30, 0xF6	; 246
     36a:	fd 4f       	sbci	r31, 0xFD	; 253
     36c:	c0 83       	st	Z, r28
     36e:	80 91 08 02 	lds	r24, 0x0208
     372:	8f 3f       	cpi	r24, 0xFF	; 255
     374:	19 f4       	brne	.+6      	; 0x37c <dxl_hal_put_queue+0x26>
     376:	10 92 08 02 	sts	0x0208, r1
     37a:	05 c0       	rjmp	.+10     	; 0x386 <dxl_hal_put_queue+0x30>
     37c:	80 91 08 02 	lds	r24, 0x0208
     380:	8f 5f       	subi	r24, 0xFF	; 255
     382:	80 93 08 02 	sts	0x0208, r24
     386:	cf 91       	pop	r28
     388:	08 95       	ret

0000038a <dxl_hal_get_queue>:
     38a:	90 91 09 02 	lds	r25, 0x0209
     38e:	80 91 08 02 	lds	r24, 0x0208
     392:	98 17       	cp	r25, r24
     394:	99 f0       	breq	.+38     	; 0x3bc <dxl_hal_get_queue+0x32>
     396:	e0 91 09 02 	lds	r30, 0x0209
     39a:	f0 e0       	ldi	r31, 0x00	; 0
     39c:	e6 5f       	subi	r30, 0xF6	; 246
     39e:	fd 4f       	sbci	r31, 0xFD	; 253
     3a0:	80 81       	ld	r24, Z
     3a2:	90 91 09 02 	lds	r25, 0x0209
     3a6:	9f 3f       	cpi	r25, 0xFF	; 255
     3a8:	19 f4       	brne	.+6      	; 0x3b0 <dxl_hal_get_queue+0x26>
     3aa:	10 92 09 02 	sts	0x0209, r1
     3ae:	08 95       	ret
     3b0:	90 91 09 02 	lds	r25, 0x0209
     3b4:	9f 5f       	subi	r25, 0xFF	; 255
     3b6:	90 93 09 02 	sts	0x0209, r25
     3ba:	08 95       	ret
     3bc:	8f ef       	ldi	r24, 0xFF	; 255
     3be:	08 95       	ret

000003c0 <dxl_hal_rx>:
     3c0:	ef 92       	push	r14
     3c2:	ff 92       	push	r15
     3c4:	0f 93       	push	r16
     3c6:	1f 93       	push	r17
     3c8:	cf 93       	push	r28
     3ca:	df 93       	push	r29
     3cc:	08 2f       	mov	r16, r24
     3ce:	19 2f       	mov	r17, r25
     3d0:	eb 01       	movw	r28, r22
     3d2:	30 91 09 02 	lds	r19, 0x0209
     3d6:	20 91 08 02 	lds	r18, 0x0208
     3da:	32 17       	cp	r19, r18
     3dc:	a9 f0       	breq	.+42     	; 0x408 <dxl_hal_rx+0x48>
     3de:	99 df       	rcall	.-206    	; 0x312 <dxl_hal_get_qstate>
     3e0:	e8 2e       	mov	r14, r24
     3e2:	f9 2e       	mov	r15, r25
     3e4:	ce 15       	cp	r28, r14
     3e6:	df 05       	cpc	r29, r15
     3e8:	0c f4       	brge	.+2      	; 0x3ec <dxl_hal_rx+0x2c>
     3ea:	7e 01       	movw	r14, r28
     3ec:	1e 14       	cp	r1, r14
     3ee:	1f 04       	cpc	r1, r15
     3f0:	6c f4       	brge	.+26     	; 0x40c <dxl_hal_rx+0x4c>
     3f2:	c0 2f       	mov	r28, r16
     3f4:	d1 2f       	mov	r29, r17
     3f6:	8e 01       	movw	r16, r28
     3f8:	0e 0d       	add	r16, r14
     3fa:	1f 1d       	adc	r17, r15
     3fc:	c6 df       	rcall	.-116    	; 0x38a <dxl_hal_get_queue>
     3fe:	89 93       	st	Y+, r24
     400:	c0 17       	cp	r28, r16
     402:	d1 07       	cpc	r29, r17
     404:	d9 f7       	brne	.-10     	; 0x3fc <dxl_hal_rx+0x3c>
     406:	02 c0       	rjmp	.+4      	; 0x40c <dxl_hal_rx+0x4c>
     408:	e1 2c       	mov	r14, r1
	// numPacket: number of data array
	// Return: number of data recieved. -1 is error.
	int count, numgetbyte;
	
	if( gbDxlBufferHead == gbDxlBufferTail )
		return 0;
     40a:	f1 2c       	mov	r15, r1
	
	for( count=0; count<numgetbyte; count++ )
		pPacket[count] = dxl_hal_get_queue();
	
	return numgetbyte;
}
     40c:	8e 2d       	mov	r24, r14
     40e:	9f 2d       	mov	r25, r15
     410:	df 91       	pop	r29
     412:	cf 91       	pop	r28
     414:	1f 91       	pop	r17
     416:	0f 91       	pop	r16
     418:	ff 90       	pop	r15
     41a:	ef 90       	pop	r14
     41c:	08 95       	ret

0000041e <__vector_25>:
		
	return data;
}

SIGNAL(USART0_RX_vect)
{
     41e:	1f 92       	push	r1
     420:	0f 92       	push	r0
     422:	0f b6       	in	r0, 0x3f	; 63
     424:	0f 92       	push	r0
     426:	11 24       	eor	r1, r1
     428:	0b b6       	in	r0, 0x3b	; 59
     42a:	0f 92       	push	r0
     42c:	2f 93       	push	r18
     42e:	3f 93       	push	r19
     430:	4f 93       	push	r20
     432:	5f 93       	push	r21
     434:	6f 93       	push	r22
     436:	7f 93       	push	r23
     438:	8f 93       	push	r24
     43a:	9f 93       	push	r25
     43c:	af 93       	push	r26
     43e:	bf 93       	push	r27
     440:	ef 93       	push	r30
     442:	ff 93       	push	r31
	dxl_hal_put_queue( UDR0 );
     444:	80 91 c6 00 	lds	r24, 0x00C6
     448:	86 df       	rcall	.-244    	; 0x356 <dxl_hal_put_queue>
     44a:	ff 91       	pop	r31
     44c:	ef 91       	pop	r30
     44e:	bf 91       	pop	r27
     450:	af 91       	pop	r26
     452:	9f 91       	pop	r25
     454:	8f 91       	pop	r24
     456:	7f 91       	pop	r23
     458:	6f 91       	pop	r22
     45a:	5f 91       	pop	r21
     45c:	4f 91       	pop	r20
     45e:	3f 91       	pop	r19
     460:	2f 91       	pop	r18
     462:	0f 90       	pop	r0
     464:	0b be       	out	0x3b, r0	; 59
     466:	0f 90       	pop	r0
     468:	0f be       	out	0x3f, r0	; 63
     46a:	0f 90       	pop	r0
     46c:	1f 90       	pop	r1
     46e:	18 95       	reti

00000470 <dxl_initialize>:
	gbInstructionPacket[PARAMETER+1] = 2;
	gbInstructionPacket[LENGTH] = 4;
	
	dxl_txrx_packet();

	return dxl_makeword((int)gbStatusPacket[PARAMETER], (int)gbStatusPacket[PARAMETER+1]);
     470:	cf 93       	push	r28
     472:	df 93       	push	r29
     474:	ec 01       	movw	r28, r24
     476:	6f 5f       	subi	r22, 0xFF	; 255
     478:	7f 4f       	sbci	r23, 0xFF	; 255
     47a:	88 27       	eor	r24, r24
     47c:	77 fd       	sbrc	r23, 7
     47e:	80 95       	com	r24
     480:	98 2f       	mov	r25, r24
     482:	0e 94 84 11 	call	0x2308	; 0x2308 <__floatsisf>
     486:	9b 01       	movw	r18, r22
     488:	ac 01       	movw	r20, r24
     48a:	60 e0       	ldi	r22, 0x00	; 0
     48c:	74 e2       	ldi	r23, 0x24	; 36
     48e:	84 ef       	ldi	r24, 0xF4	; 244
     490:	99 e4       	ldi	r25, 0x49	; 73
     492:	0e 94 e9 10 	call	0x21d2	; 0x21d2 <__divsf3>
     496:	ab 01       	movw	r20, r22
     498:	bc 01       	movw	r22, r24
     49a:	ce 01       	movw	r24, r28
     49c:	72 de       	rcall	.-796    	; 0x182 <dxl_hal_open>
     49e:	89 2b       	or	r24, r25
     4a0:	69 f0       	breq	.+26     	; 0x4bc <dxl_initialize+0x4c>
     4a2:	81 e0       	ldi	r24, 0x01	; 1
     4a4:	90 e0       	ldi	r25, 0x00	; 0
     4a6:	90 93 07 02 	sts	0x0207, r25
     4aa:	80 93 06 02 	sts	0x0206, r24
     4ae:	10 92 0b 03 	sts	0x030B, r1
     4b2:	10 92 0a 03 	sts	0x030A, r1
     4b6:	21 e0       	ldi	r18, 0x01	; 1
     4b8:	30 e0       	ldi	r19, 0x00	; 0
     4ba:	02 c0       	rjmp	.+4      	; 0x4c0 <dxl_initialize+0x50>
     4bc:	20 e0       	ldi	r18, 0x00	; 0
     4be:	30 e0       	ldi	r19, 0x00	; 0
     4c0:	82 2f       	mov	r24, r18
     4c2:	93 2f       	mov	r25, r19
     4c4:	df 91       	pop	r29
     4c6:	cf 91       	pop	r28
     4c8:	08 95       	ret

000004ca <dxl_tx_packet>:
     4ca:	cf 93       	push	r28
     4cc:	80 91 0a 03 	lds	r24, 0x030A
     4d0:	90 91 0b 03 	lds	r25, 0x030B
     4d4:	01 97       	sbiw	r24, 0x01	; 1
     4d6:	09 f4       	brne	.+2      	; 0x4da <dxl_tx_packet+0x10>
     4d8:	73 c0       	rjmp	.+230    	; 0x5c0 <dxl_tx_packet+0xf6>
     4da:	81 e0       	ldi	r24, 0x01	; 1
     4dc:	90 e0       	ldi	r25, 0x00	; 0
     4de:	90 93 0b 03 	sts	0x030B, r25
     4e2:	80 93 0a 03 	sts	0x030A, r24
     4e6:	40 91 57 03 	lds	r20, 0x0357
     4ea:	49 39       	cpi	r20, 0x99	; 153
     4ec:	58 f0       	brcs	.+22     	; 0x504 <dxl_tx_packet+0x3a>
     4ee:	84 e0       	ldi	r24, 0x04	; 4
     4f0:	90 e0       	ldi	r25, 0x00	; 0
     4f2:	90 93 07 02 	sts	0x0207, r25
     4f6:	80 93 06 02 	sts	0x0206, r24
     4fa:	10 92 0b 03 	sts	0x030B, r1
     4fe:	10 92 0a 03 	sts	0x030A, r1
     502:	5e c0       	rjmp	.+188    	; 0x5c0 <dxl_tx_packet+0xf6>
     504:	80 91 58 03 	lds	r24, 0x0358
     508:	98 2f       	mov	r25, r24
     50a:	91 50       	subi	r25, 0x01	; 1
     50c:	96 30       	cpi	r25, 0x06	; 6
     50e:	68 f0       	brcs	.+26     	; 0x52a <dxl_tx_packet+0x60>
     510:	83 38       	cpi	r24, 0x83	; 131
     512:	59 f0       	breq	.+22     	; 0x52a <dxl_tx_packet+0x60>
     514:	84 e0       	ldi	r24, 0x04	; 4
     516:	90 e0       	ldi	r25, 0x00	; 0
     518:	90 93 07 02 	sts	0x0207, r25
     51c:	80 93 06 02 	sts	0x0206, r24
     520:	10 92 0b 03 	sts	0x030B, r1
     524:	10 92 0a 03 	sts	0x030A, r1
     528:	4b c0       	rjmp	.+150    	; 0x5c0 <dxl_tx_packet+0xf6>
     52a:	8f ef       	ldi	r24, 0xFF	; 255
     52c:	80 93 54 03 	sts	0x0354, r24
     530:	80 93 55 03 	sts	0x0355, r24
     534:	50 e0       	ldi	r21, 0x00	; 0
     536:	9a 01       	movw	r18, r20
     538:	2f 5f       	subi	r18, 0xFF	; 255
     53a:	3f 4f       	sbci	r19, 0xFF	; 255
     53c:	80 e0       	ldi	r24, 0x00	; 0
     53e:	90 e0       	ldi	r25, 0x00	; 0
     540:	70 e0       	ldi	r23, 0x00	; 0
     542:	60 e0       	ldi	r22, 0x00	; 0
     544:	fc 01       	movw	r30, r24
     546:	ec 5a       	subi	r30, 0xAC	; 172
     548:	fc 4f       	sbci	r31, 0xFC	; 252
     54a:	82 81       	ldd	r24, Z+2	; 0x02
     54c:	78 0f       	add	r23, r24
     54e:	6f 5f       	subi	r22, 0xFF	; 255
     550:	86 2f       	mov	r24, r22
     552:	90 e0       	ldi	r25, 0x00	; 0
     554:	82 17       	cp	r24, r18
     556:	93 07       	cpc	r25, r19
     558:	ac f3       	brlt	.-22     	; 0x544 <dxl_tx_packet+0x7a>
     55a:	fa 01       	movw	r30, r20
     55c:	ec 5a       	subi	r30, 0xAC	; 172
     55e:	fc 4f       	sbci	r31, 0xFC	; 252
     560:	70 95       	com	r23
     562:	73 83       	std	Z+3, r23	; 0x03
     564:	80 91 06 02 	lds	r24, 0x0206
     568:	90 91 07 02 	lds	r25, 0x0207
     56c:	06 97       	sbiw	r24, 0x06	; 6
     56e:	02 97       	sbiw	r24, 0x02	; 2
     570:	08 f4       	brcc	.+2      	; 0x574 <dxl_tx_packet+0xaa>
     572:	6c de       	rcall	.-808    	; 0x24c <dxl_hal_clear>
     574:	c0 91 57 03 	lds	r28, 0x0357
     578:	cc 5f       	subi	r28, 0xFC	; 252
     57a:	6c 2f       	mov	r22, r28
     57c:	70 e0       	ldi	r23, 0x00	; 0
     57e:	84 e5       	ldi	r24, 0x54	; 84
     580:	93 e0       	ldi	r25, 0x03	; 3
     582:	69 de       	rcall	.-814    	; 0x256 <dxl_hal_tx>
     584:	c8 17       	cp	r28, r24
     586:	59 f0       	breq	.+22     	; 0x59e <dxl_tx_packet+0xd4>
     588:	82 e0       	ldi	r24, 0x02	; 2
     58a:	90 e0       	ldi	r25, 0x00	; 0
     58c:	90 93 07 02 	sts	0x0207, r25
     590:	80 93 06 02 	sts	0x0206, r24
     594:	10 92 0b 03 	sts	0x030B, r1
     598:	10 92 0a 03 	sts	0x030A, r1
     59c:	11 c0       	rjmp	.+34     	; 0x5c0 <dxl_tx_packet+0xf6>
     59e:	80 91 58 03 	lds	r24, 0x0358
     5a2:	82 30       	cpi	r24, 0x02	; 2
     5a4:	31 f4       	brne	.+12     	; 0x5b2 <dxl_tx_packet+0xe8>
     5a6:	80 91 5a 03 	lds	r24, 0x035A
     5aa:	90 e0       	ldi	r25, 0x00	; 0
     5ac:	06 96       	adiw	r24, 0x06	; 6
     5ae:	7f de       	rcall	.-770    	; 0x2ae <dxl_hal_set_timeout>
     5b0:	03 c0       	rjmp	.+6      	; 0x5b8 <dxl_tx_packet+0xee>
     5b2:	86 e0       	ldi	r24, 0x06	; 6
     5b4:	90 e0       	ldi	r25, 0x00	; 0
     5b6:	7b de       	rcall	.-778    	; 0x2ae <dxl_hal_set_timeout>
     5b8:	10 92 07 02 	sts	0x0207, r1
     5bc:	10 92 06 02 	sts	0x0206, r1
     5c0:	cf 91       	pop	r28
     5c2:	08 95       	ret

000005c4 <dxl_rx_packet>:
     5c4:	cf 93       	push	r28
     5c6:	df 93       	push	r29
     5c8:	80 91 0a 03 	lds	r24, 0x030A
     5cc:	90 91 0b 03 	lds	r25, 0x030B
     5d0:	89 2b       	or	r24, r25
     5d2:	09 f4       	brne	.+2      	; 0x5d6 <dxl_rx_packet+0x12>
     5d4:	fe c0       	rjmp	.+508    	; 0x7d2 <dxl_rx_packet+0x20e>
     5d6:	80 91 56 03 	lds	r24, 0x0356
     5da:	8e 3f       	cpi	r24, 0xFE	; 254
     5dc:	59 f4       	brne	.+22     	; 0x5f4 <dxl_rx_packet+0x30>
     5de:	81 e0       	ldi	r24, 0x01	; 1
     5e0:	90 e0       	ldi	r25, 0x00	; 0
     5e2:	90 93 07 02 	sts	0x0207, r25
     5e6:	80 93 06 02 	sts	0x0206, r24
     5ea:	10 92 0b 03 	sts	0x030B, r1
     5ee:	10 92 0a 03 	sts	0x030A, r1
     5f2:	ef c0       	rjmp	.+478    	; 0x7d2 <dxl_rx_packet+0x20e>
     5f4:	80 91 06 02 	lds	r24, 0x0206
     5f8:	90 91 07 02 	lds	r25, 0x0207
     5fc:	89 2b       	or	r24, r25
     5fe:	29 f4       	brne	.+10     	; 0x60a <dxl_rx_packet+0x46>
     600:	10 92 0c 03 	sts	0x030C, r1
     604:	86 e0       	ldi	r24, 0x06	; 6
     606:	80 93 0d 03 	sts	0x030D, r24
     60a:	80 91 0c 03 	lds	r24, 0x030C
     60e:	90 e0       	ldi	r25, 0x00	; 0
     610:	60 91 0d 03 	lds	r22, 0x030D
     614:	70 e0       	ldi	r23, 0x00	; 0
     616:	68 1b       	sub	r22, r24
     618:	79 0b       	sbc	r23, r25
     61a:	82 5f       	subi	r24, 0xF2	; 242
     61c:	9c 4f       	sbci	r25, 0xFC	; 252
     61e:	d0 de       	rcall	.-608    	; 0x3c0 <dxl_hal_rx>
     620:	90 91 0c 03 	lds	r25, 0x030C
     624:	89 0f       	add	r24, r25
     626:	80 93 0c 03 	sts	0x030C, r24
     62a:	90 91 0d 03 	lds	r25, 0x030D
     62e:	89 17       	cp	r24, r25
     630:	c8 f4       	brcc	.+50     	; 0x664 <dxl_rx_packet+0xa0>
     632:	4e de       	rcall	.-868    	; 0x2d0 <dxl_hal_timeout>
     634:	01 97       	sbiw	r24, 0x01	; 1
     636:	b1 f4       	brne	.+44     	; 0x664 <dxl_rx_packet+0xa0>
     638:	80 91 0c 03 	lds	r24, 0x030C
     63c:	81 11       	cpse	r24, r1
     63e:	07 c0       	rjmp	.+14     	; 0x64e <dxl_rx_packet+0x8a>
     640:	86 e0       	ldi	r24, 0x06	; 6
     642:	90 e0       	ldi	r25, 0x00	; 0
     644:	90 93 07 02 	sts	0x0207, r25
     648:	80 93 06 02 	sts	0x0206, r24
     64c:	06 c0       	rjmp	.+12     	; 0x65a <dxl_rx_packet+0x96>
     64e:	87 e0       	ldi	r24, 0x07	; 7
     650:	90 e0       	ldi	r25, 0x00	; 0
     652:	90 93 07 02 	sts	0x0207, r25
     656:	80 93 06 02 	sts	0x0206, r24
     65a:	10 92 0b 03 	sts	0x030B, r1
     65e:	10 92 0a 03 	sts	0x030A, r1
     662:	b7 c0       	rjmp	.+366    	; 0x7d2 <dxl_rx_packet+0x20e>
     664:	d0 91 0c 03 	lds	r29, 0x030C
     668:	6d 2f       	mov	r22, r29
     66a:	70 e0       	ldi	r23, 0x00	; 0
     66c:	9b 01       	movw	r18, r22
     66e:	21 50       	subi	r18, 0x01	; 1
     670:	31 09       	sbc	r19, r1
     672:	12 16       	cp	r1, r18
     674:	13 06       	cpc	r1, r19
     676:	0c f0       	brlt	.+2      	; 0x67a <dxl_rx_packet+0xb6>
     678:	3f c0       	rjmp	.+126    	; 0x6f8 <dxl_rx_packet+0x134>
     67a:	80 e0       	ldi	r24, 0x00	; 0
     67c:	90 e0       	ldi	r25, 0x00	; 0
     67e:	c0 e0       	ldi	r28, 0x00	; 0
     680:	ab 01       	movw	r20, r22
     682:	42 50       	subi	r20, 0x02	; 2
     684:	51 09       	sbc	r21, r1
     686:	d9 01       	movw	r26, r18
     688:	a2 5f       	subi	r26, 0xF2	; 242
     68a:	bc 4f       	sbci	r27, 0xFC	; 252
     68c:	fc 01       	movw	r30, r24
     68e:	e2 5f       	subi	r30, 0xF2	; 242
     690:	fc 4f       	sbci	r31, 0xFC	; 252
     692:	e0 81       	ld	r30, Z
     694:	ef 3f       	cpi	r30, 0xFF	; 255
     696:	31 f4       	brne	.+12     	; 0x6a4 <dxl_rx_packet+0xe0>
     698:	fc 01       	movw	r30, r24
     69a:	e2 5f       	subi	r30, 0xF2	; 242
     69c:	fc 4f       	sbci	r31, 0xFC	; 252
     69e:	e1 81       	ldd	r30, Z+1	; 0x01
     6a0:	ef 3f       	cpi	r30, 0xFF	; 255
     6a2:	61 f0       	breq	.+24     	; 0x6bc <dxl_rx_packet+0xf8>
     6a4:	84 17       	cp	r24, r20
     6a6:	95 07       	cpc	r25, r21
     6a8:	19 f4       	brne	.+6      	; 0x6b0 <dxl_rx_packet+0xec>
     6aa:	ec 91       	ld	r30, X
     6ac:	ef 3f       	cpi	r30, 0xFF	; 255
     6ae:	31 f0       	breq	.+12     	; 0x6bc <dxl_rx_packet+0xf8>
     6b0:	cf 5f       	subi	r28, 0xFF	; 255
     6b2:	8c 2f       	mov	r24, r28
     6b4:	90 e0       	ldi	r25, 0x00	; 0
     6b6:	82 17       	cp	r24, r18
     6b8:	93 07       	cpc	r25, r19
     6ba:	44 f3       	brlt	.-48     	; 0x68c <dxl_rx_packet+0xc8>
     6bc:	cc 23       	and	r28, r28
     6be:	e1 f0       	breq	.+56     	; 0x6f8 <dxl_rx_packet+0x134>
     6c0:	ab 01       	movw	r20, r22
     6c2:	48 1b       	sub	r20, r24
     6c4:	59 0b       	sbc	r21, r25
     6c6:	14 16       	cp	r1, r20
     6c8:	15 06       	cpc	r1, r21
     6ca:	9c f4       	brge	.+38     	; 0x6f2 <dxl_rx_packet+0x12e>
     6cc:	20 e0       	ldi	r18, 0x00	; 0
     6ce:	30 e0       	ldi	r19, 0x00	; 0
     6d0:	60 e0       	ldi	r22, 0x00	; 0
     6d2:	82 5f       	subi	r24, 0xF2	; 242
     6d4:	9c 4f       	sbci	r25, 0xFC	; 252
     6d6:	fc 01       	movw	r30, r24
     6d8:	e2 0f       	add	r30, r18
     6da:	f3 1f       	adc	r31, r19
     6dc:	70 81       	ld	r23, Z
     6de:	f9 01       	movw	r30, r18
     6e0:	e2 5f       	subi	r30, 0xF2	; 242
     6e2:	fc 4f       	sbci	r31, 0xFC	; 252
     6e4:	70 83       	st	Z, r23
     6e6:	6f 5f       	subi	r22, 0xFF	; 255
     6e8:	26 2f       	mov	r18, r22
     6ea:	30 e0       	ldi	r19, 0x00	; 0
     6ec:	24 17       	cp	r18, r20
     6ee:	35 07       	cpc	r19, r21
     6f0:	94 f3       	brlt	.-28     	; 0x6d6 <dxl_rx_packet+0x112>
     6f2:	dc 1b       	sub	r29, r28
     6f4:	d0 93 0c 03 	sts	0x030C, r29
     6f8:	80 91 0c 03 	lds	r24, 0x030C
     6fc:	90 91 0d 03 	lds	r25, 0x030D
     700:	89 17       	cp	r24, r25
     702:	38 f4       	brcc	.+14     	; 0x712 <dxl_rx_packet+0x14e>
     704:	85 e0       	ldi	r24, 0x05	; 5
     706:	90 e0       	ldi	r25, 0x00	; 0
     708:	90 93 07 02 	sts	0x0207, r25
     70c:	80 93 06 02 	sts	0x0206, r24
     710:	60 c0       	rjmp	.+192    	; 0x7d2 <dxl_rx_packet+0x20e>
     712:	20 91 56 03 	lds	r18, 0x0356
     716:	90 91 10 03 	lds	r25, 0x0310
     71a:	29 17       	cp	r18, r25
     71c:	59 f0       	breq	.+22     	; 0x734 <dxl_rx_packet+0x170>
     71e:	87 e0       	ldi	r24, 0x07	; 7
     720:	90 e0       	ldi	r25, 0x00	; 0
     722:	90 93 07 02 	sts	0x0207, r25
     726:	80 93 06 02 	sts	0x0206, r24
     72a:	10 92 0b 03 	sts	0x030B, r1
     72e:	10 92 0a 03 	sts	0x030A, r1
     732:	4f c0       	rjmp	.+158    	; 0x7d2 <dxl_rx_packet+0x20e>
     734:	60 91 11 03 	lds	r22, 0x0311
     738:	6c 5f       	subi	r22, 0xFC	; 252
     73a:	60 93 0d 03 	sts	0x030D, r22
     73e:	86 17       	cp	r24, r22
     740:	b8 f4       	brcc	.+46     	; 0x770 <dxl_rx_packet+0x1ac>
     742:	90 e0       	ldi	r25, 0x00	; 0
     744:	70 e0       	ldi	r23, 0x00	; 0
     746:	68 1b       	sub	r22, r24
     748:	79 0b       	sbc	r23, r25
     74a:	82 5f       	subi	r24, 0xF2	; 242
     74c:	9c 4f       	sbci	r25, 0xFC	; 252
     74e:	38 de       	rcall	.-912    	; 0x3c0 <dxl_hal_rx>
     750:	90 91 0c 03 	lds	r25, 0x030C
     754:	89 0f       	add	r24, r25
     756:	80 93 0c 03 	sts	0x030C, r24
     75a:	90 91 0d 03 	lds	r25, 0x030D
     75e:	89 17       	cp	r24, r25
     760:	38 f4       	brcc	.+14     	; 0x770 <dxl_rx_packet+0x1ac>
     762:	85 e0       	ldi	r24, 0x05	; 5
     764:	90 e0       	ldi	r25, 0x00	; 0
     766:	90 93 07 02 	sts	0x0207, r25
     76a:	80 93 06 02 	sts	0x0206, r24
     76e:	31 c0       	rjmp	.+98     	; 0x7d2 <dxl_rx_packet+0x20e>
     770:	40 91 11 03 	lds	r20, 0x0311
     774:	50 e0       	ldi	r21, 0x00	; 0
     776:	9a 01       	movw	r18, r20
     778:	2f 5f       	subi	r18, 0xFF	; 255
     77a:	3f 4f       	sbci	r19, 0xFF	; 255
     77c:	80 e0       	ldi	r24, 0x00	; 0
     77e:	90 e0       	ldi	r25, 0x00	; 0
     780:	70 e0       	ldi	r23, 0x00	; 0
     782:	60 e0       	ldi	r22, 0x00	; 0
     784:	fc 01       	movw	r30, r24
     786:	e2 5f       	subi	r30, 0xF2	; 242
     788:	fc 4f       	sbci	r31, 0xFC	; 252
     78a:	82 81       	ldd	r24, Z+2	; 0x02
     78c:	78 0f       	add	r23, r24
     78e:	6f 5f       	subi	r22, 0xFF	; 255
     790:	86 2f       	mov	r24, r22
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 17       	cp	r24, r18
     796:	93 07       	cpc	r25, r19
     798:	ac f3       	brlt	.-22     	; 0x784 <dxl_rx_packet+0x1c0>
     79a:	fa 01       	movw	r30, r20
     79c:	e2 5f       	subi	r30, 0xF2	; 242
     79e:	fc 4f       	sbci	r31, 0xFC	; 252
     7a0:	70 95       	com	r23
     7a2:	83 81       	ldd	r24, Z+3	; 0x03
     7a4:	87 17       	cp	r24, r23
     7a6:	59 f0       	breq	.+22     	; 0x7be <dxl_rx_packet+0x1fa>
     7a8:	87 e0       	ldi	r24, 0x07	; 7
     7aa:	90 e0       	ldi	r25, 0x00	; 0
     7ac:	90 93 07 02 	sts	0x0207, r25
     7b0:	80 93 06 02 	sts	0x0206, r24
     7b4:	10 92 0b 03 	sts	0x030B, r1
     7b8:	10 92 0a 03 	sts	0x030A, r1
     7bc:	0a c0       	rjmp	.+20     	; 0x7d2 <dxl_rx_packet+0x20e>
     7be:	81 e0       	ldi	r24, 0x01	; 1
     7c0:	90 e0       	ldi	r25, 0x00	; 0
     7c2:	90 93 07 02 	sts	0x0207, r25
     7c6:	80 93 06 02 	sts	0x0206, r24
     7ca:	10 92 0b 03 	sts	0x030B, r1
     7ce:	10 92 0a 03 	sts	0x030A, r1
     7d2:	df 91       	pop	r29
     7d4:	cf 91       	pop	r28
     7d6:	08 95       	ret

000007d8 <dxl_txrx_packet>:
     7d8:	78 de       	rcall	.-784    	; 0x4ca <dxl_tx_packet>
     7da:	80 91 06 02 	lds	r24, 0x0206
     7de:	90 91 07 02 	lds	r25, 0x0207
     7e2:	89 2b       	or	r24, r25
     7e4:	39 f4       	brne	.+14     	; 0x7f4 <dxl_txrx_packet+0x1c>
     7e6:	ee de       	rcall	.-548    	; 0x5c4 <dxl_rx_packet>
     7e8:	80 91 06 02 	lds	r24, 0x0206
     7ec:	90 91 07 02 	lds	r25, 0x0207
     7f0:	05 97       	sbiw	r24, 0x05	; 5
     7f2:	c9 f3       	breq	.-14     	; 0x7e6 <dxl_txrx_packet+0xe>
     7f4:	08 95       	ret

000007f6 <dxl_get_lowbyte>:
     7f6:	9c 01       	movw	r18, r24
     7f8:	33 27       	eor	r19, r19
     7fa:	82 2f       	mov	r24, r18
     7fc:	93 2f       	mov	r25, r19
     7fe:	08 95       	ret

00000800 <dxl_get_highbyte>:
     800:	88 27       	eor	r24, r24
     802:	89 2f       	mov	r24, r25
     804:	90 e0       	ldi	r25, 0x00	; 0
     806:	08 95       	ret

00000808 <dxl_write_word>:
}

void dxl_write_word( int id, int address, int value )
{
     808:	cf 93       	push	r28
     80a:	df 93       	push	r29
     80c:	ea 01       	movw	r28, r20
	while(giBusUsing);
     80e:	20 91 0a 03 	lds	r18, 0x030A
     812:	30 91 0b 03 	lds	r19, 0x030B
     816:	23 2b       	or	r18, r19
     818:	a1 f4       	brne	.+40     	; 0x842 <dxl_write_word+0x3a>

	gbInstructionPacket[ID] = (unsigned char)id;
     81a:	80 93 56 03 	sts	0x0356, r24
	gbInstructionPacket[INSTRUCTION] = INST_WRITE;
     81e:	83 e0       	ldi	r24, 0x03	; 3
     820:	80 93 58 03 	sts	0x0358, r24
	gbInstructionPacket[PARAMETER] = (unsigned char)address;
     824:	60 93 59 03 	sts	0x0359, r22
	gbInstructionPacket[PARAMETER+1] = (unsigned char)dxl_get_lowbyte(value);
     828:	ca 01       	movw	r24, r20
     82a:	e5 df       	rcall	.-54     	; 0x7f6 <dxl_get_lowbyte>
     82c:	80 93 5a 03 	sts	0x035A, r24
	gbInstructionPacket[PARAMETER+2] = (unsigned char)dxl_get_highbyte(value);
     830:	ce 01       	movw	r24, r28
     832:	e6 df       	rcall	.-52     	; 0x800 <dxl_get_highbyte>
     834:	80 93 5b 03 	sts	0x035B, r24
	gbInstructionPacket[LENGTH] = 5;
     838:	85 e0       	ldi	r24, 0x05	; 5
     83a:	80 93 57 03 	sts	0x0357, r24
	
	dxl_txrx_packet();
     83e:	cc df       	rcall	.-104    	; 0x7d8 <dxl_txrx_packet>
     840:	01 c0       	rjmp	.+2      	; 0x844 <dxl_write_word+0x3c>
     842:	ff cf       	rjmp	.-2      	; 0x842 <dxl_write_word+0x3a>
}
     844:	df 91       	pop	r29
     846:	cf 91       	pop	r28
     848:	08 95       	ret

0000084a <main>:
#include "serial.h"
#include "dynamixel.h"

Leg legs[7];

int main(void) {
     84a:	cf 92       	push	r12
     84c:	df 92       	push	r13
     84e:	ef 92       	push	r14
     850:	ff 92       	push	r15
     852:	0f 93       	push	r16
     854:	1f 93       	push	r17
	
	serial_initialize(57600);
     856:	60 e0       	ldi	r22, 0x00	; 0
     858:	71 ee       	ldi	r23, 0xE1	; 225
     85a:	80 e0       	ldi	r24, 0x00	; 0
     85c:	90 e0       	ldi	r25, 0x00	; 0
     85e:	0e 94 21 0f 	call	0x1e42	; 0x1e42 <serial_initialize>
	dxl_initialize(0, DEFAULT_BAUDNUM);
     862:	61 e0       	ldi	r22, 0x01	; 1
     864:	70 e0       	ldi	r23, 0x00	; 0
     866:	80 e0       	ldi	r24, 0x00	; 0
     868:	90 e0       	ldi	r25, 0x00	; 0
     86a:	02 de       	rcall	.-1020   	; 0x470 <dxl_initialize>
	sei();
     86c:	78 94       	sei
		
		
	initializeLegs();
     86e:	0e 94 c2 0e 	call	0x1d84	; 0x1d84 <initializeLegs>
	assignLegs(legs);
     872:	86 e8       	ldi	r24, 0x86	; 134
     874:	94 e0       	ldi	r25, 0x04	; 4
     876:	0e 94 18 0e 	call	0x1c30	; 0x1c30 <assignLegs>
		
	dxl_write_word(BROADCAST_ID, P_GOAL_SPEED_L, 700);
     87a:	4c eb       	ldi	r20, 0xBC	; 188
     87c:	52 e0       	ldi	r21, 0x02	; 2
     87e:	60 e2       	ldi	r22, 0x20	; 32
     880:	70 e0       	ldi	r23, 0x00	; 0
     882:	8e ef       	ldi	r24, 0xFE	; 254
     884:	90 e0       	ldi	r25, 0x00	; 0
     886:	c0 df       	rcall	.-128    	; 0x808 <dxl_write_word>
	dxl_write_word(BROADCAST_ID, P_GOAL_TORQUE_L, 600);
     888:	48 e5       	ldi	r20, 0x58	; 88
     88a:	52 e0       	ldi	r21, 0x02	; 2
     88c:	62 e2       	ldi	r22, 0x22	; 34
     88e:	70 e0       	ldi	r23, 0x00	; 0
     890:	8e ef       	ldi	r24, 0xFE	; 254
     892:	90 e0       	ldi	r25, 0x00	; 0
     894:	b9 df       	rcall	.-142    	; 0x808 <dxl_write_word>
		
	// stand up
	
	double y_const = 11, x_const = 2.5, z_const = 5, z_raise = -1;
	
	stand_up();	
     896:	0e 94 74 0d 	call	0x1ae8	; 0x1ae8 <stand_up>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     89a:	2f ef       	ldi	r18, 0xFF	; 255
     89c:	8d e3       	ldi	r24, 0x3D	; 61
     89e:	99 e4       	ldi	r25, 0x49	; 73
     8a0:	21 50       	subi	r18, 0x01	; 1
     8a2:	80 40       	sbci	r24, 0x00	; 0
     8a4:	90 40       	sbci	r25, 0x00	; 0
     8a6:	e1 f7       	brne	.-8      	; 0x8a0 <main+0x56>
     8a8:	00 c0       	rjmp	.+0      	; 0x8aa <main+0x60>
     8aa:	00 00       	nop
	
	// cycle begins here
	
	// raise 1, 3, 5
	
	get_to_point(1, 0, -y_const, z_raise);
     8ac:	0f 2e       	mov	r0, r31
     8ae:	c1 2c       	mov	r12, r1
     8b0:	d1 2c       	mov	r13, r1
     8b2:	f0 e8       	ldi	r31, 0x80	; 128
     8b4:	ef 2e       	mov	r14, r31
     8b6:	ff eb       	ldi	r31, 0xBF	; 191
     8b8:	ff 2e       	mov	r15, r31
     8ba:	f0 2d       	mov	r31, r0
     8bc:	00 e0       	ldi	r16, 0x00	; 0
     8be:	10 e0       	ldi	r17, 0x00	; 0
     8c0:	20 e3       	ldi	r18, 0x30	; 48
     8c2:	31 ec       	ldi	r19, 0xC1	; 193
     8c4:	40 e0       	ldi	r20, 0x00	; 0
     8c6:	50 e0       	ldi	r21, 0x00	; 0
     8c8:	ba 01       	movw	r22, r20
     8ca:	81 e0       	ldi	r24, 0x01	; 1
     8cc:	90 e0       	ldi	r25, 0x00	; 0
     8ce:	84 d4       	rcall	.+2312   	; 0x11d8 <get_to_point>
	get_to_point(3, 0, -y_const, z_raise);
     8d0:	00 e0       	ldi	r16, 0x00	; 0
     8d2:	10 e0       	ldi	r17, 0x00	; 0
     8d4:	20 e3       	ldi	r18, 0x30	; 48
     8d6:	31 ec       	ldi	r19, 0xC1	; 193
     8d8:	40 e0       	ldi	r20, 0x00	; 0
     8da:	50 e0       	ldi	r21, 0x00	; 0
     8dc:	ba 01       	movw	r22, r20
     8de:	83 e0       	ldi	r24, 0x03	; 3
     8e0:	90 e0       	ldi	r25, 0x00	; 0
     8e2:	7a d4       	rcall	.+2292   	; 0x11d8 <get_to_point>
	get_to_point(5, 0, y_const, z_raise);
     8e4:	00 e0       	ldi	r16, 0x00	; 0
     8e6:	10 e0       	ldi	r17, 0x00	; 0
     8e8:	20 e3       	ldi	r18, 0x30	; 48
     8ea:	31 e4       	ldi	r19, 0x41	; 65
     8ec:	40 e0       	ldi	r20, 0x00	; 0
     8ee:	50 e0       	ldi	r21, 0x00	; 0
     8f0:	ba 01       	movw	r22, r20
     8f2:	85 e0       	ldi	r24, 0x05	; 5
     8f4:	90 e0       	ldi	r25, 0x00	; 0
     8f6:	70 d4       	rcall	.+2272   	; 0x11d8 <get_to_point>
     8f8:	2f ef       	ldi	r18, 0xFF	; 255
     8fa:	8d e3       	ldi	r24, 0x3D	; 61
     8fc:	99 e4       	ldi	r25, 0x49	; 73
     8fe:	21 50       	subi	r18, 0x01	; 1
     900:	80 40       	sbci	r24, 0x00	; 0
     902:	90 40       	sbci	r25, 0x00	; 0
     904:	e1 f7       	brne	.-8      	; 0x8fe <main+0xb4>
     906:	00 c0       	rjmp	.+0      	; 0x908 <main+0xbe>
     908:	00 00       	nop
	
	_delay_ms(2000);
	
	// move 1,3,5 forward and 2,4,6 backward
	
	get_to_point(1, x_const, -y_const, z_raise);
     90a:	00 e0       	ldi	r16, 0x00	; 0
     90c:	10 e0       	ldi	r17, 0x00	; 0
     90e:	20 e3       	ldi	r18, 0x30	; 48
     910:	31 ec       	ldi	r19, 0xC1	; 193
     912:	40 e0       	ldi	r20, 0x00	; 0
     914:	50 e0       	ldi	r21, 0x00	; 0
     916:	60 e2       	ldi	r22, 0x20	; 32
     918:	70 e4       	ldi	r23, 0x40	; 64
     91a:	81 e0       	ldi	r24, 0x01	; 1
     91c:	90 e0       	ldi	r25, 0x00	; 0
     91e:	5c d4       	rcall	.+2232   	; 0x11d8 <get_to_point>
	get_to_point(3, x_const, -y_const, z_raise);
     920:	00 e0       	ldi	r16, 0x00	; 0
     922:	10 e0       	ldi	r17, 0x00	; 0
     924:	20 e3       	ldi	r18, 0x30	; 48
     926:	31 ec       	ldi	r19, 0xC1	; 193
     928:	40 e0       	ldi	r20, 0x00	; 0
     92a:	50 e0       	ldi	r21, 0x00	; 0
     92c:	60 e2       	ldi	r22, 0x20	; 32
     92e:	70 e4       	ldi	r23, 0x40	; 64
     930:	83 e0       	ldi	r24, 0x03	; 3
     932:	90 e0       	ldi	r25, 0x00	; 0
     934:	51 d4       	rcall	.+2210   	; 0x11d8 <get_to_point>
	get_to_point(5, x_const, y_const, z_raise);
     936:	00 e0       	ldi	r16, 0x00	; 0
     938:	10 e0       	ldi	r17, 0x00	; 0
     93a:	20 e3       	ldi	r18, 0x30	; 48
     93c:	31 e4       	ldi	r19, 0x41	; 65
     93e:	40 e0       	ldi	r20, 0x00	; 0
     940:	50 e0       	ldi	r21, 0x00	; 0
     942:	60 e2       	ldi	r22, 0x20	; 32
     944:	70 e4       	ldi	r23, 0x40	; 64
     946:	85 e0       	ldi	r24, 0x05	; 5
     948:	90 e0       	ldi	r25, 0x00	; 0
     94a:	46 d4       	rcall	.+2188   	; 0x11d8 <get_to_point>
	
	get_to_point(2, -x_const, -y_const, z_const);
     94c:	0f 2e       	mov	r0, r31
     94e:	c1 2c       	mov	r12, r1
     950:	d1 2c       	mov	r13, r1
     952:	f0 ea       	ldi	r31, 0xA0	; 160
     954:	ef 2e       	mov	r14, r31
     956:	f0 e4       	ldi	r31, 0x40	; 64
     958:	ff 2e       	mov	r15, r31
     95a:	f0 2d       	mov	r31, r0
     95c:	00 e0       	ldi	r16, 0x00	; 0
     95e:	10 e0       	ldi	r17, 0x00	; 0
     960:	20 e3       	ldi	r18, 0x30	; 48
     962:	31 ec       	ldi	r19, 0xC1	; 193
     964:	40 e0       	ldi	r20, 0x00	; 0
     966:	50 e0       	ldi	r21, 0x00	; 0
     968:	60 e2       	ldi	r22, 0x20	; 32
     96a:	70 ec       	ldi	r23, 0xC0	; 192
     96c:	82 e0       	ldi	r24, 0x02	; 2
     96e:	90 e0       	ldi	r25, 0x00	; 0
     970:	33 d4       	rcall	.+2150   	; 0x11d8 <get_to_point>
	get_to_point(4, -x_const, y_const, z_const);
     972:	00 e0       	ldi	r16, 0x00	; 0
     974:	10 e0       	ldi	r17, 0x00	; 0
     976:	20 e3       	ldi	r18, 0x30	; 48
     978:	31 e4       	ldi	r19, 0x41	; 65
     97a:	40 e0       	ldi	r20, 0x00	; 0
     97c:	50 e0       	ldi	r21, 0x00	; 0
     97e:	60 e2       	ldi	r22, 0x20	; 32
     980:	70 ec       	ldi	r23, 0xC0	; 192
     982:	84 e0       	ldi	r24, 0x04	; 4
     984:	90 e0       	ldi	r25, 0x00	; 0
     986:	28 d4       	rcall	.+2128   	; 0x11d8 <get_to_point>
	get_to_point(6, -x_const, y_const, z_const);
     988:	00 e0       	ldi	r16, 0x00	; 0
     98a:	10 e0       	ldi	r17, 0x00	; 0
     98c:	20 e3       	ldi	r18, 0x30	; 48
     98e:	31 e4       	ldi	r19, 0x41	; 65
     990:	40 e0       	ldi	r20, 0x00	; 0
     992:	50 e0       	ldi	r21, 0x00	; 0
     994:	60 e2       	ldi	r22, 0x20	; 32
     996:	70 ec       	ldi	r23, 0xC0	; 192
     998:	86 e0       	ldi	r24, 0x06	; 6
     99a:	90 e0       	ldi	r25, 0x00	; 0
     99c:	1d d4       	rcall	.+2106   	; 0x11d8 <get_to_point>
     99e:	2f ef       	ldi	r18, 0xFF	; 255
     9a0:	8d e3       	ldi	r24, 0x3D	; 61
     9a2:	99 e4       	ldi	r25, 0x49	; 73
     9a4:	21 50       	subi	r18, 0x01	; 1
     9a6:	80 40       	sbci	r24, 0x00	; 0
     9a8:	90 40       	sbci	r25, 0x00	; 0
     9aa:	e1 f7       	brne	.-8      	; 0x9a4 <main+0x15a>
     9ac:	00 c0       	rjmp	.+0      	; 0x9ae <main+0x164>
     9ae:	00 00       	nop
	_delay_ms(2000);
	
	// lower 1,3,5 and raise 2,4,6
	
	
	get_to_point(1, x_const, -y_const, z_const);
     9b0:	00 e0       	ldi	r16, 0x00	; 0
     9b2:	10 e0       	ldi	r17, 0x00	; 0
     9b4:	20 e3       	ldi	r18, 0x30	; 48
     9b6:	31 ec       	ldi	r19, 0xC1	; 193
     9b8:	40 e0       	ldi	r20, 0x00	; 0
     9ba:	50 e0       	ldi	r21, 0x00	; 0
     9bc:	60 e2       	ldi	r22, 0x20	; 32
     9be:	70 e4       	ldi	r23, 0x40	; 64
     9c0:	81 e0       	ldi	r24, 0x01	; 1
     9c2:	90 e0       	ldi	r25, 0x00	; 0
     9c4:	09 d4       	rcall	.+2066   	; 0x11d8 <get_to_point>
	get_to_point(3, x_const, -y_const, z_const);
     9c6:	00 e0       	ldi	r16, 0x00	; 0
     9c8:	10 e0       	ldi	r17, 0x00	; 0
     9ca:	20 e3       	ldi	r18, 0x30	; 48
     9cc:	31 ec       	ldi	r19, 0xC1	; 193
     9ce:	40 e0       	ldi	r20, 0x00	; 0
     9d0:	50 e0       	ldi	r21, 0x00	; 0
     9d2:	60 e2       	ldi	r22, 0x20	; 32
     9d4:	70 e4       	ldi	r23, 0x40	; 64
     9d6:	83 e0       	ldi	r24, 0x03	; 3
     9d8:	90 e0       	ldi	r25, 0x00	; 0
     9da:	fe d3       	rcall	.+2044   	; 0x11d8 <get_to_point>
	get_to_point(5, x_const, y_const, z_const);
     9dc:	00 e0       	ldi	r16, 0x00	; 0
     9de:	10 e0       	ldi	r17, 0x00	; 0
     9e0:	20 e3       	ldi	r18, 0x30	; 48
     9e2:	31 e4       	ldi	r19, 0x41	; 65
     9e4:	40 e0       	ldi	r20, 0x00	; 0
     9e6:	50 e0       	ldi	r21, 0x00	; 0
     9e8:	60 e2       	ldi	r22, 0x20	; 32
     9ea:	70 e4       	ldi	r23, 0x40	; 64
     9ec:	85 e0       	ldi	r24, 0x05	; 5
     9ee:	90 e0       	ldi	r25, 0x00	; 0
     9f0:	f3 d3       	rcall	.+2022   	; 0x11d8 <get_to_point>
	
	get_to_point(2, -x_const, -y_const, z_raise);
     9f2:	0f 2e       	mov	r0, r31
     9f4:	c1 2c       	mov	r12, r1
     9f6:	d1 2c       	mov	r13, r1
     9f8:	f0 e8       	ldi	r31, 0x80	; 128
     9fa:	ef 2e       	mov	r14, r31
     9fc:	ff eb       	ldi	r31, 0xBF	; 191
     9fe:	ff 2e       	mov	r15, r31
     a00:	f0 2d       	mov	r31, r0
     a02:	00 e0       	ldi	r16, 0x00	; 0
     a04:	10 e0       	ldi	r17, 0x00	; 0
     a06:	20 e3       	ldi	r18, 0x30	; 48
     a08:	31 ec       	ldi	r19, 0xC1	; 193
     a0a:	40 e0       	ldi	r20, 0x00	; 0
     a0c:	50 e0       	ldi	r21, 0x00	; 0
     a0e:	60 e2       	ldi	r22, 0x20	; 32
     a10:	70 ec       	ldi	r23, 0xC0	; 192
     a12:	82 e0       	ldi	r24, 0x02	; 2
     a14:	90 e0       	ldi	r25, 0x00	; 0
     a16:	e0 d3       	rcall	.+1984   	; 0x11d8 <get_to_point>
	get_to_point(4, -x_const, y_const, z_raise);
     a18:	00 e0       	ldi	r16, 0x00	; 0
     a1a:	10 e0       	ldi	r17, 0x00	; 0
     a1c:	20 e3       	ldi	r18, 0x30	; 48
     a1e:	31 e4       	ldi	r19, 0x41	; 65
     a20:	40 e0       	ldi	r20, 0x00	; 0
     a22:	50 e0       	ldi	r21, 0x00	; 0
     a24:	60 e2       	ldi	r22, 0x20	; 32
     a26:	70 ec       	ldi	r23, 0xC0	; 192
     a28:	84 e0       	ldi	r24, 0x04	; 4
     a2a:	90 e0       	ldi	r25, 0x00	; 0
     a2c:	d5 d3       	rcall	.+1962   	; 0x11d8 <get_to_point>
	get_to_point(6, -x_const, y_const, z_raise);
     a2e:	00 e0       	ldi	r16, 0x00	; 0
     a30:	10 e0       	ldi	r17, 0x00	; 0
     a32:	20 e3       	ldi	r18, 0x30	; 48
     a34:	31 e4       	ldi	r19, 0x41	; 65
     a36:	40 e0       	ldi	r20, 0x00	; 0
     a38:	50 e0       	ldi	r21, 0x00	; 0
     a3a:	60 e2       	ldi	r22, 0x20	; 32
     a3c:	70 ec       	ldi	r23, 0xC0	; 192
     a3e:	86 e0       	ldi	r24, 0x06	; 6
     a40:	90 e0       	ldi	r25, 0x00	; 0
     a42:	ca d3       	rcall	.+1940   	; 0x11d8 <get_to_point>
     a44:	2f ef       	ldi	r18, 0xFF	; 255
     a46:	8d e3       	ldi	r24, 0x3D	; 61
     a48:	99 e4       	ldi	r25, 0x49	; 73
     a4a:	21 50       	subi	r18, 0x01	; 1
     a4c:	80 40       	sbci	r24, 0x00	; 0
     a4e:	90 40       	sbci	r25, 0x00	; 0
     a50:	e1 f7       	brne	.-8      	; 0xa4a <main+0x200>
     a52:	00 c0       	rjmp	.+0      	; 0xa54 <main+0x20a>
     a54:	00 00       	nop
	_delay_ms(2000);
	
	// move 1,3,5 back and 2,4,6 forward
	
	
	get_to_point(1, 0, -y_const, z_const);
     a56:	0f 2e       	mov	r0, r31
     a58:	c1 2c       	mov	r12, r1
     a5a:	d1 2c       	mov	r13, r1
     a5c:	f0 ea       	ldi	r31, 0xA0	; 160
     a5e:	ef 2e       	mov	r14, r31
     a60:	f0 e4       	ldi	r31, 0x40	; 64
     a62:	ff 2e       	mov	r15, r31
     a64:	f0 2d       	mov	r31, r0
     a66:	00 e0       	ldi	r16, 0x00	; 0
     a68:	10 e0       	ldi	r17, 0x00	; 0
     a6a:	20 e3       	ldi	r18, 0x30	; 48
     a6c:	31 ec       	ldi	r19, 0xC1	; 193
     a6e:	40 e0       	ldi	r20, 0x00	; 0
     a70:	50 e0       	ldi	r21, 0x00	; 0
     a72:	ba 01       	movw	r22, r20
     a74:	81 e0       	ldi	r24, 0x01	; 1
     a76:	90 e0       	ldi	r25, 0x00	; 0
     a78:	af d3       	rcall	.+1886   	; 0x11d8 <get_to_point>
	get_to_point(3, 0, -y_const, z_const);
     a7a:	00 e0       	ldi	r16, 0x00	; 0
     a7c:	10 e0       	ldi	r17, 0x00	; 0
     a7e:	20 e3       	ldi	r18, 0x30	; 48
     a80:	31 ec       	ldi	r19, 0xC1	; 193
     a82:	40 e0       	ldi	r20, 0x00	; 0
     a84:	50 e0       	ldi	r21, 0x00	; 0
     a86:	ba 01       	movw	r22, r20
     a88:	83 e0       	ldi	r24, 0x03	; 3
     a8a:	90 e0       	ldi	r25, 0x00	; 0
     a8c:	a5 d3       	rcall	.+1866   	; 0x11d8 <get_to_point>
	get_to_point(5, 0, y_const, z_const);
     a8e:	00 e0       	ldi	r16, 0x00	; 0
     a90:	10 e0       	ldi	r17, 0x00	; 0
     a92:	20 e3       	ldi	r18, 0x30	; 48
     a94:	31 e4       	ldi	r19, 0x41	; 65
     a96:	40 e0       	ldi	r20, 0x00	; 0
     a98:	50 e0       	ldi	r21, 0x00	; 0
     a9a:	ba 01       	movw	r22, r20
     a9c:	85 e0       	ldi	r24, 0x05	; 5
     a9e:	90 e0       	ldi	r25, 0x00	; 0
     aa0:	9b d3       	rcall	.+1846   	; 0x11d8 <get_to_point>
	
	get_to_point(2, 0, -y_const, z_raise);
     aa2:	0f 2e       	mov	r0, r31
     aa4:	c1 2c       	mov	r12, r1
     aa6:	d1 2c       	mov	r13, r1
     aa8:	f0 e8       	ldi	r31, 0x80	; 128
     aaa:	ef 2e       	mov	r14, r31
     aac:	ff eb       	ldi	r31, 0xBF	; 191
     aae:	ff 2e       	mov	r15, r31
     ab0:	f0 2d       	mov	r31, r0
     ab2:	00 e0       	ldi	r16, 0x00	; 0
     ab4:	10 e0       	ldi	r17, 0x00	; 0
     ab6:	20 e3       	ldi	r18, 0x30	; 48
     ab8:	31 ec       	ldi	r19, 0xC1	; 193
     aba:	40 e0       	ldi	r20, 0x00	; 0
     abc:	50 e0       	ldi	r21, 0x00	; 0
     abe:	ba 01       	movw	r22, r20
     ac0:	82 e0       	ldi	r24, 0x02	; 2
     ac2:	90 e0       	ldi	r25, 0x00	; 0
     ac4:	89 d3       	rcall	.+1810   	; 0x11d8 <get_to_point>
	get_to_point(4, 0, y_const, z_raise);
     ac6:	00 e0       	ldi	r16, 0x00	; 0
     ac8:	10 e0       	ldi	r17, 0x00	; 0
     aca:	20 e3       	ldi	r18, 0x30	; 48
     acc:	31 e4       	ldi	r19, 0x41	; 65
     ace:	40 e0       	ldi	r20, 0x00	; 0
     ad0:	50 e0       	ldi	r21, 0x00	; 0
     ad2:	ba 01       	movw	r22, r20
     ad4:	84 e0       	ldi	r24, 0x04	; 4
     ad6:	90 e0       	ldi	r25, 0x00	; 0
     ad8:	7f d3       	rcall	.+1790   	; 0x11d8 <get_to_point>
	get_to_point(6, 0, y_const, z_raise);
     ada:	00 e0       	ldi	r16, 0x00	; 0
     adc:	10 e0       	ldi	r17, 0x00	; 0
     ade:	20 e3       	ldi	r18, 0x30	; 48
     ae0:	31 e4       	ldi	r19, 0x41	; 65
     ae2:	40 e0       	ldi	r20, 0x00	; 0
     ae4:	50 e0       	ldi	r21, 0x00	; 0
     ae6:	ba 01       	movw	r22, r20
     ae8:	86 e0       	ldi	r24, 0x06	; 6
     aea:	90 e0       	ldi	r25, 0x00	; 0
     aec:	75 d3       	rcall	.+1770   	; 0x11d8 <get_to_point>
     aee:	2f ef       	ldi	r18, 0xFF	; 255
     af0:	8d e3       	ldi	r24, 0x3D	; 61
     af2:	99 e4       	ldi	r25, 0x49	; 73
     af4:	21 50       	subi	r18, 0x01	; 1
     af6:	80 40       	sbci	r24, 0x00	; 0
     af8:	90 40       	sbci	r25, 0x00	; 0
     afa:	e1 f7       	brne	.-8      	; 0xaf4 <main+0x2aa>
     afc:	00 c0       	rjmp	.+0      	; 0xafe <main+0x2b4>
     afe:	00 00       	nop
	
	_delay_ms(2000);
	
	// lower 2,4,6
	
	get_to_point(2, 0, -y_const, z_const);
     b00:	0f 2e       	mov	r0, r31
     b02:	c1 2c       	mov	r12, r1
     b04:	d1 2c       	mov	r13, r1
     b06:	f0 ea       	ldi	r31, 0xA0	; 160
     b08:	ef 2e       	mov	r14, r31
     b0a:	f0 e4       	ldi	r31, 0x40	; 64
     b0c:	ff 2e       	mov	r15, r31
     b0e:	f0 2d       	mov	r31, r0
     b10:	00 e0       	ldi	r16, 0x00	; 0
     b12:	10 e0       	ldi	r17, 0x00	; 0
     b14:	20 e3       	ldi	r18, 0x30	; 48
     b16:	31 ec       	ldi	r19, 0xC1	; 193
     b18:	40 e0       	ldi	r20, 0x00	; 0
     b1a:	50 e0       	ldi	r21, 0x00	; 0
     b1c:	ba 01       	movw	r22, r20
     b1e:	82 e0       	ldi	r24, 0x02	; 2
     b20:	90 e0       	ldi	r25, 0x00	; 0
     b22:	5a d3       	rcall	.+1716   	; 0x11d8 <get_to_point>
	get_to_point(4, 0, y_const, z_const);
     b24:	00 e0       	ldi	r16, 0x00	; 0
     b26:	10 e0       	ldi	r17, 0x00	; 0
     b28:	20 e3       	ldi	r18, 0x30	; 48
     b2a:	31 e4       	ldi	r19, 0x41	; 65
     b2c:	40 e0       	ldi	r20, 0x00	; 0
     b2e:	50 e0       	ldi	r21, 0x00	; 0
     b30:	ba 01       	movw	r22, r20
     b32:	84 e0       	ldi	r24, 0x04	; 4
     b34:	90 e0       	ldi	r25, 0x00	; 0
     b36:	50 d3       	rcall	.+1696   	; 0x11d8 <get_to_point>
	get_to_point(6, 0, y_const, z_const);
     b38:	00 e0       	ldi	r16, 0x00	; 0
     b3a:	10 e0       	ldi	r17, 0x00	; 0
     b3c:	20 e3       	ldi	r18, 0x30	; 48
     b3e:	31 e4       	ldi	r19, 0x41	; 65
     b40:	40 e0       	ldi	r20, 0x00	; 0
     b42:	50 e0       	ldi	r21, 0x00	; 0
     b44:	ba 01       	movw	r22, r20
     b46:	86 e0       	ldi	r24, 0x06	; 6
     b48:	90 e0       	ldi	r25, 0x00	; 0
     b4a:	46 d3       	rcall	.+1676   	; 0x11d8 <get_to_point>
     b4c:	2f ef       	ldi	r18, 0xFF	; 255
     b4e:	8d e3       	ldi	r24, 0x3D	; 61
     b50:	99 e4       	ldi	r25, 0x49	; 73
     b52:	21 50       	subi	r18, 0x01	; 1
     b54:	80 40       	sbci	r24, 0x00	; 0
     b56:	90 40       	sbci	r25, 0x00	; 0
     b58:	e1 f7       	brne	.-8      	; 0xb52 <main+0x308>
     b5a:	00 c0       	rjmp	.+0      	; 0xb5c <main+0x312>
     b5c:	00 00       	nop
	
	// cycle ends here
	
	// rotation begins here
	
	rotate_x (30);
     b5e:	8e e1       	ldi	r24, 0x1E	; 30
     b60:	90 e0       	ldi	r25, 0x00	; 0
     b62:	49 d4       	rcall	.+2194   	; 0x13f6 <rotate_x>
     b64:	2f ef       	ldi	r18, 0xFF	; 255
     b66:	8d e3       	ldi	r24, 0x3D	; 61
     b68:	99 e4       	ldi	r25, 0x49	; 73
     b6a:	21 50       	subi	r18, 0x01	; 1
     b6c:	80 40       	sbci	r24, 0x00	; 0
     b6e:	90 40       	sbci	r25, 0x00	; 0
     b70:	e1 f7       	brne	.-8      	; 0xb6a <main+0x320>
     b72:	00 c0       	rjmp	.+0      	; 0xb74 <main+0x32a>
     b74:	00 00       	nop
	_delay_ms(2000);
	rotate_x (-30);
     b76:	82 ee       	ldi	r24, 0xE2	; 226
     b78:	9f ef       	ldi	r25, 0xFF	; 255
     b7a:	3d d4       	rcall	.+2170   	; 0x13f6 <rotate_x>
     b7c:	2f ef       	ldi	r18, 0xFF	; 255
     b7e:	8d e3       	ldi	r24, 0x3D	; 61
     b80:	99 e4       	ldi	r25, 0x49	; 73
     b82:	21 50       	subi	r18, 0x01	; 1
     b84:	80 40       	sbci	r24, 0x00	; 0
     b86:	90 40       	sbci	r25, 0x00	; 0
     b88:	e1 f7       	brne	.-8      	; 0xb82 <main+0x338>
     b8a:	00 c0       	rjmp	.+0      	; 0xb8c <main+0x342>
     b8c:	00 00       	nop
	_delay_ms(2000);
	
	rotate_y (30);
     b8e:	8e e1       	ldi	r24, 0x1E	; 30
     b90:	90 e0       	ldi	r25, 0x00	; 0
     b92:	59 d5       	rcall	.+2738   	; 0x1646 <rotate_y>
     b94:	2f ef       	ldi	r18, 0xFF	; 255
     b96:	8d e3       	ldi	r24, 0x3D	; 61
     b98:	99 e4       	ldi	r25, 0x49	; 73
     b9a:	21 50       	subi	r18, 0x01	; 1
     b9c:	80 40       	sbci	r24, 0x00	; 0
     b9e:	90 40       	sbci	r25, 0x00	; 0
     ba0:	e1 f7       	brne	.-8      	; 0xb9a <main+0x350>
     ba2:	00 c0       	rjmp	.+0      	; 0xba4 <main+0x35a>
     ba4:	00 00       	nop
	_delay_ms(2000);
	rotate_y (-30);
     ba6:	82 ee       	ldi	r24, 0xE2	; 226
     ba8:	9f ef       	ldi	r25, 0xFF	; 255
     baa:	4d d5       	rcall	.+2714   	; 0x1646 <rotate_y>
     bac:	2f ef       	ldi	r18, 0xFF	; 255
     bae:	8d e3       	ldi	r24, 0x3D	; 61
     bb0:	99 e4       	ldi	r25, 0x49	; 73
     bb2:	21 50       	subi	r18, 0x01	; 1
     bb4:	80 40       	sbci	r24, 0x00	; 0
     bb6:	90 40       	sbci	r25, 0x00	; 0
     bb8:	e1 f7       	brne	.-8      	; 0xbb2 <main+0x368>
     bba:	00 c0       	rjmp	.+0      	; 0xbbc <main+0x372>
     bbc:	00 00       	nop
	_delay_ms(2000);
		
	rotate_z (30);
     bbe:	8e e1       	ldi	r24, 0x1E	; 30
     bc0:	90 e0       	ldi	r25, 0x00	; 0
     bc2:	6a d6       	rcall	.+3284   	; 0x1898 <rotate_z>
     bc4:	2f ef       	ldi	r18, 0xFF	; 255
     bc6:	8d e3       	ldi	r24, 0x3D	; 61
     bc8:	99 e4       	ldi	r25, 0x49	; 73
     bca:	21 50       	subi	r18, 0x01	; 1
     bcc:	80 40       	sbci	r24, 0x00	; 0
     bce:	90 40       	sbci	r25, 0x00	; 0
     bd0:	e1 f7       	brne	.-8      	; 0xbca <main+0x380>
     bd2:	00 c0       	rjmp	.+0      	; 0xbd4 <main+0x38a>
     bd4:	00 00       	nop
	_delay_ms(2000);
	rotate_z (-30);
     bd6:	82 ee       	ldi	r24, 0xE2	; 226
     bd8:	9f ef       	ldi	r25, 0xFF	; 255
     bda:	5e d6       	rcall	.+3260   	; 0x1898 <rotate_z>
     bdc:	2f ef       	ldi	r18, 0xFF	; 255
     bde:	8d e3       	ldi	r24, 0x3D	; 61
     be0:	99 e4       	ldi	r25, 0x49	; 73
     be2:	21 50       	subi	r18, 0x01	; 1
     be4:	80 40       	sbci	r24, 0x00	; 0
     be6:	90 40       	sbci	r25, 0x00	; 0
     be8:	e1 f7       	brne	.-8      	; 0xbe2 <main+0x398>
     bea:	00 c0       	rjmp	.+0      	; 0xbec <main+0x3a2>
     bec:	00 00       	nop
	_delay_ms(2000);
	
	return 0;
     bee:	80 e0       	ldi	r24, 0x00	; 0
     bf0:	90 e0       	ldi	r25, 0x00	; 0
     bf2:	1f 91       	pop	r17
     bf4:	0f 91       	pop	r16
     bf6:	ff 90       	pop	r15
     bf8:	ef 90       	pop	r14
     bfa:	df 90       	pop	r13
     bfc:	cf 90       	pop	r12
     bfe:	08 95       	ret

00000c00 <ik>:
	struct point P = newPoint (l3 * sin(phi) * sin(ang.a), l3 * sin(phi) * cos (ang.a), l3 * cos (phi));

	struct point res;
	res.x = M.x + N.x + P.x, res.y = M.y + N.y + P.y, res.z = M.z + N.z + P.z;
	return res;
}
     c00:	2f 92       	push	r2
     c02:	3f 92       	push	r3
     c04:	4f 92       	push	r4
     c06:	5f 92       	push	r5
     c08:	6f 92       	push	r6
     c0a:	7f 92       	push	r7
     c0c:	8f 92       	push	r8
     c0e:	9f 92       	push	r9
     c10:	af 92       	push	r10
     c12:	bf 92       	push	r11
     c14:	cf 92       	push	r12
     c16:	df 92       	push	r13
     c18:	ef 92       	push	r14
     c1a:	ff 92       	push	r15
     c1c:	0f 93       	push	r16
     c1e:	1f 93       	push	r17
     c20:	cf 93       	push	r28
     c22:	df 93       	push	r29
     c24:	00 d0       	rcall	.+0      	; 0xc26 <ik+0x26>
     c26:	00 d0       	rcall	.+0      	; 0xc28 <ik+0x28>
     c28:	cd b7       	in	r28, 0x3d	; 61
     c2a:	de b7       	in	r29, 0x3e	; 62
     c2c:	9e 83       	std	Y+6, r25	; 0x06
     c2e:	8d 83       	std	Y+5, r24	; 0x05
     c30:	4a 01       	movw	r8, r20
     c32:	5b 01       	movw	r10, r22
     c34:	28 01       	movw	r4, r16
     c36:	39 01       	movw	r6, r18
     c38:	a9 01       	movw	r20, r18
     c3a:	98 01       	movw	r18, r16
     c3c:	c5 01       	movw	r24, r10
     c3e:	b4 01       	movw	r22, r8
     c40:	0e 94 93 10 	call	0x2126	; 0x2126 <atan2>
     c44:	69 83       	std	Y+1, r22	; 0x01
     c46:	7a 83       	std	Y+2, r23	; 0x02
     c48:	8b 83       	std	Y+3, r24	; 0x03
     c4a:	9c 83       	std	Y+4, r25	; 0x04
     c4c:	a5 01       	movw	r20, r10
     c4e:	94 01       	movw	r18, r8
     c50:	c5 01       	movw	r24, r10
     c52:	b4 01       	movw	r22, r8
     c54:	0e 94 90 12 	call	0x2520	; 0x2520 <__mulsf3>
     c58:	4b 01       	movw	r8, r22
     c5a:	5c 01       	movw	r10, r24
     c5c:	a3 01       	movw	r20, r6
     c5e:	92 01       	movw	r18, r4
     c60:	c3 01       	movw	r24, r6
     c62:	b2 01       	movw	r22, r4
     c64:	0e 94 90 12 	call	0x2520	; 0x2520 <__mulsf3>
     c68:	9b 01       	movw	r18, r22
     c6a:	ac 01       	movw	r20, r24
     c6c:	c5 01       	movw	r24, r10
     c6e:	b4 01       	movw	r22, r8
     c70:	0e 94 20 10 	call	0x2040	; 0x2040 <__addsf3>
     c74:	0e 94 fd 12 	call	0x25fa	; 0x25fa <sqrt>
     c78:	20 e0       	ldi	r18, 0x00	; 0
     c7a:	30 e0       	ldi	r19, 0x00	; 0
     c7c:	40 ea       	ldi	r20, 0xA0	; 160
     c7e:	50 e4       	ldi	r21, 0x40	; 64
     c80:	0e 94 1f 10 	call	0x203e	; 0x203e <__subsf3>
     c84:	26 2f       	mov	r18, r22
     c86:	37 2f       	mov	r19, r23
     c88:	48 2f       	mov	r20, r24
     c8a:	59 2f       	mov	r21, r25
     c8c:	0e 94 90 12 	call	0x2520	; 0x2520 <__mulsf3>
     c90:	4b 01       	movw	r8, r22
     c92:	5c 01       	movw	r10, r24
     c94:	a7 01       	movw	r20, r14
     c96:	96 01       	movw	r18, r12
     c98:	c7 01       	movw	r24, r14
     c9a:	b6 01       	movw	r22, r12
     c9c:	0e 94 90 12 	call	0x2520	; 0x2520 <__mulsf3>
     ca0:	9b 01       	movw	r18, r22
     ca2:	ac 01       	movw	r20, r24
     ca4:	c5 01       	movw	r24, r10
     ca6:	b4 01       	movw	r22, r8
     ca8:	0e 94 20 10 	call	0x2040	; 0x2040 <__addsf3>
     cac:	16 2f       	mov	r17, r22
     cae:	07 2f       	mov	r16, r23
     cb0:	38 2e       	mov	r3, r24
     cb2:	29 2e       	mov	r2, r25
     cb4:	0e 94 fd 12 	call	0x25fa	; 0x25fa <sqrt>
     cb8:	4b 01       	movw	r8, r22
     cba:	5c 01       	movw	r10, r24
     cbc:	20 e0       	ldi	r18, 0x00	; 0
     cbe:	30 e0       	ldi	r19, 0x00	; 0
     cc0:	40 e8       	ldi	r20, 0x80	; 128
     cc2:	52 e4       	ldi	r21, 0x42	; 66
     cc4:	61 2f       	mov	r22, r17
     cc6:	70 2f       	mov	r23, r16
     cc8:	83 2d       	mov	r24, r3
     cca:	92 2d       	mov	r25, r2
     ccc:	0e 94 20 10 	call	0x2040	; 0x2040 <__addsf3>
     cd0:	20 e0       	ldi	r18, 0x00	; 0
     cd2:	30 e0       	ldi	r19, 0x00	; 0
     cd4:	42 ef       	ldi	r20, 0xF2	; 242
     cd6:	52 e4       	ldi	r21, 0x42	; 66
     cd8:	0e 94 1f 10 	call	0x203e	; 0x203e <__subsf3>
     cdc:	2b 01       	movw	r4, r22
     cde:	3c 01       	movw	r6, r24
     ce0:	20 e0       	ldi	r18, 0x00	; 0
     ce2:	30 e0       	ldi	r19, 0x00	; 0
     ce4:	40 e8       	ldi	r20, 0x80	; 128
     ce6:	51 e4       	ldi	r21, 0x41	; 65
     ce8:	c5 01       	movw	r24, r10
     cea:	b4 01       	movw	r22, r8
     cec:	0e 94 90 12 	call	0x2520	; 0x2520 <__mulsf3>
     cf0:	9b 01       	movw	r18, r22
     cf2:	ac 01       	movw	r20, r24
     cf4:	c3 01       	movw	r24, r6
     cf6:	b2 01       	movw	r22, r4
     cf8:	0e 94 e9 10 	call	0x21d2	; 0x21d2 <__divsf3>
     cfc:	0e 94 11 10 	call	0x2022	; 0x2022 <acos>
     d00:	2b 01       	movw	r4, r22
     d02:	3c 01       	movw	r6, r24
     d04:	a5 01       	movw	r20, r10
     d06:	94 01       	movw	r18, r8
     d08:	c7 01       	movw	r24, r14
     d0a:	b6 01       	movw	r22, r12
     d0c:	0e 94 e9 10 	call	0x21d2	; 0x21d2 <__divsf3>
     d10:	0e 94 11 10 	call	0x2022	; 0x2022 <acos>
     d14:	4b 01       	movw	r8, r22
     d16:	5c 01       	movw	r10, r24
     d18:	21 2f       	mov	r18, r17
     d1a:	30 2f       	mov	r19, r16
     d1c:	43 2d       	mov	r20, r3
     d1e:	52 2d       	mov	r21, r2
     d20:	60 e0       	ldi	r22, 0x00	; 0
     d22:	70 e0       	ldi	r23, 0x00	; 0
     d24:	89 e3       	ldi	r24, 0x39	; 57
     d26:	93 e4       	ldi	r25, 0x43	; 67
     d28:	0e 94 1f 10 	call	0x203e	; 0x203e <__subsf3>
     d2c:	20 e0       	ldi	r18, 0x00	; 0
     d2e:	30 e0       	ldi	r19, 0x00	; 0
     d30:	40 e3       	ldi	r20, 0x30	; 48
     d32:	53 e4       	ldi	r21, 0x43	; 67
     d34:	0e 94 e9 10 	call	0x21d2	; 0x21d2 <__divsf3>
     d38:	0e 94 11 10 	call	0x2022	; 0x2022 <acos>
     d3c:	6b 01       	movw	r12, r22
     d3e:	7c 01       	movw	r14, r24
     d40:	89 81       	ldd	r24, Y+1	; 0x01
     d42:	9a 81       	ldd	r25, Y+2	; 0x02
     d44:	ab 81       	ldd	r26, Y+3	; 0x03
     d46:	bc 81       	ldd	r27, Y+4	; 0x04
     d48:	ed 81       	ldd	r30, Y+5	; 0x05
     d4a:	fe 81       	ldd	r31, Y+6	; 0x06
     d4c:	80 83       	st	Z, r24
     d4e:	91 83       	std	Z+1, r25	; 0x01
     d50:	a2 83       	std	Z+2, r26	; 0x02
     d52:	b3 83       	std	Z+3, r27	; 0x03
     d54:	a5 01       	movw	r20, r10
     d56:	94 01       	movw	r18, r8
     d58:	c3 01       	movw	r24, r6
     d5a:	b2 01       	movw	r22, r4
     d5c:	0e 94 20 10 	call	0x2040	; 0x2040 <__addsf3>
     d60:	ad 81       	ldd	r26, Y+5	; 0x05
     d62:	be 81       	ldd	r27, Y+6	; 0x06
     d64:	14 96       	adiw	r26, 0x04	; 4
     d66:	6d 93       	st	X+, r22
     d68:	7d 93       	st	X+, r23
     d6a:	8d 93       	st	X+, r24
     d6c:	9c 93       	st	X, r25
     d6e:	17 97       	sbiw	r26, 0x07	; 7
     d70:	fd 01       	movw	r30, r26
     d72:	c0 86       	std	Z+8, r12	; 0x08
     d74:	d1 86       	std	Z+9, r13	; 0x09
     d76:	e2 86       	std	Z+10, r14	; 0x0a
     d78:	f3 86       	std	Z+11, r15	; 0x0b
     d7a:	cd 01       	movw	r24, r26
     d7c:	26 96       	adiw	r28, 0x06	; 6
     d7e:	0f b6       	in	r0, 0x3f	; 63
     d80:	f8 94       	cli
     d82:	de bf       	out	0x3e, r29	; 62
     d84:	0f be       	out	0x3f, r0	; 63
     d86:	cd bf       	out	0x3d, r28	; 61
     d88:	df 91       	pop	r29
     d8a:	cf 91       	pop	r28
     d8c:	1f 91       	pop	r17
     d8e:	0f 91       	pop	r16
     d90:	ff 90       	pop	r15
     d92:	ef 90       	pop	r14
     d94:	df 90       	pop	r13
     d96:	cf 90       	pop	r12
     d98:	bf 90       	pop	r11
     d9a:	af 90       	pop	r10
     d9c:	9f 90       	pop	r9
     d9e:	8f 90       	pop	r8
     da0:	7f 90       	pop	r7
     da2:	6f 90       	pop	r6
     da4:	5f 90       	pop	r5
     da6:	4f 90       	pop	r4
     da8:	3f 90       	pop	r3
     daa:	2f 90       	pop	r2
     dac:	08 95       	ret

00000dae <normalize>:
     dae:	2f 92       	push	r2
     db0:	3f 92       	push	r3
     db2:	4f 92       	push	r4
     db4:	5f 92       	push	r5
     db6:	6f 92       	push	r6
     db8:	7f 92       	push	r7
     dba:	8f 92       	push	r8
     dbc:	9f 92       	push	r9
     dbe:	af 92       	push	r10
     dc0:	bf 92       	push	r11
     dc2:	cf 92       	push	r12
     dc4:	df 92       	push	r13
     dc6:	ef 92       	push	r14
     dc8:	ff 92       	push	r15
     dca:	0f 93       	push	r16
     dcc:	1f 93       	push	r17
     dce:	cf 93       	push	r28
     dd0:	df 93       	push	r29
     dd2:	cd b7       	in	r28, 0x3d	; 61
     dd4:	de b7       	in	r29, 0x3e	; 62
     dd6:	68 97       	sbiw	r28, 0x18	; 24
     dd8:	0f b6       	in	r0, 0x3f	; 63
     dda:	f8 94       	cli
     ddc:	de bf       	out	0x3e, r29	; 62
     dde:	0f be       	out	0x3f, r0	; 63
     de0:	cd bf       	out	0x3d, r28	; 61
     de2:	1c 01       	movw	r2, r24
     de4:	c9 82       	std	Y+1, r12	; 0x01
     de6:	da 82       	std	Y+2, r13	; 0x02
     de8:	eb 82       	std	Y+3, r14	; 0x03
     dea:	fc 82       	std	Y+4, r15	; 0x04
     dec:	0d 83       	std	Y+5, r16	; 0x05
     dee:	1e 83       	std	Y+6, r17	; 0x06
     df0:	2f 83       	std	Y+7, r18	; 0x07
     df2:	38 87       	std	Y+8, r19	; 0x08
     df4:	49 87       	std	Y+9, r20	; 0x09
     df6:	5a 87       	std	Y+10, r21	; 0x0a
     df8:	6b 87       	std	Y+11, r22	; 0x0b
     dfa:	7c 87       	std	Y+12, r23	; 0x0c
     dfc:	89 81       	ldd	r24, Y+1	; 0x01
     dfe:	9a 81       	ldd	r25, Y+2	; 0x02
     e00:	ab 81       	ldd	r26, Y+3	; 0x03
     e02:	bc 81       	ldd	r27, Y+4	; 0x04
     e04:	8d 87       	std	Y+13, r24	; 0x0d
     e06:	9e 87       	std	Y+14, r25	; 0x0e
     e08:	af 87       	std	Y+15, r26	; 0x0f
     e0a:	b8 8b       	std	Y+16, r27	; 0x10
     e0c:	4d 80       	ldd	r4, Y+5	; 0x05
     e0e:	5e 80       	ldd	r5, Y+6	; 0x06
     e10:	6f 80       	ldd	r6, Y+7	; 0x07
     e12:	78 84       	ldd	r7, Y+8	; 0x08
     e14:	89 85       	ldd	r24, Y+9	; 0x09
     e16:	9a 85       	ldd	r25, Y+10	; 0x0a
     e18:	ab 85       	ldd	r26, Y+11	; 0x0b
     e1a:	bc 85       	ldd	r27, Y+12	; 0x0c
     e1c:	89 8b       	std	Y+17, r24	; 0x11
     e1e:	9a 8b       	std	Y+18, r25	; 0x12
     e20:	ab 8b       	std	Y+19, r26	; 0x13
     e22:	bc 8b       	std	Y+20, r27	; 0x14
     e24:	c5 01       	movw	r24, r10
     e26:	b4 01       	movw	r22, r8
     e28:	0e 94 e6 10 	call	0x21cc	; 0x21cc <cos>
     e2c:	6b 01       	movw	r12, r22
     e2e:	7c 01       	movw	r14, r24
     e30:	c5 01       	movw	r24, r10
     e32:	b4 01       	movw	r22, r8
     e34:	0e 94 f3 12 	call	0x25e6	; 0x25e6 <sin>
     e38:	4b 01       	movw	r8, r22
     e3a:	5c 01       	movw	r10, r24
     e3c:	2d 85       	ldd	r18, Y+13	; 0x0d
     e3e:	3e 85       	ldd	r19, Y+14	; 0x0e
     e40:	4f 85       	ldd	r20, Y+15	; 0x0f
     e42:	58 89       	ldd	r21, Y+16	; 0x10
     e44:	c7 01       	movw	r24, r14
     e46:	b6 01       	movw	r22, r12
     e48:	0e 94 90 12 	call	0x2520	; 0x2520 <__mulsf3>
     e4c:	6d 8b       	std	Y+21, r22	; 0x15
     e4e:	7e 8b       	std	Y+22, r23	; 0x16
     e50:	8f 8b       	std	Y+23, r24	; 0x17
     e52:	98 8f       	std	Y+24, r25	; 0x18
     e54:	a3 01       	movw	r20, r6
     e56:	92 01       	movw	r18, r4
     e58:	c5 01       	movw	r24, r10
     e5a:	b4 01       	movw	r22, r8
     e5c:	0e 94 90 12 	call	0x2520	; 0x2520 <__mulsf3>
     e60:	9b 01       	movw	r18, r22
     e62:	ac 01       	movw	r20, r24
     e64:	6d 89       	ldd	r22, Y+21	; 0x15
     e66:	7e 89       	ldd	r23, Y+22	; 0x16
     e68:	8f 89       	ldd	r24, Y+23	; 0x17
     e6a:	98 8d       	ldd	r25, Y+24	; 0x18
     e6c:	0e 94 1f 10 	call	0x203e	; 0x203e <__subsf3>
     e70:	d1 01       	movw	r26, r2
     e72:	6d 93       	st	X+, r22
     e74:	7d 93       	st	X+, r23
     e76:	8d 93       	st	X+, r24
     e78:	9c 93       	st	X, r25
     e7a:	13 97       	sbiw	r26, 0x03	; 3
     e7c:	a5 01       	movw	r20, r10
     e7e:	94 01       	movw	r18, r8
     e80:	6d 85       	ldd	r22, Y+13	; 0x0d
     e82:	7e 85       	ldd	r23, Y+14	; 0x0e
     e84:	8f 85       	ldd	r24, Y+15	; 0x0f
     e86:	98 89       	ldd	r25, Y+16	; 0x10
     e88:	0e 94 90 12 	call	0x2520	; 0x2520 <__mulsf3>
     e8c:	4b 01       	movw	r8, r22
     e8e:	5c 01       	movw	r10, r24
     e90:	a7 01       	movw	r20, r14
     e92:	96 01       	movw	r18, r12
     e94:	c3 01       	movw	r24, r6
     e96:	b2 01       	movw	r22, r4
     e98:	0e 94 90 12 	call	0x2520	; 0x2520 <__mulsf3>
     e9c:	9b 01       	movw	r18, r22
     e9e:	ac 01       	movw	r20, r24
     ea0:	c5 01       	movw	r24, r10
     ea2:	b4 01       	movw	r22, r8
     ea4:	0e 94 20 10 	call	0x2040	; 0x2040 <__addsf3>
     ea8:	f1 01       	movw	r30, r2
     eaa:	64 83       	std	Z+4, r22	; 0x04
     eac:	75 83       	std	Z+5, r23	; 0x05
     eae:	86 83       	std	Z+6, r24	; 0x06
     eb0:	97 83       	std	Z+7, r25	; 0x07
     eb2:	89 89       	ldd	r24, Y+17	; 0x11
     eb4:	9a 89       	ldd	r25, Y+18	; 0x12
     eb6:	ab 89       	ldd	r26, Y+19	; 0x13
     eb8:	bc 89       	ldd	r27, Y+20	; 0x14
     eba:	80 87       	std	Z+8, r24	; 0x08
     ebc:	91 87       	std	Z+9, r25	; 0x09
     ebe:	a2 87       	std	Z+10, r26	; 0x0a
     ec0:	b3 87       	std	Z+11, r27	; 0x0b
     ec2:	c1 01       	movw	r24, r2
     ec4:	68 96       	adiw	r28, 0x18	; 24
     ec6:	0f b6       	in	r0, 0x3f	; 63
     ec8:	f8 94       	cli
     eca:	de bf       	out	0x3e, r29	; 62
     ecc:	0f be       	out	0x3f, r0	; 63
     ece:	cd bf       	out	0x3d, r28	; 61
     ed0:	df 91       	pop	r29
     ed2:	cf 91       	pop	r28
     ed4:	1f 91       	pop	r17
     ed6:	0f 91       	pop	r16
     ed8:	ff 90       	pop	r15
     eda:	ef 90       	pop	r14
     edc:	df 90       	pop	r13
     ede:	cf 90       	pop	r12
     ee0:	bf 90       	pop	r11
     ee2:	af 90       	pop	r10
     ee4:	9f 90       	pop	r9
     ee6:	8f 90       	pop	r8
     ee8:	7f 90       	pop	r7
     eea:	6f 90       	pop	r6
     eec:	5f 90       	pop	r5
     eee:	4f 90       	pop	r4
     ef0:	3f 90       	pop	r3
     ef2:	2f 90       	pop	r2
     ef4:	08 95       	ret

00000ef6 <set_origin>:
     ef6:	4f 92       	push	r4
     ef8:	5f 92       	push	r5
     efa:	6f 92       	push	r6
     efc:	7f 92       	push	r7
     efe:	8f 92       	push	r8
     f00:	9f 92       	push	r9
     f02:	af 92       	push	r10
     f04:	bf 92       	push	r11
     f06:	cf 92       	push	r12
     f08:	df 92       	push	r13
     f0a:	ef 92       	push	r14
     f0c:	ff 92       	push	r15
     f0e:	0f 93       	push	r16
     f10:	1f 93       	push	r17
     f12:	cf 93       	push	r28
     f14:	df 93       	push	r29
     f16:	cd b7       	in	r28, 0x3d	; 61
     f18:	de b7       	in	r29, 0x3e	; 62
     f1a:	2c 97       	sbiw	r28, 0x0c	; 12
     f1c:	0f b6       	in	r0, 0x3f	; 63
     f1e:	f8 94       	cli
     f20:	de bf       	out	0x3e, r29	; 62
     f22:	0f be       	out	0x3f, r0	; 63
     f24:	cd bf       	out	0x3d, r28	; 61
     f26:	2c 01       	movw	r4, r24
     f28:	3b 01       	movw	r6, r22
     f2a:	29 87       	std	Y+9, r18	; 0x09
     f2c:	3a 87       	std	Y+10, r19	; 0x0a
     f2e:	4b 87       	std	Y+11, r20	; 0x0b
     f30:	5c 87       	std	Y+12, r21	; 0x0c
     f32:	61 30       	cpi	r22, 0x01	; 1
     f34:	71 05       	cpc	r23, r1
     f36:	91 f5       	brne	.+100    	; 0xf9c <set_origin+0xa6>
     f38:	b4 01       	movw	r22, r8
     f3a:	88 27       	eor	r24, r24
     f3c:	77 fd       	sbrc	r23, 7
     f3e:	80 95       	com	r24
     f40:	98 2f       	mov	r25, r24
     f42:	0e 94 84 11 	call	0x2308	; 0x2308 <__floatsisf>
     f46:	24 ef       	ldi	r18, 0xF4	; 244
     f48:	36 ea       	ldi	r19, 0xA6	; 166
     f4a:	47 e0       	ldi	r20, 0x07	; 7
     f4c:	51 e4       	ldi	r21, 0x41	; 65
     f4e:	0e 94 90 12 	call	0x2520	; 0x2520 <__mulsf3>
     f52:	9b 01       	movw	r18, r22
     f54:	ac 01       	movw	r20, r24
     f56:	6a 2d       	mov	r22, r10
     f58:	7b 2d       	mov	r23, r11
     f5a:	8c 2d       	mov	r24, r12
     f5c:	9d 2d       	mov	r25, r13
     f5e:	0e 94 1f 10 	call	0x203e	; 0x203e <__subsf3>
     f62:	a6 2e       	mov	r10, r22
     f64:	b7 2e       	mov	r11, r23
     f66:	c8 2e       	mov	r12, r24
     f68:	d9 2e       	mov	r13, r25
     f6a:	8d e0       	ldi	r24, 0x0D	; 13
     f6c:	88 9d       	mul	r24, r8
     f6e:	b0 01       	movw	r22, r0
     f70:	89 9d       	mul	r24, r9
     f72:	70 0d       	add	r23, r0
     f74:	11 24       	eor	r1, r1
     f76:	88 27       	eor	r24, r24
     f78:	77 fd       	sbrc	r23, 7
     f7a:	80 95       	com	r24
     f7c:	98 2f       	mov	r25, r24
     f7e:	0e 94 84 11 	call	0x2308	; 0x2308 <__floatsisf>
     f82:	9b 01       	movw	r18, r22
     f84:	ac 01       	movw	r20, r24
     f86:	6e 2d       	mov	r22, r14
     f88:	7f 2d       	mov	r23, r15
     f8a:	80 2f       	mov	r24, r16
     f8c:	91 2f       	mov	r25, r17
     f8e:	0e 94 1f 10 	call	0x203e	; 0x203e <__subsf3>
     f92:	e6 2e       	mov	r14, r22
     f94:	f7 2e       	mov	r15, r23
     f96:	08 2f       	mov	r16, r24
     f98:	19 2f       	mov	r17, r25
     f9a:	50 c0       	rjmp	.+160    	; 0x103c <set_origin+0x146>
     f9c:	62 30       	cpi	r22, 0x02	; 2
     f9e:	71 05       	cpc	r23, r1
     fa0:	d1 f4       	brne	.+52     	; 0xfd6 <set_origin+0xe0>
     fa2:	b4 01       	movw	r22, r8
     fa4:	88 27       	eor	r24, r24
     fa6:	77 fd       	sbrc	r23, 7
     fa8:	80 95       	com	r24
     faa:	98 2f       	mov	r25, r24
     fac:	0e 94 84 11 	call	0x2308	; 0x2308 <__floatsisf>
     fb0:	20 e0       	ldi	r18, 0x00	; 0
     fb2:	30 e0       	ldi	r19, 0x00	; 0
     fb4:	48 e5       	ldi	r20, 0x58	; 88
     fb6:	51 e4       	ldi	r21, 0x41	; 65
     fb8:	0e 94 90 12 	call	0x2520	; 0x2520 <__mulsf3>
     fbc:	9b 01       	movw	r18, r22
     fbe:	ac 01       	movw	r20, r24
     fc0:	6a 2d       	mov	r22, r10
     fc2:	7b 2d       	mov	r23, r11
     fc4:	8c 2d       	mov	r24, r12
     fc6:	9d 2d       	mov	r25, r13
     fc8:	0e 94 1f 10 	call	0x203e	; 0x203e <__subsf3>
     fcc:	a6 2e       	mov	r10, r22
     fce:	b7 2e       	mov	r11, r23
     fd0:	c8 2e       	mov	r12, r24
     fd2:	d9 2e       	mov	r13, r25
     fd4:	67 c0       	rjmp	.+206    	; 0x10a4 <set_origin+0x1ae>
     fd6:	63 30       	cpi	r22, 0x03	; 3
     fd8:	71 05       	cpc	r23, r1
     fda:	81 f5       	brne	.+96     	; 0x103c <set_origin+0x146>
     fdc:	b4 01       	movw	r22, r8
     fde:	88 27       	eor	r24, r24
     fe0:	77 fd       	sbrc	r23, 7
     fe2:	80 95       	com	r24
     fe4:	98 2f       	mov	r25, r24
     fe6:	0e 94 84 11 	call	0x2308	; 0x2308 <__floatsisf>
     fea:	24 ef       	ldi	r18, 0xF4	; 244
     fec:	36 ea       	ldi	r19, 0xA6	; 166
     fee:	47 e0       	ldi	r20, 0x07	; 7
     ff0:	51 e4       	ldi	r21, 0x41	; 65
     ff2:	0e 94 90 12 	call	0x2520	; 0x2520 <__mulsf3>
     ff6:	9b 01       	movw	r18, r22
     ff8:	ac 01       	movw	r20, r24
     ffa:	6a 2d       	mov	r22, r10
     ffc:	7b 2d       	mov	r23, r11
     ffe:	8c 2d       	mov	r24, r12
    1000:	9d 2d       	mov	r25, r13
    1002:	0e 94 1f 10 	call	0x203e	; 0x203e <__subsf3>
    1006:	a6 2e       	mov	r10, r22
    1008:	b7 2e       	mov	r11, r23
    100a:	c8 2e       	mov	r12, r24
    100c:	d9 2e       	mov	r13, r25
    100e:	8d e0       	ldi	r24, 0x0D	; 13
    1010:	88 9d       	mul	r24, r8
    1012:	b0 01       	movw	r22, r0
    1014:	89 9d       	mul	r24, r9
    1016:	70 0d       	add	r23, r0
    1018:	11 24       	eor	r1, r1
    101a:	88 27       	eor	r24, r24
    101c:	77 fd       	sbrc	r23, 7
    101e:	80 95       	com	r24
    1020:	98 2f       	mov	r25, r24
    1022:	0e 94 84 11 	call	0x2308	; 0x2308 <__floatsisf>
    1026:	2e 2d       	mov	r18, r14
    1028:	3f 2d       	mov	r19, r15
    102a:	40 2f       	mov	r20, r16
    102c:	51 2f       	mov	r21, r17
    102e:	0e 94 20 10 	call	0x2040	; 0x2040 <__addsf3>
    1032:	e6 2e       	mov	r14, r22
    1034:	f7 2e       	mov	r15, r23
    1036:	08 2f       	mov	r16, r24
    1038:	19 2f       	mov	r17, r25
    103a:	51 c0       	rjmp	.+162    	; 0x10de <set_origin+0x1e8>
    103c:	84 e0       	ldi	r24, 0x04	; 4
    103e:	68 16       	cp	r6, r24
    1040:	71 04       	cpc	r7, r1
    1042:	81 f5       	brne	.+96     	; 0x10a4 <set_origin+0x1ae>
    1044:	b4 01       	movw	r22, r8
    1046:	88 27       	eor	r24, r24
    1048:	77 fd       	sbrc	r23, 7
    104a:	80 95       	com	r24
    104c:	98 2f       	mov	r25, r24
    104e:	0e 94 84 11 	call	0x2308	; 0x2308 <__floatsisf>
    1052:	24 ef       	ldi	r18, 0xF4	; 244
    1054:	36 ea       	ldi	r19, 0xA6	; 166
    1056:	47 e0       	ldi	r20, 0x07	; 7
    1058:	51 e4       	ldi	r21, 0x41	; 65
    105a:	0e 94 90 12 	call	0x2520	; 0x2520 <__mulsf3>
    105e:	9b 01       	movw	r18, r22
    1060:	ac 01       	movw	r20, r24
    1062:	6a 2d       	mov	r22, r10
    1064:	7b 2d       	mov	r23, r11
    1066:	8c 2d       	mov	r24, r12
    1068:	9d 2d       	mov	r25, r13
    106a:	ea d7       	rcall	.+4052   	; 0x2040 <__addsf3>
    106c:	a6 2e       	mov	r10, r22
    106e:	b7 2e       	mov	r11, r23
    1070:	c8 2e       	mov	r12, r24
    1072:	d9 2e       	mov	r13, r25
    1074:	8d e0       	ldi	r24, 0x0D	; 13
    1076:	88 9d       	mul	r24, r8
    1078:	b0 01       	movw	r22, r0
    107a:	89 9d       	mul	r24, r9
    107c:	70 0d       	add	r23, r0
    107e:	11 24       	eor	r1, r1
    1080:	88 27       	eor	r24, r24
    1082:	77 fd       	sbrc	r23, 7
    1084:	80 95       	com	r24
    1086:	98 2f       	mov	r25, r24
    1088:	0e 94 84 11 	call	0x2308	; 0x2308 <__floatsisf>
    108c:	9b 01       	movw	r18, r22
    108e:	ac 01       	movw	r20, r24
    1090:	6e 2d       	mov	r22, r14
    1092:	7f 2d       	mov	r23, r15
    1094:	80 2f       	mov	r24, r16
    1096:	91 2f       	mov	r25, r17
    1098:	d2 d7       	rcall	.+4004   	; 0x203e <__subsf3>
    109a:	e6 2e       	mov	r14, r22
    109c:	f7 2e       	mov	r15, r23
    109e:	08 2f       	mov	r16, r24
    10a0:	19 2f       	mov	r17, r25
    10a2:	50 c0       	rjmp	.+160    	; 0x1144 <set_origin+0x24e>
    10a4:	85 e0       	ldi	r24, 0x05	; 5
    10a6:	68 16       	cp	r6, r24
    10a8:	71 04       	cpc	r7, r1
    10aa:	c9 f4       	brne	.+50     	; 0x10de <set_origin+0x1e8>
    10ac:	b4 01       	movw	r22, r8
    10ae:	88 27       	eor	r24, r24
    10b0:	77 fd       	sbrc	r23, 7
    10b2:	80 95       	com	r24
    10b4:	98 2f       	mov	r25, r24
    10b6:	0e 94 84 11 	call	0x2308	; 0x2308 <__floatsisf>
    10ba:	20 e0       	ldi	r18, 0x00	; 0
    10bc:	30 e0       	ldi	r19, 0x00	; 0
    10be:	48 e5       	ldi	r20, 0x58	; 88
    10c0:	51 e4       	ldi	r21, 0x41	; 65
    10c2:	0e 94 90 12 	call	0x2520	; 0x2520 <__mulsf3>
    10c6:	9b 01       	movw	r18, r22
    10c8:	ac 01       	movw	r20, r24
    10ca:	6a 2d       	mov	r22, r10
    10cc:	7b 2d       	mov	r23, r11
    10ce:	8c 2d       	mov	r24, r12
    10d0:	9d 2d       	mov	r25, r13
    10d2:	b6 d7       	rcall	.+3948   	; 0x2040 <__addsf3>
    10d4:	a6 2e       	mov	r10, r22
    10d6:	b7 2e       	mov	r11, r23
    10d8:	c8 2e       	mov	r12, r24
    10da:	d9 2e       	mov	r13, r25
    10dc:	33 c0       	rjmp	.+102    	; 0x1144 <set_origin+0x24e>
    10de:	86 e0       	ldi	r24, 0x06	; 6
    10e0:	68 16       	cp	r6, r24
    10e2:	71 04       	cpc	r7, r1
    10e4:	79 f5       	brne	.+94     	; 0x1144 <set_origin+0x24e>
    10e6:	b4 01       	movw	r22, r8
    10e8:	88 27       	eor	r24, r24
    10ea:	77 fd       	sbrc	r23, 7
    10ec:	80 95       	com	r24
    10ee:	98 2f       	mov	r25, r24
    10f0:	0e 94 84 11 	call	0x2308	; 0x2308 <__floatsisf>
    10f4:	24 ef       	ldi	r18, 0xF4	; 244
    10f6:	36 ea       	ldi	r19, 0xA6	; 166
    10f8:	47 e0       	ldi	r20, 0x07	; 7
    10fa:	51 e4       	ldi	r21, 0x41	; 65
    10fc:	0e 94 90 12 	call	0x2520	; 0x2520 <__mulsf3>
    1100:	9b 01       	movw	r18, r22
    1102:	ac 01       	movw	r20, r24
    1104:	6a 2d       	mov	r22, r10
    1106:	7b 2d       	mov	r23, r11
    1108:	8c 2d       	mov	r24, r12
    110a:	9d 2d       	mov	r25, r13
    110c:	99 d7       	rcall	.+3890   	; 0x2040 <__addsf3>
    110e:	a6 2e       	mov	r10, r22
    1110:	b7 2e       	mov	r11, r23
    1112:	c8 2e       	mov	r12, r24
    1114:	d9 2e       	mov	r13, r25
    1116:	8d e0       	ldi	r24, 0x0D	; 13
    1118:	88 9d       	mul	r24, r8
    111a:	b0 01       	movw	r22, r0
    111c:	89 9d       	mul	r24, r9
    111e:	70 0d       	add	r23, r0
    1120:	11 24       	eor	r1, r1
    1122:	88 27       	eor	r24, r24
    1124:	77 fd       	sbrc	r23, 7
    1126:	80 95       	com	r24
    1128:	98 2f       	mov	r25, r24
    112a:	0e 94 84 11 	call	0x2308	; 0x2308 <__floatsisf>
    112e:	9b 01       	movw	r18, r22
    1130:	ac 01       	movw	r20, r24
    1132:	6e 2d       	mov	r22, r14
    1134:	7f 2d       	mov	r23, r15
    1136:	80 2f       	mov	r24, r16
    1138:	91 2f       	mov	r25, r17
    113a:	82 d7       	rcall	.+3844   	; 0x2040 <__addsf3>
    113c:	e6 2e       	mov	r14, r22
    113e:	f7 2e       	mov	r15, r23
    1140:	08 2f       	mov	r16, r24
    1142:	19 2f       	mov	r17, r25
    1144:	8a 2d       	mov	r24, r10
    1146:	9b 2d       	mov	r25, r11
    1148:	ac 2d       	mov	r26, r12
    114a:	bd 2d       	mov	r27, r13
    114c:	89 83       	std	Y+1, r24	; 0x01
    114e:	9a 83       	std	Y+2, r25	; 0x02
    1150:	ab 83       	std	Y+3, r26	; 0x03
    1152:	bc 83       	std	Y+4, r27	; 0x04
    1154:	8e 2d       	mov	r24, r14
    1156:	9f 2d       	mov	r25, r15
    1158:	a0 2f       	mov	r26, r16
    115a:	b1 2f       	mov	r27, r17
    115c:	8d 83       	std	Y+5, r24	; 0x05
    115e:	9e 83       	std	Y+6, r25	; 0x06
    1160:	af 83       	std	Y+7, r26	; 0x07
    1162:	b8 87       	std	Y+8, r27	; 0x08
    1164:	8c e0       	ldi	r24, 0x0C	; 12
    1166:	fe 01       	movw	r30, r28
    1168:	31 96       	adiw	r30, 0x01	; 1
    116a:	d2 01       	movw	r26, r4
    116c:	01 90       	ld	r0, Z+
    116e:	0d 92       	st	X+, r0
    1170:	8a 95       	dec	r24
    1172:	e1 f7       	brne	.-8      	; 0x116c <set_origin+0x276>
    1174:	c2 01       	movw	r24, r4
    1176:	2c 96       	adiw	r28, 0x0c	; 12
    1178:	0f b6       	in	r0, 0x3f	; 63
    117a:	f8 94       	cli
    117c:	de bf       	out	0x3e, r29	; 62
    117e:	0f be       	out	0x3f, r0	; 63
    1180:	cd bf       	out	0x3d, r28	; 61
    1182:	df 91       	pop	r29
    1184:	cf 91       	pop	r28
    1186:	1f 91       	pop	r17
    1188:	0f 91       	pop	r16
    118a:	ff 90       	pop	r15
    118c:	ef 90       	pop	r14
    118e:	df 90       	pop	r13
    1190:	cf 90       	pop	r12
    1192:	bf 90       	pop	r11
    1194:	af 90       	pop	r10
    1196:	9f 90       	pop	r9
    1198:	8f 90       	pop	r8
    119a:	7f 90       	pop	r7
    119c:	6f 90       	pop	r6
    119e:	5f 90       	pop	r5
    11a0:	4f 90       	pop	r4
    11a2:	08 95       	ret

000011a4 <newPoint>:
    11a4:	cf 92       	push	r12
    11a6:	df 92       	push	r13
    11a8:	ef 92       	push	r14
    11aa:	ff 92       	push	r15
    11ac:	0f 93       	push	r16
    11ae:	1f 93       	push	r17
    11b0:	fc 01       	movw	r30, r24
    11b2:	40 83       	st	Z, r20
    11b4:	51 83       	std	Z+1, r21	; 0x01
    11b6:	62 83       	std	Z+2, r22	; 0x02
    11b8:	73 83       	std	Z+3, r23	; 0x03
    11ba:	04 83       	std	Z+4, r16	; 0x04
    11bc:	15 83       	std	Z+5, r17	; 0x05
    11be:	26 83       	std	Z+6, r18	; 0x06
    11c0:	37 83       	std	Z+7, r19	; 0x07
    11c2:	c0 86       	std	Z+8, r12	; 0x08
    11c4:	d1 86       	std	Z+9, r13	; 0x09
    11c6:	e2 86       	std	Z+10, r14	; 0x0a
    11c8:	f3 86       	std	Z+11, r15	; 0x0b
    11ca:	1f 91       	pop	r17
    11cc:	0f 91       	pop	r16
    11ce:	ff 90       	pop	r15
    11d0:	ef 90       	pop	r14
    11d2:	df 90       	pop	r13
    11d4:	cf 90       	pop	r12
    11d6:	08 95       	ret

000011d8 <get_to_point>:

void get_to_point (int id, double x, double y, double z) {
    11d8:	2f 92       	push	r2
    11da:	3f 92       	push	r3
    11dc:	4f 92       	push	r4
    11de:	5f 92       	push	r5
    11e0:	6f 92       	push	r6
    11e2:	7f 92       	push	r7
    11e4:	8f 92       	push	r8
    11e6:	9f 92       	push	r9
    11e8:	af 92       	push	r10
    11ea:	bf 92       	push	r11
    11ec:	cf 92       	push	r12
    11ee:	df 92       	push	r13
    11f0:	ef 92       	push	r14
    11f2:	ff 92       	push	r15
    11f4:	0f 93       	push	r16
    11f6:	1f 93       	push	r17
    11f8:	cf 93       	push	r28
    11fa:	df 93       	push	r29
    11fc:	cd b7       	in	r28, 0x3d	; 61
    11fe:	de b7       	in	r29, 0x3e	; 62
    1200:	6c 97       	sbiw	r28, 0x1c	; 28
    1202:	0f b6       	in	r0, 0x3f	; 63
    1204:	f8 94       	cli
    1206:	de bf       	out	0x3e, r29	; 62
    1208:	0f be       	out	0x3f, r0	; 63
    120a:	cd bf       	out	0x3d, r28	; 61
    120c:	1c 01       	movw	r2, r24
    120e:	b4 2e       	mov	r11, r20
    1210:	59 8f       	std	Y+25, r21	; 0x19
    1212:	86 2e       	mov	r8, r22
    1214:	97 2e       	mov	r9, r23
    1216:	52 2e       	mov	r5, r18
    1218:	63 2e       	mov	r6, r19
    121a:	ac 2c       	mov	r10, r12
	
	struct point cur;
	cur.x = y, cur.y = x, cur.z = z;
	
	double phi = 0.99289438983;
	if (id == 3)
    121c:	83 30       	cpi	r24, 0x03	; 3
    121e:	91 05       	cpc	r25, r1
    1220:	69 f0       	breq	.+26     	; 0x123c <get_to_point+0x64>
		phi = PI - phi;
	if (id == 2)
    1222:	82 e0       	ldi	r24, 0x02	; 2
    1224:	28 16       	cp	r2, r24
    1226:	31 04       	cpc	r3, r1
    1228:	d9 f0       	breq	.+54     	; 0x1260 <get_to_point+0x88>
		phi = PI;
	if (id == 1)
    122a:	91 e0       	ldi	r25, 0x01	; 1
    122c:	29 16       	cp	r2, r25
    122e:	31 04       	cpc	r3, r1
    1230:	01 f1       	breq	.+64     	; 0x1272 <get_to_point+0x9a>
void get_to_point (int id, double x, double y, double z) {
	
	struct point cur;
	cur.x = y, cur.y = x, cur.z = z;
	
	double phi = 0.99289438983;
    1232:	64 e5       	ldi	r22, 0x54	; 84
    1234:	7e e2       	ldi	r23, 0x2E	; 46
    1236:	8e e7       	ldi	r24, 0x7E	; 126
    1238:	9f e3       	ldi	r25, 0x3F	; 63
    123a:	04 c0       	rjmp	.+8      	; 0x1244 <get_to_point+0x6c>
	if (id == 3)
		phi = PI - phi;
    123c:	66 e4       	ldi	r22, 0x46	; 70
    123e:	74 e8       	ldi	r23, 0x84	; 132
    1240:	89 e0       	ldi	r24, 0x09	; 9
    1242:	90 e4       	ldi	r25, 0x40	; 64
	if (id == 2)
		phi = PI;
	if (id == 1)
		phi = phi + PI;
	if (id == 4)
    1244:	a4 e0       	ldi	r26, 0x04	; 4
    1246:	2a 16       	cp	r2, r26
    1248:	31 04       	cpc	r3, r1
    124a:	71 f4       	brne	.+28     	; 0x1268 <get_to_point+0x90>
		phi = 2 * PI - phi;
    124c:	26 2f       	mov	r18, r22
    124e:	37 2f       	mov	r19, r23
    1250:	48 2f       	mov	r20, r24
    1252:	59 2f       	mov	r21, r25
    1254:	6b ed       	ldi	r22, 0xDB	; 219
    1256:	7f e0       	ldi	r23, 0x0F	; 15
    1258:	89 ec       	ldi	r24, 0xC9	; 201
    125a:	90 e4       	ldi	r25, 0x40	; 64
    125c:	f0 d6       	rcall	.+3552   	; 0x203e <__subsf3>
    125e:	12 c0       	rjmp	.+36     	; 0x1284 <get_to_point+0xac>
	
	double phi = 0.99289438983;
	if (id == 3)
		phi = PI - phi;
	if (id == 2)
		phi = PI;
    1260:	6b ed       	ldi	r22, 0xDB	; 219
    1262:	7f e0       	ldi	r23, 0x0F	; 15
    1264:	89 e4       	ldi	r24, 0x49	; 73
    1266:	90 e4       	ldi	r25, 0x40	; 64
	if (id == 1)
		phi = phi + PI;
	if (id == 4)
		phi = 2 * PI - phi;
	if (id == 5)
    1268:	b5 e0       	ldi	r27, 0x05	; 5
    126a:	2b 16       	cp	r2, r27
    126c:	31 04       	cpc	r3, r1
    126e:	31 f0       	breq	.+12     	; 0x127c <get_to_point+0xa4>
    1270:	09 c0       	rjmp	.+18     	; 0x1284 <get_to_point+0xac>
	if (id == 3)
		phi = PI - phi;
	if (id == 2)
		phi = PI;
	if (id == 1)
		phi = phi + PI;
    1272:	68 eb       	ldi	r22, 0xB8	; 184
    1274:	7d e4       	ldi	r23, 0x4D	; 77
    1276:	84 e8       	ldi	r24, 0x84	; 132
    1278:	90 e4       	ldi	r25, 0x40	; 64
    127a:	04 c0       	rjmp	.+8      	; 0x1284 <get_to_point+0xac>
	if (id == 4)
		phi = 2 * PI - phi;
	if (id == 5)
		phi = 0;
    127c:	60 e0       	ldi	r22, 0x00	; 0
    127e:	70 e0       	ldi	r23, 0x00	; 0
    1280:	80 e0       	ldi	r24, 0x00	; 0
    1282:	90 e0       	ldi	r25, 0x00	; 0
		
	cur = normalize(cur, phi);
    1284:	c0 2e       	mov	r12, r16
    1286:	20 2f       	mov	r18, r16
    1288:	31 2f       	mov	r19, r17
    128a:	45 2d       	mov	r20, r5
    128c:	56 2d       	mov	r21, r6
    128e:	29 83       	std	Y+1, r18	; 0x01
    1290:	3a 83       	std	Y+2, r19	; 0x02
    1292:	4b 83       	std	Y+3, r20	; 0x03
    1294:	5c 83       	std	Y+4, r21	; 0x04
    1296:	0b 2d       	mov	r16, r11
    1298:	4b 2c       	mov	r4, r11
    129a:	59 8c       	ldd	r5, Y+25	; 0x19
    129c:	68 2c       	mov	r6, r8
    129e:	79 2c       	mov	r7, r9
    12a0:	4d 82       	std	Y+5, r4	; 0x05
    12a2:	5e 82       	std	Y+6, r5	; 0x06
    12a4:	6f 82       	std	Y+7, r6	; 0x07
    12a6:	78 86       	std	Y+8, r7	; 0x08
    12a8:	4a 2d       	mov	r20, r10
    12aa:	4a 2c       	mov	r4, r10
    12ac:	5d 2c       	mov	r5, r13
    12ae:	6e 2c       	mov	r6, r14
    12b0:	7f 2c       	mov	r7, r15
    12b2:	49 86       	std	Y+9, r4	; 0x09
    12b4:	5a 86       	std	Y+10, r5	; 0x0a
    12b6:	6b 86       	std	Y+11, r6	; 0x0b
    12b8:	7c 86       	std	Y+12, r7	; 0x0c
    12ba:	86 2e       	mov	r8, r22
    12bc:	97 2e       	mov	r9, r23
    12be:	a8 2e       	mov	r10, r24
    12c0:	b9 2e       	mov	r11, r25
    12c2:	da 80       	ldd	r13, Y+2	; 0x02
    12c4:	eb 80       	ldd	r14, Y+3	; 0x03
    12c6:	fc 80       	ldd	r15, Y+4	; 0x04
    12c8:	1e 81       	ldd	r17, Y+6	; 0x06
    12ca:	2f 81       	ldd	r18, Y+7	; 0x07
    12cc:	38 85       	ldd	r19, Y+8	; 0x08
    12ce:	5a 85       	ldd	r21, Y+10	; 0x0a
    12d0:	6b 85       	ldd	r22, Y+11	; 0x0b
    12d2:	7c 85       	ldd	r23, Y+12	; 0x0c
    12d4:	ce 01       	movw	r24, r28
    12d6:	01 96       	adiw	r24, 0x01	; 1
    12d8:	6a dd       	rcall	.-1324   	; 0xdae <normalize>
    12da:	89 80       	ldd	r8, Y+1	; 0x01
    12dc:	9a 80       	ldd	r9, Y+2	; 0x02
    12de:	ab 80       	ldd	r10, Y+3	; 0x03
    12e0:	bc 80       	ldd	r11, Y+4	; 0x04
    12e2:	8d 81       	ldd	r24, Y+5	; 0x05
    12e4:	9e 81       	ldd	r25, Y+6	; 0x06
    12e6:	af 81       	ldd	r26, Y+7	; 0x07
    12e8:	b8 85       	ldd	r27, Y+8	; 0x08
    12ea:	89 8f       	std	Y+25, r24	; 0x19
    12ec:	9a 8f       	std	Y+26, r25	; 0x1a
    12ee:	ab 8f       	std	Y+27, r26	; 0x1b
    12f0:	bc 8f       	std	Y+28, r27	; 0x1c
    12f2:	49 84       	ldd	r4, Y+9	; 0x09
    12f4:	5a 84       	ldd	r5, Y+10	; 0x0a
    12f6:	6b 84       	ldd	r6, Y+11	; 0x0b
    12f8:	7c 84       	ldd	r7, Y+12	; 0x0c
	
	struct angles ang = ik (cur.y, cur.x, cur.z);
    12fa:	73 01       	movw	r14, r6
    12fc:	62 01       	movw	r12, r4
    12fe:	95 01       	movw	r18, r10
    1300:	84 01       	movw	r16, r8
    1302:	ac 01       	movw	r20, r24
    1304:	bd 01       	movw	r22, r26
    1306:	ce 01       	movw	r24, r28
    1308:	0d 96       	adiw	r24, 0x0d	; 13
    130a:	7a dc       	rcall	.-1804   	; 0xc00 <ik>
	
	last_c[id] = newPoint(cur.y, cur.x, cur.z);
    130c:	c1 01       	movw	r24, r2
    130e:	88 0f       	add	r24, r24
    1310:	99 1f       	adc	r25, r25
    1312:	82 0d       	add	r24, r2
    1314:	93 1d       	adc	r25, r3
    1316:	88 0f       	add	r24, r24
    1318:	99 1f       	adc	r25, r25
    131a:	88 0f       	add	r24, r24
    131c:	99 1f       	adc	r25, r25
    131e:	95 01       	movw	r18, r10
    1320:	84 01       	movw	r16, r8
    1322:	49 8d       	ldd	r20, Y+25	; 0x19
    1324:	5a 8d       	ldd	r21, Y+26	; 0x1a
    1326:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1328:	7c 8d       	ldd	r23, Y+28	; 0x1c
    132a:	80 55       	subi	r24, 0x50	; 80
    132c:	9b 4f       	sbci	r25, 0xFB	; 251
    132e:	3a df       	rcall	.-396    	; 0x11a4 <newPoint>
	
	double alpha = ang.a * R2D;
	double beta = ang.b * R2D;
    1330:	21 ee       	ldi	r18, 0xE1	; 225
    1332:	3e e2       	ldi	r19, 0x2E	; 46
    1334:	45 e6       	ldi	r20, 0x65	; 101
    1336:	52 e4       	ldi	r21, 0x42	; 66
    1338:	69 89       	ldd	r22, Y+17	; 0x11
    133a:	7a 89       	ldd	r23, Y+18	; 0x12
    133c:	8b 89       	ldd	r24, Y+19	; 0x13
    133e:	9c 89       	ldd	r25, Y+20	; 0x14
    1340:	0e 94 90 12 	call	0x2520	; 0x2520 <__mulsf3>
    1344:	a6 2e       	mov	r10, r22
    1346:	b7 2e       	mov	r11, r23
    1348:	c8 2e       	mov	r12, r24
    134a:	d9 2e       	mov	r13, r25
	double gamma = ang.c * R2D;
    134c:	21 ee       	ldi	r18, 0xE1	; 225
    134e:	3e e2       	ldi	r19, 0x2E	; 46
    1350:	45 e6       	ldi	r20, 0x65	; 101
    1352:	52 e4       	ldi	r21, 0x42	; 66
    1354:	6d 89       	ldd	r22, Y+21	; 0x15
    1356:	7e 89       	ldd	r23, Y+22	; 0x16
    1358:	8f 89       	ldd	r24, Y+23	; 0x17
    135a:	98 8d       	ldd	r25, Y+24	; 0x18
    135c:	0e 94 90 12 	call	0x2520	; 0x2520 <__mulsf3>
    1360:	e6 2e       	mov	r14, r22
    1362:	f7 2e       	mov	r15, r23
    1364:	08 2f       	mov	r16, r24
    1366:	19 2f       	mov	r17, r25
	
	struct angles ang = ik (cur.y, cur.x, cur.z);
	
	last_c[id] = newPoint(cur.y, cur.x, cur.z);
	
	double alpha = ang.a * R2D;
    1368:	21 ee       	ldi	r18, 0xE1	; 225
    136a:	3e e2       	ldi	r19, 0x2E	; 46
    136c:	45 e6       	ldi	r20, 0x65	; 101
    136e:	52 e4       	ldi	r21, 0x42	; 66
    1370:	6d 85       	ldd	r22, Y+13	; 0x0d
    1372:	7e 85       	ldd	r23, Y+14	; 0x0e
    1374:	8f 85       	ldd	r24, Y+15	; 0x0f
    1376:	98 89       	ldd	r25, Y+16	; 0x10
    1378:	0e 94 90 12 	call	0x2520	; 0x2520 <__mulsf3>
    137c:	9b 01       	movw	r18, r22
    137e:	ac 01       	movw	r20, r24
	double beta = ang.b * R2D;
	double gamma = ang.c * R2D;
	
	rotate(id, 1, alpha);
    1380:	61 e0       	ldi	r22, 0x01	; 1
    1382:	70 e0       	ldi	r23, 0x00	; 0
    1384:	c1 01       	movw	r24, r2
    1386:	01 d5       	rcall	.+2562   	; 0x1d8a <rotate>
	rotate(id, 2, beta - 90);
    1388:	20 e0       	ldi	r18, 0x00	; 0
    138a:	30 e0       	ldi	r19, 0x00	; 0
    138c:	44 eb       	ldi	r20, 0xB4	; 180
    138e:	52 e4       	ldi	r21, 0x42	; 66
    1390:	6a 2d       	mov	r22, r10
    1392:	7b 2d       	mov	r23, r11
    1394:	8c 2d       	mov	r24, r12
    1396:	9d 2d       	mov	r25, r13
    1398:	52 d6       	rcall	.+3236   	; 0x203e <__subsf3>
    139a:	9b 01       	movw	r18, r22
    139c:	ac 01       	movw	r20, r24
    139e:	62 e0       	ldi	r22, 0x02	; 2
    13a0:	70 e0       	ldi	r23, 0x00	; 0
    13a2:	c1 01       	movw	r24, r2
    13a4:	f2 d4       	rcall	.+2532   	; 0x1d8a <rotate>
	rotate(id, 3, 180 - gamma);
    13a6:	2e 2d       	mov	r18, r14
    13a8:	3f 2d       	mov	r19, r15
    13aa:	40 2f       	mov	r20, r16
    13ac:	51 2f       	mov	r21, r17
    13ae:	60 e0       	ldi	r22, 0x00	; 0
    13b0:	70 e0       	ldi	r23, 0x00	; 0
    13b2:	84 e3       	ldi	r24, 0x34	; 52
    13b4:	93 e4       	ldi	r25, 0x43	; 67
    13b6:	43 d6       	rcall	.+3206   	; 0x203e <__subsf3>
    13b8:	9b 01       	movw	r18, r22
    13ba:	ac 01       	movw	r20, r24
    13bc:	63 e0       	ldi	r22, 0x03	; 3
    13be:	70 e0       	ldi	r23, 0x00	; 0
    13c0:	c1 01       	movw	r24, r2
    13c2:	e3 d4       	rcall	.+2502   	; 0x1d8a <rotate>
	
}
    13c4:	6c 96       	adiw	r28, 0x1c	; 28
    13c6:	0f b6       	in	r0, 0x3f	; 63
    13c8:	f8 94       	cli
    13ca:	de bf       	out	0x3e, r29	; 62
    13cc:	0f be       	out	0x3f, r0	; 63
    13ce:	cd bf       	out	0x3d, r28	; 61
    13d0:	df 91       	pop	r29
    13d2:	cf 91       	pop	r28
    13d4:	1f 91       	pop	r17
    13d6:	0f 91       	pop	r16
    13d8:	ff 90       	pop	r15
    13da:	ef 90       	pop	r14
    13dc:	df 90       	pop	r13
    13de:	cf 90       	pop	r12
    13e0:	bf 90       	pop	r11
    13e2:	af 90       	pop	r10
    13e4:	9f 90       	pop	r9
    13e6:	8f 90       	pop	r8
    13e8:	7f 90       	pop	r7
    13ea:	6f 90       	pop	r6
    13ec:	5f 90       	pop	r5
    13ee:	4f 90       	pop	r4
    13f0:	3f 90       	pop	r3
    13f2:	2f 90       	pop	r2
    13f4:	08 95       	ret

000013f6 <rotate_x>:


void rotate_x (double alpha) {
    13f6:	2f 92       	push	r2
    13f8:	3f 92       	push	r3
    13fa:	4f 92       	push	r4
    13fc:	5f 92       	push	r5
    13fe:	6f 92       	push	r6
    1400:	7f 92       	push	r7
    1402:	8f 92       	push	r8
    1404:	9f 92       	push	r9
    1406:	af 92       	push	r10
    1408:	bf 92       	push	r11
    140a:	cf 92       	push	r12
    140c:	df 92       	push	r13
    140e:	ef 92       	push	r14
    1410:	ff 92       	push	r15
    1412:	0f 93       	push	r16
    1414:	1f 93       	push	r17
    1416:	cf 93       	push	r28
    1418:	df 93       	push	r29
    141a:	cd b7       	in	r28, 0x3d	; 61
    141c:	de b7       	in	r29, 0x3e	; 62
    141e:	ad 97       	sbiw	r28, 0x2d	; 45
    1420:	0f b6       	in	r0, 0x3f	; 63
    1422:	f8 94       	cli
    1424:	de bf       	out	0x3e, r29	; 62
    1426:	0f be       	out	0x3f, r0	; 63
    1428:	cd bf       	out	0x3d, r28	; 61
	struct point cur, res;
	alpha = alpha * PI / 180.;
    142a:	2b ed       	ldi	r18, 0xDB	; 219
    142c:	3f e0       	ldi	r19, 0x0F	; 15
    142e:	49 e4       	ldi	r20, 0x49	; 73
    1430:	50 e4       	ldi	r21, 0x40	; 64
    1432:	0e 94 90 12 	call	0x2520	; 0x2520 <__mulsf3>
    1436:	20 e0       	ldi	r18, 0x00	; 0
    1438:	30 e0       	ldi	r19, 0x00	; 0
    143a:	44 e3       	ldi	r20, 0x34	; 52
    143c:	53 e4       	ldi	r21, 0x43	; 67
    143e:	c9 d6       	rcall	.+3474   	; 0x21d2 <__divsf3>
    1440:	c6 2e       	mov	r12, r22
    1442:	d7 2e       	mov	r13, r23
    1444:	e8 2e       	mov	r14, r24
    1446:	f9 2e       	mov	r15, r25
	for (int id = 1; id <= 6; id++) {
		cur.x = last_c[id].y, cur.y = last_c[id].x, cur.z = last_c[id].z;
		cur = set_origin (id, cur, 1);
		res.x = cur.x, res.y = cur.y * cos (alpha) - cur.z * sin(alpha), res.z = cur.y * sin (alpha) + cur.z * cos (alpha);
    1448:	c1 d6       	rcall	.+3458   	; 0x21cc <cos>
    144a:	6d 8f       	std	Y+29, r22	; 0x1d
    144c:	7e 8f       	std	Y+30, r23	; 0x1e
    144e:	8f 8f       	std	Y+31, r24	; 0x1f
    1450:	98 a3       	std	Y+32, r25	; 0x20
    1452:	6c 2d       	mov	r22, r12
    1454:	7d 2d       	mov	r23, r13
    1456:	8e 2d       	mov	r24, r14
    1458:	9f 2d       	mov	r25, r15
    145a:	0e 94 f3 12 	call	0x25e6	; 0x25e6 <sin>
    145e:	69 a3       	std	Y+33, r22	; 0x21
    1460:	7a a3       	std	Y+34, r23	; 0x22
    1462:	8b a3       	std	Y+35, r24	; 0x23
    1464:	9c a3       	std	Y+36, r25	; 0x24
    1466:	0f 2e       	mov	r0, r31
    1468:	fc eb       	ldi	r31, 0xBC	; 188
    146a:	6f 2e       	mov	r6, r31
    146c:	f4 e0       	ldi	r31, 0x04	; 4
    146e:	7f 2e       	mov	r7, r31
    1470:	f0 2d       	mov	r31, r0


void rotate_x (double alpha) {
	struct point cur, res;
	alpha = alpha * PI / 180.;
	for (int id = 1; id <= 6; id++) {
    1472:	22 24       	eor	r2, r2
    1474:	23 94       	inc	r2
    1476:	31 2c       	mov	r3, r1
		cur.x = last_c[id].y, cur.y = last_c[id].x, cur.z = last_c[id].z;
    1478:	d3 01       	movw	r26, r6
    147a:	2c 91       	ld	r18, X
    147c:	11 96       	adiw	r26, 0x01	; 1
    147e:	fc 90       	ld	r15, X
    1480:	11 97       	sbiw	r26, 0x01	; 1
    1482:	12 96       	adiw	r26, 0x02	; 2
    1484:	fc 91       	ld	r31, X
    1486:	12 97       	sbiw	r26, 0x02	; 2
    1488:	13 96       	adiw	r26, 0x03	; 3
    148a:	ec 91       	ld	r30, X
    148c:	13 97       	sbiw	r26, 0x03	; 3
    148e:	18 96       	adiw	r26, 0x08	; 8
    1490:	3c 91       	ld	r19, X
    1492:	18 97       	sbiw	r26, 0x08	; 8
    1494:	19 96       	adiw	r26, 0x09	; 9
    1496:	7c 91       	ld	r23, X
    1498:	19 97       	sbiw	r26, 0x09	; 9
    149a:	1a 96       	adiw	r26, 0x0a	; 10
    149c:	6c 91       	ld	r22, X
    149e:	1a 97       	sbiw	r26, 0x0a	; 10
    14a0:	1b 96       	adiw	r26, 0x0b	; 11
    14a2:	5c 91       	ld	r21, X
    14a4:	1b 97       	sbiw	r26, 0x0b	; 11
		cur = set_origin (id, cur, 1);
    14a6:	14 96       	adiw	r26, 0x04	; 4
    14a8:	4c 91       	ld	r20, X
    14aa:	14 97       	sbiw	r26, 0x04	; 4
    14ac:	15 96       	adiw	r26, 0x05	; 5
    14ae:	cc 90       	ld	r12, X
    14b0:	15 97       	sbiw	r26, 0x05	; 5
    14b2:	16 96       	adiw	r26, 0x06	; 6
    14b4:	dc 90       	ld	r13, X
    14b6:	16 97       	sbiw	r26, 0x06	; 6
    14b8:	17 96       	adiw	r26, 0x07	; 7
    14ba:	ec 90       	ld	r14, X
    14bc:	a4 2e       	mov	r10, r20
    14be:	84 2f       	mov	r24, r20
    14c0:	9c 2d       	mov	r25, r12
    14c2:	ad 2d       	mov	r26, r13
    14c4:	be 2d       	mov	r27, r14
    14c6:	89 83       	std	Y+1, r24	; 0x01
    14c8:	9a 83       	std	Y+2, r25	; 0x02
    14ca:	ab 83       	std	Y+3, r26	; 0x03
    14cc:	bc 83       	std	Y+4, r27	; 0x04
    14ce:	e2 2e       	mov	r14, r18
    14d0:	82 2f       	mov	r24, r18
    14d2:	9f 2d       	mov	r25, r15
    14d4:	af 2f       	mov	r26, r31
    14d6:	be 2f       	mov	r27, r30
    14d8:	8d 83       	std	Y+5, r24	; 0x05
    14da:	9e 83       	std	Y+6, r25	; 0x06
    14dc:	af 83       	std	Y+7, r26	; 0x07
    14de:	b8 87       	std	Y+8, r27	; 0x08
    14e0:	23 2f       	mov	r18, r19
    14e2:	83 2f       	mov	r24, r19
    14e4:	97 2f       	mov	r25, r23
    14e6:	a6 2f       	mov	r26, r22
    14e8:	b5 2f       	mov	r27, r21
    14ea:	89 87       	std	Y+9, r24	; 0x09
    14ec:	9a 87       	std	Y+10, r25	; 0x0a
    14ee:	ab 87       	std	Y+11, r26	; 0x0b
    14f0:	bc 87       	std	Y+12, r27	; 0x0c
    14f2:	88 24       	eor	r8, r8
    14f4:	83 94       	inc	r8
    14f6:	91 2c       	mov	r9, r1
    14f8:	ba 80       	ldd	r11, Y+2	; 0x02
    14fa:	cb 80       	ldd	r12, Y+3	; 0x03
    14fc:	dc 80       	ldd	r13, Y+4	; 0x04
    14fe:	fe 80       	ldd	r15, Y+6	; 0x06
    1500:	0f 81       	ldd	r16, Y+7	; 0x07
    1502:	18 85       	ldd	r17, Y+8	; 0x08
    1504:	3a 85       	ldd	r19, Y+10	; 0x0a
    1506:	4b 85       	ldd	r20, Y+11	; 0x0b
    1508:	5c 85       	ldd	r21, Y+12	; 0x0c
    150a:	b1 01       	movw	r22, r2
    150c:	ce 01       	movw	r24, r28
    150e:	01 96       	adiw	r24, 0x01	; 1
    1510:	f2 dc       	rcall	.-1564   	; 0xef6 <set_origin>
    1512:	89 81       	ldd	r24, Y+1	; 0x01
    1514:	9a 81       	ldd	r25, Y+2	; 0x02
    1516:	ab 81       	ldd	r26, Y+3	; 0x03
    1518:	bc 81       	ldd	r27, Y+4	; 0x04
    151a:	8d a3       	std	Y+37, r24	; 0x25
    151c:	9e a3       	std	Y+38, r25	; 0x26
    151e:	af a3       	std	Y+39, r26	; 0x27
    1520:	b8 a7       	std	Y+40, r27	; 0x28
    1522:	8d 80       	ldd	r8, Y+5	; 0x05
    1524:	9e 80       	ldd	r9, Y+6	; 0x06
    1526:	af 80       	ldd	r10, Y+7	; 0x07
    1528:	b8 84       	ldd	r11, Y+8	; 0x08
    152a:	c9 84       	ldd	r12, Y+9	; 0x09
    152c:	da 84       	ldd	r13, Y+10	; 0x0a
    152e:	eb 84       	ldd	r14, Y+11	; 0x0b
    1530:	fc 84       	ldd	r15, Y+12	; 0x0c
		res.x = cur.x, res.y = cur.y * cos (alpha) - cur.z * sin(alpha), res.z = cur.y * sin (alpha) + cur.z * cos (alpha);
    1532:	a5 01       	movw	r20, r10
    1534:	94 01       	movw	r18, r8
    1536:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1538:	7e 8d       	ldd	r23, Y+30	; 0x1e
    153a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    153c:	98 a1       	ldd	r25, Y+32	; 0x20
    153e:	f0 d7       	rcall	.+4064   	; 0x2520 <__mulsf3>
    1540:	69 8f       	std	Y+25, r22	; 0x19
    1542:	7a 8f       	std	Y+26, r23	; 0x1a
    1544:	8b 8f       	std	Y+27, r24	; 0x1b
    1546:	9c 8f       	std	Y+28, r25	; 0x1c
    1548:	a7 01       	movw	r20, r14
    154a:	96 01       	movw	r18, r12
    154c:	69 a1       	ldd	r22, Y+33	; 0x21
    154e:	7a a1       	ldd	r23, Y+34	; 0x22
    1550:	8b a1       	ldd	r24, Y+35	; 0x23
    1552:	9c a1       	ldd	r25, Y+36	; 0x24
    1554:	e5 d7       	rcall	.+4042   	; 0x2520 <__mulsf3>
    1556:	9b 01       	movw	r18, r22
    1558:	ac 01       	movw	r20, r24
    155a:	69 8d       	ldd	r22, Y+25	; 0x19
    155c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    155e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1560:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1562:	6d d5       	rcall	.+2778   	; 0x203e <__subsf3>
    1564:	69 8f       	std	Y+25, r22	; 0x19
    1566:	79 a7       	std	Y+41, r23	; 0x29
    1568:	8a a7       	std	Y+42, r24	; 0x2a
    156a:	9b a7       	std	Y+43, r25	; 0x2b
    156c:	a5 01       	movw	r20, r10
    156e:	94 01       	movw	r18, r8
    1570:	69 a1       	ldd	r22, Y+33	; 0x21
    1572:	7a a1       	ldd	r23, Y+34	; 0x22
    1574:	8b a1       	ldd	r24, Y+35	; 0x23
    1576:	9c a1       	ldd	r25, Y+36	; 0x24
    1578:	d3 d7       	rcall	.+4006   	; 0x2520 <__mulsf3>
    157a:	4b 01       	movw	r8, r22
    157c:	5c 01       	movw	r10, r24
    157e:	a7 01       	movw	r20, r14
    1580:	96 01       	movw	r18, r12
    1582:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1584:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1586:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1588:	98 a1       	ldd	r25, Y+32	; 0x20
    158a:	ca d7       	rcall	.+3988   	; 0x2520 <__mulsf3>
    158c:	9b 01       	movw	r18, r22
    158e:	ac 01       	movw	r20, r24
    1590:	c5 01       	movw	r24, r10
    1592:	b4 01       	movw	r22, r8
    1594:	55 d5       	rcall	.+2730   	; 0x2040 <__addsf3>
    1596:	6c a7       	std	Y+44, r22	; 0x2c
    1598:	7d a7       	std	Y+45, r23	; 0x2d
    159a:	58 2e       	mov	r5, r24
    159c:	49 2e       	mov	r4, r25
		cur = set_origin (id, cur, -1);
    159e:	88 24       	eor	r8, r8
    15a0:	8a 94       	dec	r8
    15a2:	98 2c       	mov	r9, r8
    15a4:	a9 80       	ldd	r10, Y+1	; 0x01
    15a6:	ba 80       	ldd	r11, Y+2	; 0x02
    15a8:	cb 80       	ldd	r12, Y+3	; 0x03
    15aa:	dc 80       	ldd	r13, Y+4	; 0x04
    15ac:	ed 80       	ldd	r14, Y+5	; 0x05
    15ae:	fe 80       	ldd	r15, Y+6	; 0x06
    15b0:	0f 81       	ldd	r16, Y+7	; 0x07
    15b2:	18 85       	ldd	r17, Y+8	; 0x08
    15b4:	29 85       	ldd	r18, Y+9	; 0x09
    15b6:	3a 85       	ldd	r19, Y+10	; 0x0a
    15b8:	4b 85       	ldd	r20, Y+11	; 0x0b
    15ba:	5c 85       	ldd	r21, Y+12	; 0x0c
    15bc:	b1 01       	movw	r22, r2
    15be:	ce 01       	movw	r24, r28
    15c0:	0d 96       	adiw	r24, 0x0d	; 13
    15c2:	99 dc       	rcall	.-1742   	; 0xef6 <set_origin>
    15c4:	fe 01       	movw	r30, r28
    15c6:	3d 96       	adiw	r30, 0x0d	; 13
    15c8:	de 01       	movw	r26, r28
    15ca:	11 96       	adiw	r26, 0x01	; 1
    15cc:	8c e0       	ldi	r24, 0x0C	; 12
    15ce:	01 90       	ld	r0, Z+
    15d0:	0d 92       	st	X+, r0
    15d2:	8a 95       	dec	r24
    15d4:	e1 f7       	brne	.-8      	; 0x15ce <rotate_x+0x1d8>
		cur.x = res.y, cur.y = res.x, cur.z = res.z;
		get_to_point(id, cur.x, cur.y, cur.z);
    15d6:	3c a5       	ldd	r19, Y+44	; 0x2c
    15d8:	2d a5       	ldd	r18, Y+45	; 0x2d
    15da:	c3 2e       	mov	r12, r19
    15dc:	d2 2e       	mov	r13, r18
    15de:	e5 2c       	mov	r14, r5
    15e0:	f4 2c       	mov	r15, r4
    15e2:	0d a1       	ldd	r16, Y+37	; 0x25
    15e4:	1e a1       	ldd	r17, Y+38	; 0x26
    15e6:	2f a1       	ldd	r18, Y+39	; 0x27
    15e8:	38 a5       	ldd	r19, Y+40	; 0x28
    15ea:	f9 8d       	ldd	r31, Y+25	; 0x19
    15ec:	e9 a5       	ldd	r30, Y+41	; 0x29
    15ee:	9a a5       	ldd	r25, Y+42	; 0x2a
    15f0:	8b a5       	ldd	r24, Y+43	; 0x2b
    15f2:	4f 2f       	mov	r20, r31
    15f4:	5e 2f       	mov	r21, r30
    15f6:	69 2f       	mov	r22, r25
    15f8:	78 2f       	mov	r23, r24
    15fa:	c1 01       	movw	r24, r2
    15fc:	ed dd       	rcall	.-1062   	; 0x11d8 <get_to_point>


void rotate_x (double alpha) {
	struct point cur, res;
	alpha = alpha * PI / 180.;
	for (int id = 1; id <= 6; id++) {
    15fe:	9f ef       	ldi	r25, 0xFF	; 255
    1600:	29 1a       	sub	r2, r25
    1602:	39 0a       	sbc	r3, r25
    1604:	ac e0       	ldi	r26, 0x0C	; 12
    1606:	6a 0e       	add	r6, r26
    1608:	71 1c       	adc	r7, r1
    160a:	b7 e0       	ldi	r27, 0x07	; 7
    160c:	2b 16       	cp	r2, r27
    160e:	31 04       	cpc	r3, r1
    1610:	09 f0       	breq	.+2      	; 0x1614 <rotate_x+0x21e>
    1612:	32 cf       	rjmp	.-412    	; 0x1478 <rotate_x+0x82>
		res.x = cur.x, res.y = cur.y * cos (alpha) - cur.z * sin(alpha), res.z = cur.y * sin (alpha) + cur.z * cos (alpha);
		cur = set_origin (id, cur, -1);
		cur.x = res.y, cur.y = res.x, cur.z = res.z;
		get_to_point(id, cur.x, cur.y, cur.z);
	}
}
    1614:	ad 96       	adiw	r28, 0x2d	; 45
    1616:	0f b6       	in	r0, 0x3f	; 63
    1618:	f8 94       	cli
    161a:	de bf       	out	0x3e, r29	; 62
    161c:	0f be       	out	0x3f, r0	; 63
    161e:	cd bf       	out	0x3d, r28	; 61
    1620:	df 91       	pop	r29
    1622:	cf 91       	pop	r28
    1624:	1f 91       	pop	r17
    1626:	0f 91       	pop	r16
    1628:	ff 90       	pop	r15
    162a:	ef 90       	pop	r14
    162c:	df 90       	pop	r13
    162e:	cf 90       	pop	r12
    1630:	bf 90       	pop	r11
    1632:	af 90       	pop	r10
    1634:	9f 90       	pop	r9
    1636:	8f 90       	pop	r8
    1638:	7f 90       	pop	r7
    163a:	6f 90       	pop	r6
    163c:	5f 90       	pop	r5
    163e:	4f 90       	pop	r4
    1640:	3f 90       	pop	r3
    1642:	2f 90       	pop	r2
    1644:	08 95       	ret

00001646 <rotate_y>:

void rotate_y (double alpha) {
    1646:	2f 92       	push	r2
    1648:	3f 92       	push	r3
    164a:	4f 92       	push	r4
    164c:	5f 92       	push	r5
    164e:	6f 92       	push	r6
    1650:	7f 92       	push	r7
    1652:	8f 92       	push	r8
    1654:	9f 92       	push	r9
    1656:	af 92       	push	r10
    1658:	bf 92       	push	r11
    165a:	cf 92       	push	r12
    165c:	df 92       	push	r13
    165e:	ef 92       	push	r14
    1660:	ff 92       	push	r15
    1662:	0f 93       	push	r16
    1664:	1f 93       	push	r17
    1666:	cf 93       	push	r28
    1668:	df 93       	push	r29
    166a:	cd b7       	in	r28, 0x3d	; 61
    166c:	de b7       	in	r29, 0x3e	; 62
    166e:	ad 97       	sbiw	r28, 0x2d	; 45
    1670:	0f b6       	in	r0, 0x3f	; 63
    1672:	f8 94       	cli
    1674:	de bf       	out	0x3e, r29	; 62
    1676:	0f be       	out	0x3f, r0	; 63
    1678:	cd bf       	out	0x3d, r28	; 61
	struct point cur, res;
	alpha = alpha * PI / 180.;
    167a:	2b ed       	ldi	r18, 0xDB	; 219
    167c:	3f e0       	ldi	r19, 0x0F	; 15
    167e:	49 e4       	ldi	r20, 0x49	; 73
    1680:	50 e4       	ldi	r21, 0x40	; 64
    1682:	4e d7       	rcall	.+3740   	; 0x2520 <__mulsf3>
    1684:	20 e0       	ldi	r18, 0x00	; 0
    1686:	30 e0       	ldi	r19, 0x00	; 0
    1688:	44 e3       	ldi	r20, 0x34	; 52
    168a:	53 e4       	ldi	r21, 0x43	; 67
    168c:	a2 d5       	rcall	.+2884   	; 0x21d2 <__divsf3>
    168e:	e6 2e       	mov	r14, r22
    1690:	f7 2e       	mov	r15, r23
    1692:	08 2f       	mov	r16, r24
    1694:	19 2f       	mov	r17, r25
	for (int id = 1; id <= 6; id++) {
		cur.x = last_c[id].y, cur.y = last_c[id].x, cur.z = last_c[id].z;
		cur = set_origin (id, cur, 1);
		res.x = cur.x * cos (alpha) + cur.z * sin (alpha), res.y = cur.y, res.z = -cur.x * sin (alpha) + cur.z * cos (alpha);
    1696:	80 2f       	mov	r24, r16
    1698:	91 2f       	mov	r25, r17
    169a:	98 d5       	rcall	.+2864   	; 0x21cc <cos>
    169c:	6d 8f       	std	Y+29, r22	; 0x1d
    169e:	7e 8f       	std	Y+30, r23	; 0x1e
    16a0:	8f 8f       	std	Y+31, r24	; 0x1f
    16a2:	98 a3       	std	Y+32, r25	; 0x20
    16a4:	6e 2d       	mov	r22, r14
    16a6:	7f 2d       	mov	r23, r15
    16a8:	80 2f       	mov	r24, r16
    16aa:	91 2f       	mov	r25, r17
    16ac:	9c d7       	rcall	.+3896   	; 0x25e6 <sin>
    16ae:	69 a3       	std	Y+33, r22	; 0x21
    16b0:	7a a3       	std	Y+34, r23	; 0x22
    16b2:	8b a3       	std	Y+35, r24	; 0x23
    16b4:	9c a3       	std	Y+36, r25	; 0x24
    16b6:	0f 2e       	mov	r0, r31
    16b8:	fc eb       	ldi	r31, 0xBC	; 188
    16ba:	6f 2e       	mov	r6, r31
    16bc:	f4 e0       	ldi	r31, 0x04	; 4
    16be:	7f 2e       	mov	r7, r31
    16c0:	f0 2d       	mov	r31, r0
}

void rotate_y (double alpha) {
	struct point cur, res;
	alpha = alpha * PI / 180.;
	for (int id = 1; id <= 6; id++) {
    16c2:	22 24       	eor	r2, r2
    16c4:	23 94       	inc	r2
    16c6:	31 2c       	mov	r3, r1
		cur.x = last_c[id].y, cur.y = last_c[id].x, cur.z = last_c[id].z;
    16c8:	d3 01       	movw	r26, r6
    16ca:	2c 91       	ld	r18, X
    16cc:	11 96       	adiw	r26, 0x01	; 1
    16ce:	1c 91       	ld	r17, X
    16d0:	11 97       	sbiw	r26, 0x01	; 1
    16d2:	12 96       	adiw	r26, 0x02	; 2
    16d4:	fc 91       	ld	r31, X
    16d6:	12 97       	sbiw	r26, 0x02	; 2
    16d8:	13 96       	adiw	r26, 0x03	; 3
    16da:	ec 91       	ld	r30, X
    16dc:	13 97       	sbiw	r26, 0x03	; 3
    16de:	18 96       	adiw	r26, 0x08	; 8
    16e0:	3c 91       	ld	r19, X
    16e2:	18 97       	sbiw	r26, 0x08	; 8
    16e4:	19 96       	adiw	r26, 0x09	; 9
    16e6:	7c 91       	ld	r23, X
    16e8:	19 97       	sbiw	r26, 0x09	; 9
    16ea:	1a 96       	adiw	r26, 0x0a	; 10
    16ec:	6c 91       	ld	r22, X
    16ee:	1a 97       	sbiw	r26, 0x0a	; 10
    16f0:	1b 96       	adiw	r26, 0x0b	; 11
    16f2:	5c 91       	ld	r21, X
    16f4:	1b 97       	sbiw	r26, 0x0b	; 11
		cur = set_origin (id, cur, 1);
    16f6:	14 96       	adiw	r26, 0x04	; 4
    16f8:	4c 91       	ld	r20, X
    16fa:	14 97       	sbiw	r26, 0x04	; 4
    16fc:	15 96       	adiw	r26, 0x05	; 5
    16fe:	ec 90       	ld	r14, X
    1700:	15 97       	sbiw	r26, 0x05	; 5
    1702:	16 96       	adiw	r26, 0x06	; 6
    1704:	fc 90       	ld	r15, X
    1706:	16 97       	sbiw	r26, 0x06	; 6
    1708:	17 96       	adiw	r26, 0x07	; 7
    170a:	0c 91       	ld	r16, X
    170c:	a4 2e       	mov	r10, r20
    170e:	84 2f       	mov	r24, r20
    1710:	9e 2d       	mov	r25, r14
    1712:	af 2d       	mov	r26, r15
    1714:	b0 2f       	mov	r27, r16
    1716:	89 83       	std	Y+1, r24	; 0x01
    1718:	9a 83       	std	Y+2, r25	; 0x02
    171a:	ab 83       	std	Y+3, r26	; 0x03
    171c:	bc 83       	std	Y+4, r27	; 0x04
    171e:	e2 2e       	mov	r14, r18
    1720:	82 2f       	mov	r24, r18
    1722:	91 2f       	mov	r25, r17
    1724:	af 2f       	mov	r26, r31
    1726:	be 2f       	mov	r27, r30
    1728:	8d 83       	std	Y+5, r24	; 0x05
    172a:	9e 83       	std	Y+6, r25	; 0x06
    172c:	af 83       	std	Y+7, r26	; 0x07
    172e:	b8 87       	std	Y+8, r27	; 0x08
    1730:	23 2f       	mov	r18, r19
    1732:	83 2f       	mov	r24, r19
    1734:	97 2f       	mov	r25, r23
    1736:	a6 2f       	mov	r26, r22
    1738:	b5 2f       	mov	r27, r21
    173a:	89 87       	std	Y+9, r24	; 0x09
    173c:	9a 87       	std	Y+10, r25	; 0x0a
    173e:	ab 87       	std	Y+11, r26	; 0x0b
    1740:	bc 87       	std	Y+12, r27	; 0x0c
    1742:	88 24       	eor	r8, r8
    1744:	83 94       	inc	r8
    1746:	91 2c       	mov	r9, r1
    1748:	ba 80       	ldd	r11, Y+2	; 0x02
    174a:	cb 80       	ldd	r12, Y+3	; 0x03
    174c:	dc 80       	ldd	r13, Y+4	; 0x04
    174e:	fe 80       	ldd	r15, Y+6	; 0x06
    1750:	0f 81       	ldd	r16, Y+7	; 0x07
    1752:	18 85       	ldd	r17, Y+8	; 0x08
    1754:	3a 85       	ldd	r19, Y+10	; 0x0a
    1756:	4b 85       	ldd	r20, Y+11	; 0x0b
    1758:	5c 85       	ldd	r21, Y+12	; 0x0c
    175a:	b1 01       	movw	r22, r2
    175c:	ce 01       	movw	r24, r28
    175e:	01 96       	adiw	r24, 0x01	; 1
    1760:	ca db       	rcall	.-2156   	; 0xef6 <set_origin>
    1762:	89 80       	ldd	r8, Y+1	; 0x01
    1764:	9a 80       	ldd	r9, Y+2	; 0x02
    1766:	ab 80       	ldd	r10, Y+3	; 0x03
    1768:	bc 80       	ldd	r11, Y+4	; 0x04
    176a:	8d 81       	ldd	r24, Y+5	; 0x05
    176c:	9e 81       	ldd	r25, Y+6	; 0x06
    176e:	af 81       	ldd	r26, Y+7	; 0x07
    1770:	b8 85       	ldd	r27, Y+8	; 0x08
    1772:	8d a3       	std	Y+37, r24	; 0x25
    1774:	9e a3       	std	Y+38, r25	; 0x26
    1776:	af a3       	std	Y+39, r26	; 0x27
    1778:	b8 a7       	std	Y+40, r27	; 0x28
    177a:	c9 84       	ldd	r12, Y+9	; 0x09
    177c:	da 84       	ldd	r13, Y+10	; 0x0a
    177e:	eb 84       	ldd	r14, Y+11	; 0x0b
    1780:	fc 84       	ldd	r15, Y+12	; 0x0c
		res.x = cur.x * cos (alpha) + cur.z * sin (alpha), res.y = cur.y, res.z = -cur.x * sin (alpha) + cur.z * cos (alpha);
    1782:	a5 01       	movw	r20, r10
    1784:	94 01       	movw	r18, r8
    1786:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1788:	7e 8d       	ldd	r23, Y+30	; 0x1e
    178a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    178c:	98 a1       	ldd	r25, Y+32	; 0x20
    178e:	c8 d6       	rcall	.+3472   	; 0x2520 <__mulsf3>
    1790:	69 8f       	std	Y+25, r22	; 0x19
    1792:	7a 8f       	std	Y+26, r23	; 0x1a
    1794:	8b 8f       	std	Y+27, r24	; 0x1b
    1796:	9c 8f       	std	Y+28, r25	; 0x1c
    1798:	a7 01       	movw	r20, r14
    179a:	96 01       	movw	r18, r12
    179c:	69 a1       	ldd	r22, Y+33	; 0x21
    179e:	7a a1       	ldd	r23, Y+34	; 0x22
    17a0:	8b a1       	ldd	r24, Y+35	; 0x23
    17a2:	9c a1       	ldd	r25, Y+36	; 0x24
    17a4:	bd d6       	rcall	.+3450   	; 0x2520 <__mulsf3>
    17a6:	9b 01       	movw	r18, r22
    17a8:	ac 01       	movw	r20, r24
    17aa:	69 8d       	ldd	r22, Y+25	; 0x19
    17ac:	7a 8d       	ldd	r23, Y+26	; 0x1a
    17ae:	8b 8d       	ldd	r24, Y+27	; 0x1b
    17b0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    17b2:	46 d4       	rcall	.+2188   	; 0x2040 <__addsf3>
    17b4:	69 8f       	std	Y+25, r22	; 0x19
    17b6:	79 a7       	std	Y+41, r23	; 0x29
    17b8:	48 2e       	mov	r4, r24
    17ba:	59 2e       	mov	r5, r25
    17bc:	a5 01       	movw	r20, r10
    17be:	94 01       	movw	r18, r8
    17c0:	50 58       	subi	r21, 0x80	; 128
    17c2:	69 a1       	ldd	r22, Y+33	; 0x21
    17c4:	7a a1       	ldd	r23, Y+34	; 0x22
    17c6:	8b a1       	ldd	r24, Y+35	; 0x23
    17c8:	9c a1       	ldd	r25, Y+36	; 0x24
    17ca:	aa d6       	rcall	.+3412   	; 0x2520 <__mulsf3>
    17cc:	4b 01       	movw	r8, r22
    17ce:	5c 01       	movw	r10, r24
    17d0:	a7 01       	movw	r20, r14
    17d2:	96 01       	movw	r18, r12
    17d4:	6d 8d       	ldd	r22, Y+29	; 0x1d
    17d6:	7e 8d       	ldd	r23, Y+30	; 0x1e
    17d8:	8f 8d       	ldd	r24, Y+31	; 0x1f
    17da:	98 a1       	ldd	r25, Y+32	; 0x20
    17dc:	a1 d6       	rcall	.+3394   	; 0x2520 <__mulsf3>
    17de:	9b 01       	movw	r18, r22
    17e0:	ac 01       	movw	r20, r24
    17e2:	c5 01       	movw	r24, r10
    17e4:	b4 01       	movw	r22, r8
    17e6:	2c d4       	rcall	.+2136   	; 0x2040 <__addsf3>
    17e8:	6a a7       	std	Y+42, r22	; 0x2a
    17ea:	7b a7       	std	Y+43, r23	; 0x2b
    17ec:	8c a7       	std	Y+44, r24	; 0x2c
    17ee:	9d a7       	std	Y+45, r25	; 0x2d
		cur = set_origin (id, cur, -1);
    17f0:	88 24       	eor	r8, r8
    17f2:	8a 94       	dec	r8
    17f4:	98 2c       	mov	r9, r8
    17f6:	a9 80       	ldd	r10, Y+1	; 0x01
    17f8:	ba 80       	ldd	r11, Y+2	; 0x02
    17fa:	cb 80       	ldd	r12, Y+3	; 0x03
    17fc:	dc 80       	ldd	r13, Y+4	; 0x04
    17fe:	ed 80       	ldd	r14, Y+5	; 0x05
    1800:	fe 80       	ldd	r15, Y+6	; 0x06
    1802:	0f 81       	ldd	r16, Y+7	; 0x07
    1804:	18 85       	ldd	r17, Y+8	; 0x08
    1806:	29 85       	ldd	r18, Y+9	; 0x09
    1808:	3a 85       	ldd	r19, Y+10	; 0x0a
    180a:	4b 85       	ldd	r20, Y+11	; 0x0b
    180c:	5c 85       	ldd	r21, Y+12	; 0x0c
    180e:	b1 01       	movw	r22, r2
    1810:	ce 01       	movw	r24, r28
    1812:	0d 96       	adiw	r24, 0x0d	; 13
    1814:	70 db       	rcall	.-2336   	; 0xef6 <set_origin>
    1816:	fe 01       	movw	r30, r28
    1818:	3d 96       	adiw	r30, 0x0d	; 13
    181a:	de 01       	movw	r26, r28
    181c:	11 96       	adiw	r26, 0x01	; 1
    181e:	8c e0       	ldi	r24, 0x0C	; 12
    1820:	01 90       	ld	r0, Z+
    1822:	0d 92       	st	X+, r0
    1824:	8a 95       	dec	r24
    1826:	e1 f7       	brne	.-8      	; 0x1820 <rotate_y+0x1da>
		cur.x = res.y, cur.y = res.x, cur.z = res.z;
		get_to_point(id, cur.x, cur.y, cur.z);
    1828:	3a a5       	ldd	r19, Y+42	; 0x2a
    182a:	2b a5       	ldd	r18, Y+43	; 0x2b
    182c:	9c a5       	ldd	r25, Y+44	; 0x2c
    182e:	8d a5       	ldd	r24, Y+45	; 0x2d
    1830:	c3 2e       	mov	r12, r19
    1832:	d2 2e       	mov	r13, r18
    1834:	e9 2e       	mov	r14, r25
    1836:	f8 2e       	mov	r15, r24
    1838:	59 8d       	ldd	r21, Y+25	; 0x19
    183a:	49 a5       	ldd	r20, Y+41	; 0x29
    183c:	05 2f       	mov	r16, r21
    183e:	14 2f       	mov	r17, r20
    1840:	24 2d       	mov	r18, r4
    1842:	35 2d       	mov	r19, r5
    1844:	4d a1       	ldd	r20, Y+37	; 0x25
    1846:	5e a1       	ldd	r21, Y+38	; 0x26
    1848:	6f a1       	ldd	r22, Y+39	; 0x27
    184a:	78 a5       	ldd	r23, Y+40	; 0x28
    184c:	c1 01       	movw	r24, r2
    184e:	c4 dc       	rcall	.-1656   	; 0x11d8 <get_to_point>
}

void rotate_y (double alpha) {
	struct point cur, res;
	alpha = alpha * PI / 180.;
	for (int id = 1; id <= 6; id++) {
    1850:	9f ef       	ldi	r25, 0xFF	; 255
    1852:	29 1a       	sub	r2, r25
    1854:	39 0a       	sbc	r3, r25
    1856:	ac e0       	ldi	r26, 0x0C	; 12
    1858:	6a 0e       	add	r6, r26
    185a:	71 1c       	adc	r7, r1
    185c:	b7 e0       	ldi	r27, 0x07	; 7
    185e:	2b 16       	cp	r2, r27
    1860:	31 04       	cpc	r3, r1
    1862:	09 f0       	breq	.+2      	; 0x1866 <rotate_y+0x220>
    1864:	31 cf       	rjmp	.-414    	; 0x16c8 <rotate_y+0x82>
		res.x = cur.x * cos (alpha) + cur.z * sin (alpha), res.y = cur.y, res.z = -cur.x * sin (alpha) + cur.z * cos (alpha);
		cur = set_origin (id, cur, -1);
		cur.x = res.y, cur.y = res.x, cur.z = res.z;
		get_to_point(id, cur.x, cur.y, cur.z);
	}
}
    1866:	ad 96       	adiw	r28, 0x2d	; 45
    1868:	0f b6       	in	r0, 0x3f	; 63
    186a:	f8 94       	cli
    186c:	de bf       	out	0x3e, r29	; 62
    186e:	0f be       	out	0x3f, r0	; 63
    1870:	cd bf       	out	0x3d, r28	; 61
    1872:	df 91       	pop	r29
    1874:	cf 91       	pop	r28
    1876:	1f 91       	pop	r17
    1878:	0f 91       	pop	r16
    187a:	ff 90       	pop	r15
    187c:	ef 90       	pop	r14
    187e:	df 90       	pop	r13
    1880:	cf 90       	pop	r12
    1882:	bf 90       	pop	r11
    1884:	af 90       	pop	r10
    1886:	9f 90       	pop	r9
    1888:	8f 90       	pop	r8
    188a:	7f 90       	pop	r7
    188c:	6f 90       	pop	r6
    188e:	5f 90       	pop	r5
    1890:	4f 90       	pop	r4
    1892:	3f 90       	pop	r3
    1894:	2f 90       	pop	r2
    1896:	08 95       	ret

00001898 <rotate_z>:

void rotate_z (double alpha) {
    1898:	2f 92       	push	r2
    189a:	3f 92       	push	r3
    189c:	4f 92       	push	r4
    189e:	5f 92       	push	r5
    18a0:	6f 92       	push	r6
    18a2:	7f 92       	push	r7
    18a4:	8f 92       	push	r8
    18a6:	9f 92       	push	r9
    18a8:	af 92       	push	r10
    18aa:	bf 92       	push	r11
    18ac:	cf 92       	push	r12
    18ae:	df 92       	push	r13
    18b0:	ef 92       	push	r14
    18b2:	ff 92       	push	r15
    18b4:	0f 93       	push	r16
    18b6:	1f 93       	push	r17
    18b8:	cf 93       	push	r28
    18ba:	df 93       	push	r29
    18bc:	cd b7       	in	r28, 0x3d	; 61
    18be:	de b7       	in	r29, 0x3e	; 62
    18c0:	ad 97       	sbiw	r28, 0x2d	; 45
    18c2:	0f b6       	in	r0, 0x3f	; 63
    18c4:	f8 94       	cli
    18c6:	de bf       	out	0x3e, r29	; 62
    18c8:	0f be       	out	0x3f, r0	; 63
    18ca:	cd bf       	out	0x3d, r28	; 61
	struct point cur, res;
	alpha = alpha * PI / 180.;
    18cc:	2b ed       	ldi	r18, 0xDB	; 219
    18ce:	3f e0       	ldi	r19, 0x0F	; 15
    18d0:	49 e4       	ldi	r20, 0x49	; 73
    18d2:	50 e4       	ldi	r21, 0x40	; 64
    18d4:	25 d6       	rcall	.+3146   	; 0x2520 <__mulsf3>
    18d6:	20 e0       	ldi	r18, 0x00	; 0
    18d8:	30 e0       	ldi	r19, 0x00	; 0
    18da:	44 e3       	ldi	r20, 0x34	; 52
    18dc:	53 e4       	ldi	r21, 0x43	; 67
    18de:	79 d4       	rcall	.+2290   	; 0x21d2 <__divsf3>
    18e0:	e6 2e       	mov	r14, r22
    18e2:	f7 2e       	mov	r15, r23
    18e4:	08 2f       	mov	r16, r24
    18e6:	19 2f       	mov	r17, r25
	for (int id = 1; id <= 6; id++) {
		cur.x = last_c[id].y, cur.y = last_c[id].x, cur.z = last_c[id].z;
		cur = set_origin (id, cur, 1);
		res.x = cur.x * cos (alpha) - cur.y * sin (alpha), res.y = cur.x * sin (alpha) + cur.y * cos (alpha), res.z = cur.z;
    18e8:	80 2f       	mov	r24, r16
    18ea:	91 2f       	mov	r25, r17
    18ec:	6f d4       	rcall	.+2270   	; 0x21cc <cos>
    18ee:	6d 8f       	std	Y+29, r22	; 0x1d
    18f0:	7e 8f       	std	Y+30, r23	; 0x1e
    18f2:	8f 8f       	std	Y+31, r24	; 0x1f
    18f4:	98 a3       	std	Y+32, r25	; 0x20
    18f6:	6e 2d       	mov	r22, r14
    18f8:	7f 2d       	mov	r23, r15
    18fa:	80 2f       	mov	r24, r16
    18fc:	91 2f       	mov	r25, r17
    18fe:	73 d6       	rcall	.+3302   	; 0x25e6 <sin>
    1900:	69 a3       	std	Y+33, r22	; 0x21
    1902:	7a a3       	std	Y+34, r23	; 0x22
    1904:	8b a3       	std	Y+35, r24	; 0x23
    1906:	9c a3       	std	Y+36, r25	; 0x24
    1908:	0f 2e       	mov	r0, r31
    190a:	fc eb       	ldi	r31, 0xBC	; 188
    190c:	6f 2e       	mov	r6, r31
    190e:	f4 e0       	ldi	r31, 0x04	; 4
    1910:	7f 2e       	mov	r7, r31
    1912:	f0 2d       	mov	r31, r0
}

void rotate_z (double alpha) {
	struct point cur, res;
	alpha = alpha * PI / 180.;
	for (int id = 1; id <= 6; id++) {
    1914:	22 24       	eor	r2, r2
    1916:	23 94       	inc	r2
    1918:	31 2c       	mov	r3, r1
		cur.x = last_c[id].y, cur.y = last_c[id].x, cur.z = last_c[id].z;
    191a:	d3 01       	movw	r26, r6
    191c:	2c 91       	ld	r18, X
    191e:	11 96       	adiw	r26, 0x01	; 1
    1920:	1c 91       	ld	r17, X
    1922:	11 97       	sbiw	r26, 0x01	; 1
    1924:	12 96       	adiw	r26, 0x02	; 2
    1926:	fc 91       	ld	r31, X
    1928:	12 97       	sbiw	r26, 0x02	; 2
    192a:	13 96       	adiw	r26, 0x03	; 3
    192c:	ec 91       	ld	r30, X
    192e:	13 97       	sbiw	r26, 0x03	; 3
    1930:	18 96       	adiw	r26, 0x08	; 8
    1932:	3c 91       	ld	r19, X
    1934:	18 97       	sbiw	r26, 0x08	; 8
    1936:	19 96       	adiw	r26, 0x09	; 9
    1938:	7c 91       	ld	r23, X
    193a:	19 97       	sbiw	r26, 0x09	; 9
    193c:	1a 96       	adiw	r26, 0x0a	; 10
    193e:	6c 91       	ld	r22, X
    1940:	1a 97       	sbiw	r26, 0x0a	; 10
    1942:	1b 96       	adiw	r26, 0x0b	; 11
    1944:	5c 91       	ld	r21, X
    1946:	1b 97       	sbiw	r26, 0x0b	; 11
		cur = set_origin (id, cur, 1);
    1948:	14 96       	adiw	r26, 0x04	; 4
    194a:	4c 91       	ld	r20, X
    194c:	14 97       	sbiw	r26, 0x04	; 4
    194e:	15 96       	adiw	r26, 0x05	; 5
    1950:	ec 90       	ld	r14, X
    1952:	15 97       	sbiw	r26, 0x05	; 5
    1954:	16 96       	adiw	r26, 0x06	; 6
    1956:	fc 90       	ld	r15, X
    1958:	16 97       	sbiw	r26, 0x06	; 6
    195a:	17 96       	adiw	r26, 0x07	; 7
    195c:	0c 91       	ld	r16, X
    195e:	a4 2e       	mov	r10, r20
    1960:	84 2f       	mov	r24, r20
    1962:	9e 2d       	mov	r25, r14
    1964:	af 2d       	mov	r26, r15
    1966:	b0 2f       	mov	r27, r16
    1968:	89 83       	std	Y+1, r24	; 0x01
    196a:	9a 83       	std	Y+2, r25	; 0x02
    196c:	ab 83       	std	Y+3, r26	; 0x03
    196e:	bc 83       	std	Y+4, r27	; 0x04
    1970:	e2 2e       	mov	r14, r18
    1972:	82 2f       	mov	r24, r18
    1974:	91 2f       	mov	r25, r17
    1976:	af 2f       	mov	r26, r31
    1978:	be 2f       	mov	r27, r30
    197a:	8d 83       	std	Y+5, r24	; 0x05
    197c:	9e 83       	std	Y+6, r25	; 0x06
    197e:	af 83       	std	Y+7, r26	; 0x07
    1980:	b8 87       	std	Y+8, r27	; 0x08
    1982:	23 2f       	mov	r18, r19
    1984:	83 2f       	mov	r24, r19
    1986:	97 2f       	mov	r25, r23
    1988:	a6 2f       	mov	r26, r22
    198a:	b5 2f       	mov	r27, r21
    198c:	89 87       	std	Y+9, r24	; 0x09
    198e:	9a 87       	std	Y+10, r25	; 0x0a
    1990:	ab 87       	std	Y+11, r26	; 0x0b
    1992:	bc 87       	std	Y+12, r27	; 0x0c
    1994:	88 24       	eor	r8, r8
    1996:	83 94       	inc	r8
    1998:	91 2c       	mov	r9, r1
    199a:	ba 80       	ldd	r11, Y+2	; 0x02
    199c:	cb 80       	ldd	r12, Y+3	; 0x03
    199e:	dc 80       	ldd	r13, Y+4	; 0x04
    19a0:	fe 80       	ldd	r15, Y+6	; 0x06
    19a2:	0f 81       	ldd	r16, Y+7	; 0x07
    19a4:	18 85       	ldd	r17, Y+8	; 0x08
    19a6:	3a 85       	ldd	r19, Y+10	; 0x0a
    19a8:	4b 85       	ldd	r20, Y+11	; 0x0b
    19aa:	5c 85       	ldd	r21, Y+12	; 0x0c
    19ac:	b1 01       	movw	r22, r2
    19ae:	ce 01       	movw	r24, r28
    19b0:	01 96       	adiw	r24, 0x01	; 1
    19b2:	a1 da       	rcall	.-2750   	; 0xef6 <set_origin>
    19b4:	89 80       	ldd	r8, Y+1	; 0x01
    19b6:	9a 80       	ldd	r9, Y+2	; 0x02
    19b8:	ab 80       	ldd	r10, Y+3	; 0x03
    19ba:	bc 80       	ldd	r11, Y+4	; 0x04
    19bc:	cd 80       	ldd	r12, Y+5	; 0x05
    19be:	de 80       	ldd	r13, Y+6	; 0x06
    19c0:	ef 80       	ldd	r14, Y+7	; 0x07
    19c2:	f8 84       	ldd	r15, Y+8	; 0x08
    19c4:	89 85       	ldd	r24, Y+9	; 0x09
    19c6:	9a 85       	ldd	r25, Y+10	; 0x0a
    19c8:	ab 85       	ldd	r26, Y+11	; 0x0b
    19ca:	bc 85       	ldd	r27, Y+12	; 0x0c
    19cc:	8d a3       	std	Y+37, r24	; 0x25
    19ce:	9e a3       	std	Y+38, r25	; 0x26
    19d0:	af a3       	std	Y+39, r26	; 0x27
    19d2:	b8 a7       	std	Y+40, r27	; 0x28
		res.x = cur.x * cos (alpha) - cur.y * sin (alpha), res.y = cur.x * sin (alpha) + cur.y * cos (alpha), res.z = cur.z;
    19d4:	a5 01       	movw	r20, r10
    19d6:	94 01       	movw	r18, r8
    19d8:	6d 8d       	ldd	r22, Y+29	; 0x1d
    19da:	7e 8d       	ldd	r23, Y+30	; 0x1e
    19dc:	8f 8d       	ldd	r24, Y+31	; 0x1f
    19de:	98 a1       	ldd	r25, Y+32	; 0x20
    19e0:	9f d5       	rcall	.+2878   	; 0x2520 <__mulsf3>
    19e2:	69 8f       	std	Y+25, r22	; 0x19
    19e4:	7a 8f       	std	Y+26, r23	; 0x1a
    19e6:	8b 8f       	std	Y+27, r24	; 0x1b
    19e8:	9c 8f       	std	Y+28, r25	; 0x1c
    19ea:	a7 01       	movw	r20, r14
    19ec:	96 01       	movw	r18, r12
    19ee:	69 a1       	ldd	r22, Y+33	; 0x21
    19f0:	7a a1       	ldd	r23, Y+34	; 0x22
    19f2:	8b a1       	ldd	r24, Y+35	; 0x23
    19f4:	9c a1       	ldd	r25, Y+36	; 0x24
    19f6:	94 d5       	rcall	.+2856   	; 0x2520 <__mulsf3>
    19f8:	9b 01       	movw	r18, r22
    19fa:	ac 01       	movw	r20, r24
    19fc:	69 8d       	ldd	r22, Y+25	; 0x19
    19fe:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1a00:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1a02:	9c 8d       	ldd	r25, Y+28	; 0x1c
    1a04:	1c d3       	rcall	.+1592   	; 0x203e <__subsf3>
    1a06:	69 8f       	std	Y+25, r22	; 0x19
    1a08:	79 a7       	std	Y+41, r23	; 0x29
    1a0a:	8a a7       	std	Y+42, r24	; 0x2a
    1a0c:	9b a7       	std	Y+43, r25	; 0x2b
    1a0e:	a5 01       	movw	r20, r10
    1a10:	94 01       	movw	r18, r8
    1a12:	69 a1       	ldd	r22, Y+33	; 0x21
    1a14:	7a a1       	ldd	r23, Y+34	; 0x22
    1a16:	8b a1       	ldd	r24, Y+35	; 0x23
    1a18:	9c a1       	ldd	r25, Y+36	; 0x24
    1a1a:	82 d5       	rcall	.+2820   	; 0x2520 <__mulsf3>
    1a1c:	4b 01       	movw	r8, r22
    1a1e:	5c 01       	movw	r10, r24
    1a20:	a7 01       	movw	r20, r14
    1a22:	96 01       	movw	r18, r12
    1a24:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1a26:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1a28:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1a2a:	98 a1       	ldd	r25, Y+32	; 0x20
    1a2c:	79 d5       	rcall	.+2802   	; 0x2520 <__mulsf3>
    1a2e:	9b 01       	movw	r18, r22
    1a30:	ac 01       	movw	r20, r24
    1a32:	c5 01       	movw	r24, r10
    1a34:	b4 01       	movw	r22, r8
    1a36:	04 d3       	rcall	.+1544   	; 0x2040 <__addsf3>
    1a38:	6c a7       	std	Y+44, r22	; 0x2c
    1a3a:	7d a7       	std	Y+45, r23	; 0x2d
    1a3c:	58 2e       	mov	r5, r24
    1a3e:	49 2e       	mov	r4, r25
		cur = set_origin (id, cur, -1);
    1a40:	88 24       	eor	r8, r8
    1a42:	8a 94       	dec	r8
    1a44:	98 2c       	mov	r9, r8
    1a46:	a9 80       	ldd	r10, Y+1	; 0x01
    1a48:	ba 80       	ldd	r11, Y+2	; 0x02
    1a4a:	cb 80       	ldd	r12, Y+3	; 0x03
    1a4c:	dc 80       	ldd	r13, Y+4	; 0x04
    1a4e:	ed 80       	ldd	r14, Y+5	; 0x05
    1a50:	fe 80       	ldd	r15, Y+6	; 0x06
    1a52:	0f 81       	ldd	r16, Y+7	; 0x07
    1a54:	18 85       	ldd	r17, Y+8	; 0x08
    1a56:	29 85       	ldd	r18, Y+9	; 0x09
    1a58:	3a 85       	ldd	r19, Y+10	; 0x0a
    1a5a:	4b 85       	ldd	r20, Y+11	; 0x0b
    1a5c:	5c 85       	ldd	r21, Y+12	; 0x0c
    1a5e:	b1 01       	movw	r22, r2
    1a60:	ce 01       	movw	r24, r28
    1a62:	0d 96       	adiw	r24, 0x0d	; 13
    1a64:	48 da       	rcall	.-2928   	; 0xef6 <set_origin>
    1a66:	fe 01       	movw	r30, r28
    1a68:	3d 96       	adiw	r30, 0x0d	; 13
    1a6a:	de 01       	movw	r26, r28
    1a6c:	11 96       	adiw	r26, 0x01	; 1
    1a6e:	8c e0       	ldi	r24, 0x0C	; 12
    1a70:	01 90       	ld	r0, Z+
    1a72:	0d 92       	st	X+, r0
    1a74:	8a 95       	dec	r24
    1a76:	e1 f7       	brne	.-8      	; 0x1a70 <rotate_z+0x1d8>
		cur.x = res.y, cur.y = res.x, cur.z = res.z;
		get_to_point(id, cur.x, cur.y, cur.z);
    1a78:	cd a0       	ldd	r12, Y+37	; 0x25
    1a7a:	de a0       	ldd	r13, Y+38	; 0x26
    1a7c:	ef a0       	ldd	r14, Y+39	; 0x27
    1a7e:	f8 a4       	ldd	r15, Y+40	; 0x28
    1a80:	59 8d       	ldd	r21, Y+25	; 0x19
    1a82:	49 a5       	ldd	r20, Y+41	; 0x29
    1a84:	9a a5       	ldd	r25, Y+42	; 0x2a
    1a86:	8b a5       	ldd	r24, Y+43	; 0x2b
    1a88:	05 2f       	mov	r16, r21
    1a8a:	14 2f       	mov	r17, r20
    1a8c:	29 2f       	mov	r18, r25
    1a8e:	38 2f       	mov	r19, r24
    1a90:	fc a5       	ldd	r31, Y+44	; 0x2c
    1a92:	ed a5       	ldd	r30, Y+45	; 0x2d
    1a94:	4f 2f       	mov	r20, r31
    1a96:	5e 2f       	mov	r21, r30
    1a98:	65 2d       	mov	r22, r5
    1a9a:	74 2d       	mov	r23, r4
    1a9c:	c1 01       	movw	r24, r2
    1a9e:	9c db       	rcall	.-2248   	; 0x11d8 <get_to_point>
}

void rotate_z (double alpha) {
	struct point cur, res;
	alpha = alpha * PI / 180.;
	for (int id = 1; id <= 6; id++) {
    1aa0:	9f ef       	ldi	r25, 0xFF	; 255
    1aa2:	29 1a       	sub	r2, r25
    1aa4:	39 0a       	sbc	r3, r25
    1aa6:	ac e0       	ldi	r26, 0x0C	; 12
    1aa8:	6a 0e       	add	r6, r26
    1aaa:	71 1c       	adc	r7, r1
    1aac:	b7 e0       	ldi	r27, 0x07	; 7
    1aae:	2b 16       	cp	r2, r27
    1ab0:	31 04       	cpc	r3, r1
    1ab2:	09 f0       	breq	.+2      	; 0x1ab6 <rotate_z+0x21e>
    1ab4:	32 cf       	rjmp	.-412    	; 0x191a <rotate_z+0x82>
		res.x = cur.x * cos (alpha) - cur.y * sin (alpha), res.y = cur.x * sin (alpha) + cur.y * cos (alpha), res.z = cur.z;
		cur = set_origin (id, cur, -1);
		cur.x = res.y, cur.y = res.x, cur.z = res.z;
		get_to_point(id, cur.x, cur.y, cur.z);
	}
}
    1ab6:	ad 96       	adiw	r28, 0x2d	; 45
    1ab8:	0f b6       	in	r0, 0x3f	; 63
    1aba:	f8 94       	cli
    1abc:	de bf       	out	0x3e, r29	; 62
    1abe:	0f be       	out	0x3f, r0	; 63
    1ac0:	cd bf       	out	0x3d, r28	; 61
    1ac2:	df 91       	pop	r29
    1ac4:	cf 91       	pop	r28
    1ac6:	1f 91       	pop	r17
    1ac8:	0f 91       	pop	r16
    1aca:	ff 90       	pop	r15
    1acc:	ef 90       	pop	r14
    1ace:	df 90       	pop	r13
    1ad0:	cf 90       	pop	r12
    1ad2:	bf 90       	pop	r11
    1ad4:	af 90       	pop	r10
    1ad6:	9f 90       	pop	r9
    1ad8:	8f 90       	pop	r8
    1ada:	7f 90       	pop	r7
    1adc:	6f 90       	pop	r6
    1ade:	5f 90       	pop	r5
    1ae0:	4f 90       	pop	r4
    1ae2:	3f 90       	pop	r3
    1ae4:	2f 90       	pop	r2
    1ae6:	08 95       	ret

00001ae8 <stand_up>:

void stand_up () {
    1ae8:	cf 92       	push	r12
    1aea:	df 92       	push	r13
    1aec:	ef 92       	push	r14
    1aee:	ff 92       	push	r15
    1af0:	0f 93       	push	r16
    1af2:	1f 93       	push	r17
	
	double y_const = 11, z_const = 5;
		
	get_to_point(5, 0, y_const, z_const);
    1af4:	0f 2e       	mov	r0, r31
    1af6:	c1 2c       	mov	r12, r1
    1af8:	d1 2c       	mov	r13, r1
    1afa:	f0 ea       	ldi	r31, 0xA0	; 160
    1afc:	ef 2e       	mov	r14, r31
    1afe:	f0 e4       	ldi	r31, 0x40	; 64
    1b00:	ff 2e       	mov	r15, r31
    1b02:	f0 2d       	mov	r31, r0
    1b04:	00 e0       	ldi	r16, 0x00	; 0
    1b06:	10 e0       	ldi	r17, 0x00	; 0
    1b08:	20 e3       	ldi	r18, 0x30	; 48
    1b0a:	31 e4       	ldi	r19, 0x41	; 65
    1b0c:	40 e0       	ldi	r20, 0x00	; 0
    1b0e:	50 e0       	ldi	r21, 0x00	; 0
    1b10:	ba 01       	movw	r22, r20
    1b12:	85 e0       	ldi	r24, 0x05	; 5
    1b14:	90 e0       	ldi	r25, 0x00	; 0
    1b16:	60 db       	rcall	.-2368   	; 0x11d8 <get_to_point>
	get_to_point(2, 0, -y_const, z_const);
    1b18:	00 e0       	ldi	r16, 0x00	; 0
    1b1a:	10 e0       	ldi	r17, 0x00	; 0
    1b1c:	20 e3       	ldi	r18, 0x30	; 48
    1b1e:	31 ec       	ldi	r19, 0xC1	; 193
    1b20:	40 e0       	ldi	r20, 0x00	; 0
    1b22:	50 e0       	ldi	r21, 0x00	; 0
    1b24:	ba 01       	movw	r22, r20
    1b26:	82 e0       	ldi	r24, 0x02	; 2
    1b28:	90 e0       	ldi	r25, 0x00	; 0
    1b2a:	56 db       	rcall	.-2388   	; 0x11d8 <get_to_point>
	get_to_point(3, 0, -y_const, z_const);
    1b2c:	00 e0       	ldi	r16, 0x00	; 0
    1b2e:	10 e0       	ldi	r17, 0x00	; 0
    1b30:	20 e3       	ldi	r18, 0x30	; 48
    1b32:	31 ec       	ldi	r19, 0xC1	; 193
    1b34:	40 e0       	ldi	r20, 0x00	; 0
    1b36:	50 e0       	ldi	r21, 0x00	; 0
    1b38:	ba 01       	movw	r22, r20
    1b3a:	83 e0       	ldi	r24, 0x03	; 3
    1b3c:	90 e0       	ldi	r25, 0x00	; 0
    1b3e:	4c db       	rcall	.-2408   	; 0x11d8 <get_to_point>
	get_to_point(6, 0, y_const, z_const);
    1b40:	00 e0       	ldi	r16, 0x00	; 0
    1b42:	10 e0       	ldi	r17, 0x00	; 0
    1b44:	20 e3       	ldi	r18, 0x30	; 48
    1b46:	31 e4       	ldi	r19, 0x41	; 65
    1b48:	40 e0       	ldi	r20, 0x00	; 0
    1b4a:	50 e0       	ldi	r21, 0x00	; 0
    1b4c:	ba 01       	movw	r22, r20
    1b4e:	86 e0       	ldi	r24, 0x06	; 6
    1b50:	90 e0       	ldi	r25, 0x00	; 0
    1b52:	42 db       	rcall	.-2428   	; 0x11d8 <get_to_point>
	get_to_point(1, 0, -y_const, z_const);
    1b54:	00 e0       	ldi	r16, 0x00	; 0
    1b56:	10 e0       	ldi	r17, 0x00	; 0
    1b58:	20 e3       	ldi	r18, 0x30	; 48
    1b5a:	31 ec       	ldi	r19, 0xC1	; 193
    1b5c:	40 e0       	ldi	r20, 0x00	; 0
    1b5e:	50 e0       	ldi	r21, 0x00	; 0
    1b60:	ba 01       	movw	r22, r20
    1b62:	81 e0       	ldi	r24, 0x01	; 1
    1b64:	90 e0       	ldi	r25, 0x00	; 0
    1b66:	38 db       	rcall	.-2448   	; 0x11d8 <get_to_point>
	get_to_point(4, 0, y_const, z_const);
    1b68:	00 e0       	ldi	r16, 0x00	; 0
    1b6a:	10 e0       	ldi	r17, 0x00	; 0
    1b6c:	20 e3       	ldi	r18, 0x30	; 48
    1b6e:	31 e4       	ldi	r19, 0x41	; 65
    1b70:	40 e0       	ldi	r20, 0x00	; 0
    1b72:	50 e0       	ldi	r21, 0x00	; 0
    1b74:	ba 01       	movw	r22, r20
    1b76:	84 e0       	ldi	r24, 0x04	; 4
    1b78:	90 e0       	ldi	r25, 0x00	; 0
    1b7a:	2e db       	rcall	.-2468   	; 0x11d8 <get_to_point>
	
	last_c[5] = newPoint(0, y_const, z_const);
    1b7c:	00 e0       	ldi	r16, 0x00	; 0
    1b7e:	10 e0       	ldi	r17, 0x00	; 0
    1b80:	20 e3       	ldi	r18, 0x30	; 48
    1b82:	31 e4       	ldi	r19, 0x41	; 65
    1b84:	40 e0       	ldi	r20, 0x00	; 0
    1b86:	50 e0       	ldi	r21, 0x00	; 0
    1b88:	ba 01       	movw	r22, r20
    1b8a:	8c ee       	ldi	r24, 0xEC	; 236
    1b8c:	94 e0       	ldi	r25, 0x04	; 4
    1b8e:	0a db       	rcall	.-2540   	; 0x11a4 <newPoint>
	last_c[2] = newPoint(0, -y_const, z_const);
    1b90:	00 e0       	ldi	r16, 0x00	; 0
    1b92:	10 e0       	ldi	r17, 0x00	; 0
    1b94:	20 e3       	ldi	r18, 0x30	; 48
    1b96:	31 ec       	ldi	r19, 0xC1	; 193
    1b98:	40 e0       	ldi	r20, 0x00	; 0
    1b9a:	50 e0       	ldi	r21, 0x00	; 0
    1b9c:	ba 01       	movw	r22, r20
    1b9e:	88 ec       	ldi	r24, 0xC8	; 200
    1ba0:	94 e0       	ldi	r25, 0x04	; 4
    1ba2:	00 db       	rcall	.-2560   	; 0x11a4 <newPoint>
	last_c[3] = newPoint(0, -y_const, z_const);
    1ba4:	00 e0       	ldi	r16, 0x00	; 0
    1ba6:	10 e0       	ldi	r17, 0x00	; 0
    1ba8:	20 e3       	ldi	r18, 0x30	; 48
    1baa:	31 ec       	ldi	r19, 0xC1	; 193
    1bac:	40 e0       	ldi	r20, 0x00	; 0
    1bae:	50 e0       	ldi	r21, 0x00	; 0
    1bb0:	ba 01       	movw	r22, r20
    1bb2:	84 ed       	ldi	r24, 0xD4	; 212
    1bb4:	94 e0       	ldi	r25, 0x04	; 4
    1bb6:	f6 da       	rcall	.-2580   	; 0x11a4 <newPoint>
	last_c[6] = newPoint(0, y_const, z_const);
    1bb8:	00 e0       	ldi	r16, 0x00	; 0
    1bba:	10 e0       	ldi	r17, 0x00	; 0
    1bbc:	20 e3       	ldi	r18, 0x30	; 48
    1bbe:	31 e4       	ldi	r19, 0x41	; 65
    1bc0:	40 e0       	ldi	r20, 0x00	; 0
    1bc2:	50 e0       	ldi	r21, 0x00	; 0
    1bc4:	ba 01       	movw	r22, r20
    1bc6:	88 ef       	ldi	r24, 0xF8	; 248
    1bc8:	94 e0       	ldi	r25, 0x04	; 4
    1bca:	ec da       	rcall	.-2600   	; 0x11a4 <newPoint>
	last_c[1] = newPoint(0, -y_const, z_const);
    1bcc:	00 e0       	ldi	r16, 0x00	; 0
    1bce:	10 e0       	ldi	r17, 0x00	; 0
    1bd0:	20 e3       	ldi	r18, 0x30	; 48
    1bd2:	31 ec       	ldi	r19, 0xC1	; 193
    1bd4:	40 e0       	ldi	r20, 0x00	; 0
    1bd6:	50 e0       	ldi	r21, 0x00	; 0
    1bd8:	ba 01       	movw	r22, r20
    1bda:	8c eb       	ldi	r24, 0xBC	; 188
    1bdc:	94 e0       	ldi	r25, 0x04	; 4
    1bde:	e2 da       	rcall	.-2620   	; 0x11a4 <newPoint>
	last_c[4] = newPoint(0, y_const, z_const);
    1be0:	00 e0       	ldi	r16, 0x00	; 0
    1be2:	10 e0       	ldi	r17, 0x00	; 0
    1be4:	20 e3       	ldi	r18, 0x30	; 48
    1be6:	31 e4       	ldi	r19, 0x41	; 65
    1be8:	40 e0       	ldi	r20, 0x00	; 0
    1bea:	50 e0       	ldi	r21, 0x00	; 0
    1bec:	ba 01       	movw	r22, r20
    1bee:	80 ee       	ldi	r24, 0xE0	; 224
    1bf0:	94 e0       	ldi	r25, 0x04	; 4
    1bf2:	d8 da       	rcall	.-2640   	; 0x11a4 <newPoint>
	
    1bf4:	1f 91       	pop	r17
    1bf6:	0f 91       	pop	r16
    1bf8:	ff 90       	pop	r15
    1bfa:	ef 90       	pop	r14
    1bfc:	df 90       	pop	r13
    1bfe:	cf 90       	pop	r12
    1c00:	08 95       	ret

00001c02 <newLeg>:
 *  Author: abz
 */ 

#include "legs.h"

Leg newLeg (int a, int b, int c) {
    1c02:	cf 93       	push	r28
    1c04:	df 93       	push	r29
    1c06:	00 d0       	rcall	.+0      	; 0x1c08 <newLeg+0x6>
    1c08:	00 d0       	rcall	.+0      	; 0x1c0a <newLeg+0x8>
    1c0a:	cd b7       	in	r28, 0x3d	; 61
    1c0c:	de b7       	in	r29, 0x3e	; 62
	Leg res;
	res.high = a, res.mid = b, res.low = c;
	return res;
    1c0e:	24 2f       	mov	r18, r20
    1c10:	35 2f       	mov	r19, r21
    1c12:	46 2f       	mov	r20, r22
    1c14:	57 2f       	mov	r21, r23
    1c16:	68 2f       	mov	r22, r24
    1c18:	79 2f       	mov	r23, r25
}
    1c1a:	80 e0       	ldi	r24, 0x00	; 0
    1c1c:	90 e0       	ldi	r25, 0x00	; 0
    1c1e:	26 96       	adiw	r28, 0x06	; 6
    1c20:	0f b6       	in	r0, 0x3f	; 63
    1c22:	f8 94       	cli
    1c24:	de bf       	out	0x3e, r29	; 62
    1c26:	0f be       	out	0x3f, r0	; 63
    1c28:	cd bf       	out	0x3d, r28	; 61
    1c2a:	df 91       	pop	r29
    1c2c:	cf 91       	pop	r28
    1c2e:	08 95       	ret

00001c30 <assignLegs>:

void assignLegs (Leg leg[]) {
    1c30:	0f 93       	push	r16
    1c32:	1f 93       	push	r17
    1c34:	cf 93       	push	r28
    1c36:	df 93       	push	r29
    1c38:	00 d0       	rcall	.+0      	; 0x1c3a <assignLegs+0xa>
    1c3a:	00 d0       	rcall	.+0      	; 0x1c3c <assignLegs+0xc>
    1c3c:	cd b7       	in	r28, 0x3d	; 61
    1c3e:	de b7       	in	r29, 0x3e	; 62
    1c40:	8c 01       	movw	r16, r24
	leg[1] = newLeg(14, 16, 18);
    1c42:	42 e1       	ldi	r20, 0x12	; 18
    1c44:	50 e0       	ldi	r21, 0x00	; 0
    1c46:	60 e1       	ldi	r22, 0x10	; 16
    1c48:	70 e0       	ldi	r23, 0x00	; 0
    1c4a:	8e e0       	ldi	r24, 0x0E	; 14
    1c4c:	90 e0       	ldi	r25, 0x00	; 0
    1c4e:	d9 df       	rcall	.-78     	; 0x1c02 <newLeg>
    1c50:	29 83       	std	Y+1, r18	; 0x01
    1c52:	3a 83       	std	Y+2, r19	; 0x02
    1c54:	4b 83       	std	Y+3, r20	; 0x03
    1c56:	5c 83       	std	Y+4, r21	; 0x04
    1c58:	6d 83       	std	Y+5, r22	; 0x05
    1c5a:	7e 83       	std	Y+6, r23	; 0x06
    1c5c:	86 e0       	ldi	r24, 0x06	; 6
    1c5e:	fe 01       	movw	r30, r28
    1c60:	31 96       	adiw	r30, 0x01	; 1
    1c62:	d8 01       	movw	r26, r16
    1c64:	16 96       	adiw	r26, 0x06	; 6
    1c66:	01 90       	ld	r0, Z+
    1c68:	0d 92       	st	X+, r0
    1c6a:	8a 95       	dec	r24
    1c6c:	e1 f7       	brne	.-8      	; 0x1c66 <assignLegs+0x36>
	leg[2] = newLeg(8, 10, 12);
    1c6e:	4c e0       	ldi	r20, 0x0C	; 12
    1c70:	50 e0       	ldi	r21, 0x00	; 0
    1c72:	6a e0       	ldi	r22, 0x0A	; 10
    1c74:	70 e0       	ldi	r23, 0x00	; 0
    1c76:	88 e0       	ldi	r24, 0x08	; 8
    1c78:	90 e0       	ldi	r25, 0x00	; 0
    1c7a:	c3 df       	rcall	.-122    	; 0x1c02 <newLeg>
    1c7c:	29 83       	std	Y+1, r18	; 0x01
    1c7e:	3a 83       	std	Y+2, r19	; 0x02
    1c80:	4b 83       	std	Y+3, r20	; 0x03
    1c82:	5c 83       	std	Y+4, r21	; 0x04
    1c84:	6d 83       	std	Y+5, r22	; 0x05
    1c86:	7e 83       	std	Y+6, r23	; 0x06
    1c88:	86 e0       	ldi	r24, 0x06	; 6
    1c8a:	fe 01       	movw	r30, r28
    1c8c:	31 96       	adiw	r30, 0x01	; 1
    1c8e:	d8 01       	movw	r26, r16
    1c90:	1c 96       	adiw	r26, 0x0c	; 12
    1c92:	01 90       	ld	r0, Z+
    1c94:	0d 92       	st	X+, r0
    1c96:	8a 95       	dec	r24
    1c98:	e1 f7       	brne	.-8      	; 0x1c92 <assignLegs+0x62>
	leg[3] = newLeg(2, 4, 6);
    1c9a:	46 e0       	ldi	r20, 0x06	; 6
    1c9c:	50 e0       	ldi	r21, 0x00	; 0
    1c9e:	64 e0       	ldi	r22, 0x04	; 4
    1ca0:	70 e0       	ldi	r23, 0x00	; 0
    1ca2:	82 e0       	ldi	r24, 0x02	; 2
    1ca4:	90 e0       	ldi	r25, 0x00	; 0
    1ca6:	ad df       	rcall	.-166    	; 0x1c02 <newLeg>
    1ca8:	29 83       	std	Y+1, r18	; 0x01
    1caa:	3a 83       	std	Y+2, r19	; 0x02
    1cac:	4b 83       	std	Y+3, r20	; 0x03
    1cae:	5c 83       	std	Y+4, r21	; 0x04
    1cb0:	6d 83       	std	Y+5, r22	; 0x05
    1cb2:	7e 83       	std	Y+6, r23	; 0x06
    1cb4:	86 e0       	ldi	r24, 0x06	; 6
    1cb6:	fe 01       	movw	r30, r28
    1cb8:	31 96       	adiw	r30, 0x01	; 1
    1cba:	d8 01       	movw	r26, r16
    1cbc:	52 96       	adiw	r26, 0x12	; 18
    1cbe:	01 90       	ld	r0, Z+
    1cc0:	0d 92       	st	X+, r0
    1cc2:	8a 95       	dec	r24
    1cc4:	e1 f7       	brne	.-8      	; 0x1cbe <assignLegs+0x8e>
	leg[4] = newLeg(13, 15, 17);
    1cc6:	41 e1       	ldi	r20, 0x11	; 17
    1cc8:	50 e0       	ldi	r21, 0x00	; 0
    1cca:	6f e0       	ldi	r22, 0x0F	; 15
    1ccc:	70 e0       	ldi	r23, 0x00	; 0
    1cce:	8d e0       	ldi	r24, 0x0D	; 13
    1cd0:	90 e0       	ldi	r25, 0x00	; 0
    1cd2:	97 df       	rcall	.-210    	; 0x1c02 <newLeg>
    1cd4:	29 83       	std	Y+1, r18	; 0x01
    1cd6:	3a 83       	std	Y+2, r19	; 0x02
    1cd8:	4b 83       	std	Y+3, r20	; 0x03
    1cda:	5c 83       	std	Y+4, r21	; 0x04
    1cdc:	6d 83       	std	Y+5, r22	; 0x05
    1cde:	7e 83       	std	Y+6, r23	; 0x06
    1ce0:	86 e0       	ldi	r24, 0x06	; 6
    1ce2:	fe 01       	movw	r30, r28
    1ce4:	31 96       	adiw	r30, 0x01	; 1
    1ce6:	d8 01       	movw	r26, r16
    1ce8:	58 96       	adiw	r26, 0x18	; 24
    1cea:	01 90       	ld	r0, Z+
    1cec:	0d 92       	st	X+, r0
    1cee:	8a 95       	dec	r24
    1cf0:	e1 f7       	brne	.-8      	; 0x1cea <assignLegs+0xba>
	leg[5] = newLeg(7, 9, 11);
    1cf2:	4b e0       	ldi	r20, 0x0B	; 11
    1cf4:	50 e0       	ldi	r21, 0x00	; 0
    1cf6:	69 e0       	ldi	r22, 0x09	; 9
    1cf8:	70 e0       	ldi	r23, 0x00	; 0
    1cfa:	87 e0       	ldi	r24, 0x07	; 7
    1cfc:	90 e0       	ldi	r25, 0x00	; 0
    1cfe:	81 df       	rcall	.-254    	; 0x1c02 <newLeg>
    1d00:	29 83       	std	Y+1, r18	; 0x01
    1d02:	3a 83       	std	Y+2, r19	; 0x02
    1d04:	4b 83       	std	Y+3, r20	; 0x03
    1d06:	5c 83       	std	Y+4, r21	; 0x04
    1d08:	6d 83       	std	Y+5, r22	; 0x05
    1d0a:	7e 83       	std	Y+6, r23	; 0x06
    1d0c:	86 e0       	ldi	r24, 0x06	; 6
    1d0e:	fe 01       	movw	r30, r28
    1d10:	31 96       	adiw	r30, 0x01	; 1
    1d12:	d8 01       	movw	r26, r16
    1d14:	5e 96       	adiw	r26, 0x1e	; 30
    1d16:	01 90       	ld	r0, Z+
    1d18:	0d 92       	st	X+, r0
    1d1a:	8a 95       	dec	r24
    1d1c:	e1 f7       	brne	.-8      	; 0x1d16 <assignLegs+0xe6>
	leg[6] = newLeg(1, 3, 5);
    1d1e:	45 e0       	ldi	r20, 0x05	; 5
    1d20:	50 e0       	ldi	r21, 0x00	; 0
    1d22:	63 e0       	ldi	r22, 0x03	; 3
    1d24:	70 e0       	ldi	r23, 0x00	; 0
    1d26:	81 e0       	ldi	r24, 0x01	; 1
    1d28:	90 e0       	ldi	r25, 0x00	; 0
    1d2a:	6b df       	rcall	.-298    	; 0x1c02 <newLeg>
    1d2c:	29 83       	std	Y+1, r18	; 0x01
    1d2e:	3a 83       	std	Y+2, r19	; 0x02
    1d30:	4b 83       	std	Y+3, r20	; 0x03
    1d32:	5c 83       	std	Y+4, r21	; 0x04
    1d34:	6d 83       	std	Y+5, r22	; 0x05
    1d36:	7e 83       	std	Y+6, r23	; 0x06
    1d38:	86 e0       	ldi	r24, 0x06	; 6
    1d3a:	fe 01       	movw	r30, r28
    1d3c:	31 96       	adiw	r30, 0x01	; 1
    1d3e:	d8 01       	movw	r26, r16
    1d40:	94 96       	adiw	r26, 0x24	; 36
    1d42:	01 90       	ld	r0, Z+
    1d44:	0d 92       	st	X+, r0
    1d46:	8a 95       	dec	r24
    1d48:	e1 f7       	brne	.-8      	; 0x1d42 <assignLegs+0x112>
    1d4a:	26 96       	adiw	r28, 0x06	; 6
    1d4c:	0f b6       	in	r0, 0x3f	; 63
    1d4e:	f8 94       	cli
    1d50:	de bf       	out	0x3e, r29	; 62
    1d52:	0f be       	out	0x3f, r0	; 63
    1d54:	cd bf       	out	0x3d, r28	; 61
    1d56:	df 91       	pop	r29
    1d58:	cf 91       	pop	r28
    1d5a:	1f 91       	pop	r17
    1d5c:	0f 91       	pop	r16
    1d5e:	08 95       	ret

00001d60 <min>:
int abs (int x) {
	return x < 0 ? -x : x;
}

int min (int a, int b) {
	return a > b ? b : a;
    1d60:	26 2f       	mov	r18, r22
    1d62:	37 2f       	mov	r19, r23
    1d64:	82 17       	cp	r24, r18
    1d66:	93 07       	cpc	r25, r19
    1d68:	0c f4       	brge	.+2      	; 0x1d6c <min+0xc>
    1d6a:	9c 01       	movw	r18, r24
}
    1d6c:	82 2f       	mov	r24, r18
    1d6e:	93 2f       	mov	r25, r19
    1d70:	08 95       	ret

00001d72 <max>:

int max (int a, int b) {
	return a > b ? a : b;
    1d72:	26 2f       	mov	r18, r22
    1d74:	37 2f       	mov	r19, r23
    1d76:	28 17       	cp	r18, r24
    1d78:	39 07       	cpc	r19, r25
    1d7a:	0c f4       	brge	.+2      	; 0x1d7e <max+0xc>
    1d7c:	9c 01       	movw	r18, r24
}
    1d7e:	82 2f       	mov	r24, r18
    1d80:	93 2f       	mov	r25, r19
    1d82:	08 95       	ret

00001d84 <initializeLegs>:

Leg leg[7];

void initializeLegs () {
	assignLegs(leg);
    1d84:	84 e0       	ldi	r24, 0x04	; 4
    1d86:	95 e0       	ldi	r25, 0x05	; 5
    1d88:	53 cf       	rjmp	.-346    	; 0x1c30 <assignLegs>

00001d8a <rotate>:
}

void rotate (int id, int lvl, double angle) {
    1d8a:	cf 93       	push	r28
    1d8c:	df 93       	push	r29
    1d8e:	fc 01       	movw	r30, r24
    1d90:	db 01       	movw	r26, r22
    1d92:	ca 01       	movw	r24, r20
    1d94:	b9 01       	movw	r22, r18
	int ax;
	if (lvl == 1)
    1d96:	a1 30       	cpi	r26, 0x01	; 1
    1d98:	b1 05       	cpc	r27, r1
    1d9a:	61 f4       	brne	.+24     	; 0x1db4 <rotate+0x2a>
		ax = leg[id].high;
    1d9c:	9f 01       	movw	r18, r30
    1d9e:	22 0f       	add	r18, r18
    1da0:	33 1f       	adc	r19, r19
    1da2:	e2 0f       	add	r30, r18
    1da4:	f3 1f       	adc	r31, r19
    1da6:	ee 0f       	add	r30, r30
    1da8:	ff 1f       	adc	r31, r31
    1daa:	ec 5f       	subi	r30, 0xFC	; 252
    1dac:	fa 4f       	sbci	r31, 0xFA	; 250
    1dae:	c4 81       	ldd	r28, Z+4	; 0x04
    1db0:	d5 81       	ldd	r29, Z+5	; 0x05
    1db2:	19 c0       	rjmp	.+50     	; 0x1de6 <rotate+0x5c>
	else
	if (lvl == 2)
    1db4:	12 97       	sbiw	r26, 0x02	; 2
    1db6:	61 f4       	brne	.+24     	; 0x1dd0 <rotate+0x46>
		ax = leg[id].mid;
    1db8:	9f 01       	movw	r18, r30
    1dba:	22 0f       	add	r18, r18
    1dbc:	33 1f       	adc	r19, r19
    1dbe:	e2 0f       	add	r30, r18
    1dc0:	f3 1f       	adc	r31, r19
    1dc2:	ee 0f       	add	r30, r30
    1dc4:	ff 1f       	adc	r31, r31
    1dc6:	ec 5f       	subi	r30, 0xFC	; 252
    1dc8:	fa 4f       	sbci	r31, 0xFA	; 250
    1dca:	c2 81       	ldd	r28, Z+2	; 0x02
    1dcc:	d3 81       	ldd	r29, Z+3	; 0x03
    1dce:	0b c0       	rjmp	.+22     	; 0x1de6 <rotate+0x5c>
	else
		ax = leg[id].low;
    1dd0:	9f 01       	movw	r18, r30
    1dd2:	22 0f       	add	r18, r18
    1dd4:	33 1f       	adc	r19, r19
    1dd6:	e2 0f       	add	r30, r18
    1dd8:	f3 1f       	adc	r31, r19
    1dda:	ee 0f       	add	r30, r30
    1ddc:	ff 1f       	adc	r31, r31
    1dde:	ec 5f       	subi	r30, 0xFC	; 252
    1de0:	fa 4f       	sbci	r31, 0xFA	; 250
    1de2:	c0 81       	ld	r28, Z
    1de4:	d1 81       	ldd	r29, Z+1	; 0x01
	
	int goalPos = (int)(angle * 512. / 150.);
    1de6:	20 e0       	ldi	r18, 0x00	; 0
    1de8:	30 e0       	ldi	r19, 0x00	; 0
    1dea:	40 e0       	ldi	r20, 0x00	; 0
    1dec:	54 e4       	ldi	r21, 0x44	; 68
    1dee:	98 d3       	rcall	.+1840   	; 0x2520 <__mulsf3>
    1df0:	20 e0       	ldi	r18, 0x00	; 0
    1df2:	30 e0       	ldi	r19, 0x00	; 0
    1df4:	46 e1       	ldi	r20, 0x16	; 22
    1df6:	53 e4       	ldi	r21, 0x43	; 67
    1df8:	ec d1       	rcall	.+984    	; 0x21d2 <__divsf3>
    1dfa:	53 d2       	rcall	.+1190   	; 0x22a2 <__fixsfsi>
	if (goalPos > 0)
    1dfc:	16 16       	cp	r1, r22
    1dfe:	17 06       	cpc	r1, r23
    1e00:	3c f4       	brge	.+14     	; 0x1e10 <rotate+0x86>
		goalPos = 512 - goalPos;
    1e02:	80 e0       	ldi	r24, 0x00	; 0
    1e04:	92 e0       	ldi	r25, 0x02	; 2
    1e06:	9c 01       	movw	r18, r24
    1e08:	26 1b       	sub	r18, r22
    1e0a:	37 0b       	sbc	r19, r23
    1e0c:	b9 01       	movw	r22, r18
    1e0e:	09 c0       	rjmp	.+18     	; 0x1e22 <rotate+0x98>
	else
		goalPos = 512 + abs(goalPos);
    1e10:	cb 01       	movw	r24, r22
    1e12:	99 23       	and	r25, r25
    1e14:	24 f4       	brge	.+8      	; 0x1e1e <rotate+0x94>
    1e16:	88 27       	eor	r24, r24
    1e18:	99 27       	eor	r25, r25
    1e1a:	86 1b       	sub	r24, r22
    1e1c:	97 0b       	sbc	r25, r23
    1e1e:	bc 01       	movw	r22, r24
    1e20:	7e 5f       	subi	r23, 0xFE	; 254
	goalPos = max(0, min(1023, goalPos));
    1e22:	8f ef       	ldi	r24, 0xFF	; 255
    1e24:	93 e0       	ldi	r25, 0x03	; 3
    1e26:	9c df       	rcall	.-200    	; 0x1d60 <min>
    1e28:	bc 01       	movw	r22, r24
    1e2a:	80 e0       	ldi	r24, 0x00	; 0
    1e2c:	90 e0       	ldi	r25, 0x00	; 0
    1e2e:	a1 df       	rcall	.-190    	; 0x1d72 <max>
	dxl_write_word(ax, P_GOAL_POSITION_L, goalPos);
    1e30:	ac 01       	movw	r20, r24
    1e32:	6e e1       	ldi	r22, 0x1E	; 30
    1e34:	70 e0       	ldi	r23, 0x00	; 0
    1e36:	ce 01       	movw	r24, r28
    1e38:	0e 94 04 04 	call	0x808	; 0x808 <dxl_write_word>
}
    1e3c:	df 91       	pop	r29
    1e3e:	cf 91       	pop	r28
    1e40:	08 95       	ret

00001e42 <serial_initialize>:
	
	for( count=0; count<numgetbyte; count++ )
		pData[count] = serial_get_queue();
	
	return numgetbyte;
}
    1e42:	62 d2       	rcall	.+1220   	; 0x2308 <__floatsisf>
    1e44:	9b 01       	movw	r18, r22
    1e46:	ac 01       	movw	r20, r24
    1e48:	60 e0       	ldi	r22, 0x00	; 0
    1e4a:	74 e2       	ldi	r23, 0x24	; 36
    1e4c:	84 ef       	ldi	r24, 0xF4	; 244
    1e4e:	99 e4       	ldi	r25, 0x49	; 73
    1e50:	c0 d1       	rcall	.+896    	; 0x21d2 <__divsf3>
    1e52:	2c d2       	rcall	.+1112   	; 0x22ac <__fixunssfsi>
    1e54:	61 50       	subi	r22, 0x01	; 1
    1e56:	71 09       	sbc	r23, r1
    1e58:	82 e4       	ldi	r24, 0x42	; 66
    1e5a:	80 93 c8 00 	sts	0x00C8, r24
    1e5e:	88 e9       	ldi	r24, 0x98	; 152
    1e60:	80 93 c9 00 	sts	0x00C9, r24
    1e64:	86 e0       	ldi	r24, 0x06	; 6
    1e66:	80 93 ca 00 	sts	0x00CA, r24
    1e6a:	8f ef       	ldi	r24, 0xFF	; 255
    1e6c:	80 93 ce 00 	sts	0x00CE, r24
    1e70:	10 92 f5 03 	sts	0x03F5, r1
    1e74:	10 92 f4 03 	sts	0x03F4, r1
    1e78:	87 2f       	mov	r24, r23
    1e7a:	99 27       	eor	r25, r25
    1e7c:	87 fd       	sbrc	r24, 7
    1e7e:	9a 95       	dec	r25
    1e80:	80 93 cd 00 	sts	0x00CD, r24
    1e84:	60 93 cc 00 	sts	0x00CC, r22
    1e88:	72 98       	cbi	0x0e, 2	; 14
    1e8a:	73 9a       	sbi	0x0e, 3	; 14
    1e8c:	6f ed       	ldi	r22, 0xDF	; 223
    1e8e:	7f e0       	ldi	r23, 0x0F	; 15
    1e90:	88 e6       	ldi	r24, 0x68	; 104
    1e92:	9f e0       	ldi	r25, 0x0F	; 15
    1e94:	19 d4       	rcall	.+2098   	; 0x26c8 <fdevopen>
    1e96:	90 93 77 04 	sts	0x0477, r25
    1e9a:	80 93 76 04 	sts	0x0476, r24
    1e9e:	08 95       	ret

00001ea0 <serial_write>:
    1ea0:	cf 93       	push	r28
    1ea2:	df 93       	push	r29
    1ea4:	16 16       	cp	r1, r22
    1ea6:	17 06       	cpc	r1, r23
    1ea8:	84 f4       	brge	.+32     	; 0x1eca <serial_write+0x2a>
    1eaa:	a8 2f       	mov	r26, r24
    1eac:	b9 2f       	mov	r27, r25
    1eae:	6a 0f       	add	r22, r26
    1eb0:	7b 1f       	adc	r23, r27
    1eb2:	e8 ec       	ldi	r30, 0xC8	; 200
    1eb4:	f0 e0       	ldi	r31, 0x00	; 0
    1eb6:	ce ec       	ldi	r28, 0xCE	; 206
    1eb8:	d0 e0       	ldi	r29, 0x00	; 0
    1eba:	80 81       	ld	r24, Z
    1ebc:	85 ff       	sbrs	r24, 5
    1ebe:	fd cf       	rjmp	.-6      	; 0x1eba <serial_write+0x1a>
    1ec0:	8d 91       	ld	r24, X+
    1ec2:	88 83       	st	Y, r24
    1ec4:	a6 17       	cp	r26, r22
    1ec6:	b7 07       	cpc	r27, r23
    1ec8:	c1 f7       	brne	.-16     	; 0x1eba <serial_write+0x1a>
    1eca:	df 91       	pop	r29
    1ecc:	cf 91       	pop	r28
    1ece:	08 95       	ret

00001ed0 <std_putchar>:
    1ed0:	cf 93       	push	r28
    1ed2:	df 93       	push	r29
    1ed4:	1f 92       	push	r1
    1ed6:	1f 92       	push	r1
    1ed8:	cd b7       	in	r28, 0x3d	; 61
    1eda:	de b7       	in	r29, 0x3e	; 62
    1edc:	8a 30       	cpi	r24, 0x0A	; 10
    1ede:	51 f4       	brne	.+20     	; 0x1ef4 <std_putchar+0x24>
    1ee0:	8d e0       	ldi	r24, 0x0D	; 13
    1ee2:	89 83       	std	Y+1, r24	; 0x01
    1ee4:	8a e0       	ldi	r24, 0x0A	; 10
    1ee6:	8a 83       	std	Y+2, r24	; 0x02
    1ee8:	62 e0       	ldi	r22, 0x02	; 2
    1eea:	70 e0       	ldi	r23, 0x00	; 0
    1eec:	ce 01       	movw	r24, r28
    1eee:	01 96       	adiw	r24, 0x01	; 1
    1ef0:	d7 df       	rcall	.-82     	; 0x1ea0 <serial_write>
    1ef2:	06 c0       	rjmp	.+12     	; 0x1f00 <std_putchar+0x30>
    1ef4:	89 83       	std	Y+1, r24	; 0x01
    1ef6:	61 e0       	ldi	r22, 0x01	; 1
    1ef8:	70 e0       	ldi	r23, 0x00	; 0
    1efa:	ce 01       	movw	r24, r28
    1efc:	01 96       	adiw	r24, 0x01	; 1
    1efe:	d0 df       	rcall	.-96     	; 0x1ea0 <serial_write>
    1f00:	80 e0       	ldi	r24, 0x00	; 0
    1f02:	90 e0       	ldi	r25, 0x00	; 0
    1f04:	0f 90       	pop	r0
    1f06:	0f 90       	pop	r0
    1f08:	df 91       	pop	r29
    1f0a:	cf 91       	pop	r28
    1f0c:	08 95       	ret

00001f0e <serial_get_qstate>:
    1f0e:	90 91 f5 03 	lds	r25, 0x03F5
    1f12:	80 91 f4 03 	lds	r24, 0x03F4
    1f16:	98 17       	cp	r25, r24
    1f18:	c1 f0       	breq	.+48     	; 0x1f4a <serial_get_qstate+0x3c>
    1f1a:	90 91 f5 03 	lds	r25, 0x03F5
    1f1e:	80 91 f4 03 	lds	r24, 0x03F4
    1f22:	98 17       	cp	r25, r24
    1f24:	40 f4       	brcc	.+16     	; 0x1f36 <serial_get_qstate+0x28>
    1f26:	20 91 f4 03 	lds	r18, 0x03F4
    1f2a:	80 91 f5 03 	lds	r24, 0x03F5
    1f2e:	30 e0       	ldi	r19, 0x00	; 0
    1f30:	28 1b       	sub	r18, r24
    1f32:	31 09       	sbc	r19, r1
    1f34:	0c c0       	rjmp	.+24     	; 0x1f4e <serial_get_qstate+0x40>
    1f36:	20 91 f4 03 	lds	r18, 0x03F4
    1f3a:	80 91 f5 03 	lds	r24, 0x03F5
    1f3e:	30 e0       	ldi	r19, 0x00	; 0
    1f40:	28 1b       	sub	r18, r24
    1f42:	31 09       	sbc	r19, r1
    1f44:	20 58       	subi	r18, 0x80	; 128
    1f46:	3f 4f       	sbci	r19, 0xFF	; 255
    1f48:	02 c0       	rjmp	.+4      	; 0x1f4e <serial_get_qstate+0x40>
    1f4a:	20 e0       	ldi	r18, 0x00	; 0
    1f4c:	30 e0       	ldi	r19, 0x00	; 0
    1f4e:	82 2f       	mov	r24, r18
    1f50:	93 2f       	mov	r25, r19
    1f52:	08 95       	ret

00001f54 <serial_put_queue>:
    1f54:	cf 93       	push	r28
    1f56:	c8 2f       	mov	r28, r24
    1f58:	da df       	rcall	.-76     	; 0x1f0e <serial_get_qstate>
    1f5a:	8f 37       	cpi	r24, 0x7F	; 127
    1f5c:	91 05       	cpc	r25, r1
    1f5e:	91 f0       	breq	.+36     	; 0x1f84 <serial_put_queue+0x30>
    1f60:	e0 91 f4 03 	lds	r30, 0x03F4
    1f64:	f0 e0       	ldi	r31, 0x00	; 0
    1f66:	ea 50       	subi	r30, 0x0A	; 10
    1f68:	fc 4f       	sbci	r31, 0xFC	; 252
    1f6a:	c0 83       	st	Z, r28
    1f6c:	80 91 f4 03 	lds	r24, 0x03F4
    1f70:	8f 37       	cpi	r24, 0x7F	; 127
    1f72:	19 f4       	brne	.+6      	; 0x1f7a <serial_put_queue+0x26>
    1f74:	10 92 f4 03 	sts	0x03F4, r1
    1f78:	05 c0       	rjmp	.+10     	; 0x1f84 <serial_put_queue+0x30>
    1f7a:	80 91 f4 03 	lds	r24, 0x03F4
    1f7e:	8f 5f       	subi	r24, 0xFF	; 255
    1f80:	80 93 f4 03 	sts	0x03F4, r24
    1f84:	cf 91       	pop	r28
    1f86:	08 95       	ret

00001f88 <serial_get_queue>:
    1f88:	90 91 f5 03 	lds	r25, 0x03F5
    1f8c:	80 91 f4 03 	lds	r24, 0x03F4
    1f90:	98 17       	cp	r25, r24
    1f92:	99 f0       	breq	.+38     	; 0x1fba <serial_get_queue+0x32>
    1f94:	e0 91 f5 03 	lds	r30, 0x03F5
    1f98:	f0 e0       	ldi	r31, 0x00	; 0
    1f9a:	ea 50       	subi	r30, 0x0A	; 10
    1f9c:	fc 4f       	sbci	r31, 0xFC	; 252
    1f9e:	80 81       	ld	r24, Z
    1fa0:	90 91 f5 03 	lds	r25, 0x03F5
    1fa4:	9f 37       	cpi	r25, 0x7F	; 127
    1fa6:	19 f4       	brne	.+6      	; 0x1fae <serial_get_queue+0x26>
    1fa8:	10 92 f5 03 	sts	0x03F5, r1
    1fac:	08 95       	ret
    1fae:	90 91 f5 03 	lds	r25, 0x03F5
    1fb2:	9f 5f       	subi	r25, 0xFF	; 255
    1fb4:	90 93 f5 03 	sts	0x03F5, r25
    1fb8:	08 95       	ret
    1fba:	8f ef       	ldi	r24, 0xFF	; 255
    1fbc:	08 95       	ret

00001fbe <std_getchar>:
    1fbe:	a7 df       	rcall	.-178    	; 0x1f0e <serial_get_qstate>
    1fc0:	89 2b       	or	r24, r25
    1fc2:	e9 f3       	breq	.-6      	; 0x1fbe <std_getchar>
    1fc4:	e1 df       	rcall	.-62     	; 0x1f88 <serial_get_queue>
    1fc6:	8d 30       	cpi	r24, 0x0D	; 13
    1fc8:	09 f4       	brne	.+2      	; 0x1fcc <std_getchar+0xe>
    1fca:	8a e0       	ldi	r24, 0x0A	; 10
    1fcc:	90 e0       	ldi	r25, 0x00	; 0
    1fce:	08 95       	ret

00001fd0 <__vector_36>:
		
	return data;
}

SIGNAL(USART1_RX_vect)
{
    1fd0:	1f 92       	push	r1
    1fd2:	0f 92       	push	r0
    1fd4:	0f b6       	in	r0, 0x3f	; 63
    1fd6:	0f 92       	push	r0
    1fd8:	11 24       	eor	r1, r1
    1fda:	0b b6       	in	r0, 0x3b	; 59
    1fdc:	0f 92       	push	r0
    1fde:	2f 93       	push	r18
    1fe0:	3f 93       	push	r19
    1fe2:	4f 93       	push	r20
    1fe4:	5f 93       	push	r21
    1fe6:	6f 93       	push	r22
    1fe8:	7f 93       	push	r23
    1fea:	8f 93       	push	r24
    1fec:	9f 93       	push	r25
    1fee:	af 93       	push	r26
    1ff0:	bf 93       	push	r27
    1ff2:	ef 93       	push	r30
    1ff4:	ff 93       	push	r31
	serial_put_queue( UDR1 );
    1ff6:	80 91 ce 00 	lds	r24, 0x00CE
    1ffa:	ac df       	rcall	.-168    	; 0x1f54 <serial_put_queue>
}
    1ffc:	ff 91       	pop	r31
    1ffe:	ef 91       	pop	r30
    2000:	bf 91       	pop	r27
    2002:	af 91       	pop	r26
    2004:	9f 91       	pop	r25
    2006:	8f 91       	pop	r24
    2008:	7f 91       	pop	r23
    200a:	6f 91       	pop	r22
    200c:	5f 91       	pop	r21
    200e:	4f 91       	pop	r20
    2010:	3f 91       	pop	r19
    2012:	2f 91       	pop	r18
    2014:	0f 90       	pop	r0
    2016:	0b be       	out	0x3b, r0	; 59
    2018:	0f 90       	pop	r0
    201a:	0f be       	out	0x3f, r0	; 63
    201c:	0f 90       	pop	r0
    201e:	1f 90       	pop	r1
    2020:	18 95       	reti

00002022 <acos>:
    2022:	9f 93       	push	r25
    2024:	9f 77       	andi	r25, 0x7F	; 127
    2026:	ab d1       	rcall	.+854    	; 0x237e <__fp_arccos>
    2028:	0f 90       	pop	r0
    202a:	00 20       	and	r0, r0
    202c:	3a f4       	brpl	.+14     	; 0x203c <acos+0x1a>
    202e:	90 58       	subi	r25, 0x80	; 128
    2030:	a2 ea       	ldi	r26, 0xA2	; 162
    2032:	2a ed       	ldi	r18, 0xDA	; 218
    2034:	3f e0       	ldi	r19, 0x0F	; 15
    2036:	49 e4       	ldi	r20, 0x49	; 73
    2038:	50 e4       	ldi	r21, 0x40	; 64
    203a:	13 d0       	rcall	.+38     	; 0x2062 <__addsf3x>
    203c:	1f c2       	rjmp	.+1086   	; 0x247c <__fp_round>

0000203e <__subsf3>:
    203e:	50 58       	subi	r21, 0x80	; 128

00002040 <__addsf3>:
    2040:	bb 27       	eor	r27, r27
    2042:	aa 27       	eor	r26, r26
    2044:	0e d0       	rcall	.+28     	; 0x2062 <__addsf3x>
    2046:	1a c2       	rjmp	.+1076   	; 0x247c <__fp_round>
    2048:	e3 d1       	rcall	.+966    	; 0x2410 <__fp_pscA>
    204a:	30 f0       	brcs	.+12     	; 0x2058 <__addsf3+0x18>
    204c:	e8 d1       	rcall	.+976    	; 0x241e <__fp_pscB>
    204e:	20 f0       	brcs	.+8      	; 0x2058 <__addsf3+0x18>
    2050:	31 f4       	brne	.+12     	; 0x205e <__addsf3+0x1e>
    2052:	9f 3f       	cpi	r25, 0xFF	; 255
    2054:	11 f4       	brne	.+4      	; 0x205a <__addsf3+0x1a>
    2056:	1e f4       	brtc	.+6      	; 0x205e <__addsf3+0x1e>
    2058:	b3 c1       	rjmp	.+870    	; 0x23c0 <__fp_nan>
    205a:	0e f4       	brtc	.+2      	; 0x205e <__addsf3+0x1e>
    205c:	e0 95       	com	r30
    205e:	e7 fb       	bst	r30, 7
    2060:	a9 c1       	rjmp	.+850    	; 0x23b4 <__fp_inf>

00002062 <__addsf3x>:
    2062:	e9 2f       	mov	r30, r25
    2064:	2d d2       	rcall	.+1114   	; 0x24c0 <__fp_split3>
    2066:	80 f3       	brcs	.-32     	; 0x2048 <__addsf3+0x8>
    2068:	ba 17       	cp	r27, r26
    206a:	62 07       	cpc	r22, r18
    206c:	73 07       	cpc	r23, r19
    206e:	84 07       	cpc	r24, r20
    2070:	95 07       	cpc	r25, r21
    2072:	18 f0       	brcs	.+6      	; 0x207a <__addsf3x+0x18>
    2074:	71 f4       	brne	.+28     	; 0x2092 <__addsf3x+0x30>
    2076:	9e f5       	brtc	.+102    	; 0x20de <__addsf3x+0x7c>
    2078:	45 c2       	rjmp	.+1162   	; 0x2504 <__fp_zero>
    207a:	0e f4       	brtc	.+2      	; 0x207e <__addsf3x+0x1c>
    207c:	e0 95       	com	r30
    207e:	0b 2e       	mov	r0, r27
    2080:	ba 2f       	mov	r27, r26
    2082:	a0 2d       	mov	r26, r0
    2084:	0b 01       	movw	r0, r22
    2086:	b9 01       	movw	r22, r18
    2088:	90 01       	movw	r18, r0
    208a:	0c 01       	movw	r0, r24
    208c:	ca 01       	movw	r24, r20
    208e:	a0 01       	movw	r20, r0
    2090:	11 24       	eor	r1, r1
    2092:	ff 27       	eor	r31, r31
    2094:	59 1b       	sub	r21, r25
    2096:	99 f0       	breq	.+38     	; 0x20be <__addsf3x+0x5c>
    2098:	59 3f       	cpi	r21, 0xF9	; 249
    209a:	50 f4       	brcc	.+20     	; 0x20b0 <__addsf3x+0x4e>
    209c:	50 3e       	cpi	r21, 0xE0	; 224
    209e:	68 f1       	brcs	.+90     	; 0x20fa <__addsf3x+0x98>
    20a0:	1a 16       	cp	r1, r26
    20a2:	f0 40       	sbci	r31, 0x00	; 0
    20a4:	a2 2f       	mov	r26, r18
    20a6:	23 2f       	mov	r18, r19
    20a8:	34 2f       	mov	r19, r20
    20aa:	44 27       	eor	r20, r20
    20ac:	58 5f       	subi	r21, 0xF8	; 248
    20ae:	f3 cf       	rjmp	.-26     	; 0x2096 <__addsf3x+0x34>
    20b0:	46 95       	lsr	r20
    20b2:	37 95       	ror	r19
    20b4:	27 95       	ror	r18
    20b6:	a7 95       	ror	r26
    20b8:	f0 40       	sbci	r31, 0x00	; 0
    20ba:	53 95       	inc	r21
    20bc:	c9 f7       	brne	.-14     	; 0x20b0 <__addsf3x+0x4e>
    20be:	7e f4       	brtc	.+30     	; 0x20de <__addsf3x+0x7c>
    20c0:	1f 16       	cp	r1, r31
    20c2:	ba 0b       	sbc	r27, r26
    20c4:	62 0b       	sbc	r22, r18
    20c6:	73 0b       	sbc	r23, r19
    20c8:	84 0b       	sbc	r24, r20
    20ca:	ba f0       	brmi	.+46     	; 0x20fa <__addsf3x+0x98>
    20cc:	91 50       	subi	r25, 0x01	; 1
    20ce:	a1 f0       	breq	.+40     	; 0x20f8 <__addsf3x+0x96>
    20d0:	ff 0f       	add	r31, r31
    20d2:	bb 1f       	adc	r27, r27
    20d4:	66 1f       	adc	r22, r22
    20d6:	77 1f       	adc	r23, r23
    20d8:	88 1f       	adc	r24, r24
    20da:	c2 f7       	brpl	.-16     	; 0x20cc <__addsf3x+0x6a>
    20dc:	0e c0       	rjmp	.+28     	; 0x20fa <__addsf3x+0x98>
    20de:	ba 0f       	add	r27, r26
    20e0:	62 1f       	adc	r22, r18
    20e2:	73 1f       	adc	r23, r19
    20e4:	84 1f       	adc	r24, r20
    20e6:	48 f4       	brcc	.+18     	; 0x20fa <__addsf3x+0x98>
    20e8:	87 95       	ror	r24
    20ea:	77 95       	ror	r23
    20ec:	67 95       	ror	r22
    20ee:	b7 95       	ror	r27
    20f0:	f7 95       	ror	r31
    20f2:	9e 3f       	cpi	r25, 0xFE	; 254
    20f4:	08 f0       	brcs	.+2      	; 0x20f8 <__addsf3x+0x96>
    20f6:	b3 cf       	rjmp	.-154    	; 0x205e <__addsf3+0x1e>
    20f8:	93 95       	inc	r25
    20fa:	88 0f       	add	r24, r24
    20fc:	08 f0       	brcs	.+2      	; 0x2100 <__addsf3x+0x9e>
    20fe:	99 27       	eor	r25, r25
    2100:	ee 0f       	add	r30, r30
    2102:	97 95       	ror	r25
    2104:	87 95       	ror	r24
    2106:	08 95       	ret
    2108:	83 d1       	rcall	.+774    	; 0x2410 <__fp_pscA>
    210a:	58 f0       	brcs	.+22     	; 0x2122 <__addsf3x+0xc0>
    210c:	80 e8       	ldi	r24, 0x80	; 128
    210e:	91 e0       	ldi	r25, 0x01	; 1
    2110:	09 f4       	brne	.+2      	; 0x2114 <__addsf3x+0xb2>
    2112:	9e ef       	ldi	r25, 0xFE	; 254
    2114:	84 d1       	rcall	.+776    	; 0x241e <__fp_pscB>
    2116:	28 f0       	brcs	.+10     	; 0x2122 <__addsf3x+0xc0>
    2118:	40 e8       	ldi	r20, 0x80	; 128
    211a:	51 e0       	ldi	r21, 0x01	; 1
    211c:	59 f4       	brne	.+22     	; 0x2134 <atan2+0xe>
    211e:	5e ef       	ldi	r21, 0xFE	; 254
    2120:	09 c0       	rjmp	.+18     	; 0x2134 <atan2+0xe>
    2122:	4e c1       	rjmp	.+668    	; 0x23c0 <__fp_nan>
    2124:	ef c1       	rjmp	.+990    	; 0x2504 <__fp_zero>

00002126 <atan2>:
    2126:	e9 2f       	mov	r30, r25
    2128:	e0 78       	andi	r30, 0x80	; 128
    212a:	ca d1       	rcall	.+916    	; 0x24c0 <__fp_split3>
    212c:	68 f3       	brcs	.-38     	; 0x2108 <__addsf3x+0xa6>
    212e:	09 2e       	mov	r0, r25
    2130:	05 2a       	or	r0, r21
    2132:	c1 f3       	breq	.-16     	; 0x2124 <__addsf3x+0xc2>
    2134:	26 17       	cp	r18, r22
    2136:	37 07       	cpc	r19, r23
    2138:	48 07       	cpc	r20, r24
    213a:	59 07       	cpc	r21, r25
    213c:	38 f0       	brcs	.+14     	; 0x214c <atan2+0x26>
    213e:	0e 2e       	mov	r0, r30
    2140:	07 f8       	bld	r0, 7
    2142:	e0 25       	eor	r30, r0
    2144:	69 f0       	breq	.+26     	; 0x2160 <atan2+0x3a>
    2146:	e0 25       	eor	r30, r0
    2148:	e0 64       	ori	r30, 0x40	; 64
    214a:	0a c0       	rjmp	.+20     	; 0x2160 <atan2+0x3a>
    214c:	ef 63       	ori	r30, 0x3F	; 63
    214e:	07 f8       	bld	r0, 7
    2150:	00 94       	com	r0
    2152:	07 fa       	bst	r0, 7
    2154:	db 01       	movw	r26, r22
    2156:	b9 01       	movw	r22, r18
    2158:	9d 01       	movw	r18, r26
    215a:	dc 01       	movw	r26, r24
    215c:	ca 01       	movw	r24, r20
    215e:	ad 01       	movw	r20, r26
    2160:	ef 93       	push	r30
    2162:	46 d0       	rcall	.+140    	; 0x21f0 <__divsf3_pse>
    2164:	8b d1       	rcall	.+790    	; 0x247c <__fp_round>
    2166:	0a d0       	rcall	.+20     	; 0x217c <atan>
    2168:	5f 91       	pop	r21
    216a:	55 23       	and	r21, r21
    216c:	31 f0       	breq	.+12     	; 0x217a <atan2+0x54>
    216e:	2b ed       	ldi	r18, 0xDB	; 219
    2170:	3f e0       	ldi	r19, 0x0F	; 15
    2172:	49 e4       	ldi	r20, 0x49	; 73
    2174:	50 fd       	sbrc	r21, 0
    2176:	49 ec       	ldi	r20, 0xC9	; 201
    2178:	63 cf       	rjmp	.-314    	; 0x2040 <__addsf3>
    217a:	08 95       	ret

0000217c <atan>:
    217c:	df 93       	push	r29
    217e:	dd 27       	eor	r29, r29
    2180:	b9 2f       	mov	r27, r25
    2182:	bf 77       	andi	r27, 0x7F	; 127
    2184:	40 e8       	ldi	r20, 0x80	; 128
    2186:	5f e3       	ldi	r21, 0x3F	; 63
    2188:	16 16       	cp	r1, r22
    218a:	17 06       	cpc	r1, r23
    218c:	48 07       	cpc	r20, r24
    218e:	5b 07       	cpc	r21, r27
    2190:	10 f4       	brcc	.+4      	; 0x2196 <atan+0x1a>
    2192:	d9 2f       	mov	r29, r25
    2194:	be d1       	rcall	.+892    	; 0x2512 <inverse>
    2196:	9f 93       	push	r25
    2198:	8f 93       	push	r24
    219a:	7f 93       	push	r23
    219c:	6f 93       	push	r22
    219e:	6b d2       	rcall	.+1238   	; 0x2676 <square>
    21a0:	ec ec       	ldi	r30, 0xCC	; 204
    21a2:	f0 e0       	ldi	r31, 0x00	; 0
    21a4:	10 d1       	rcall	.+544    	; 0x23c6 <__fp_powser>
    21a6:	6a d1       	rcall	.+724    	; 0x247c <__fp_round>
    21a8:	2f 91       	pop	r18
    21aa:	3f 91       	pop	r19
    21ac:	4f 91       	pop	r20
    21ae:	5f 91       	pop	r21
    21b0:	c3 d1       	rcall	.+902    	; 0x2538 <__mulsf3x>
    21b2:	dd 23       	and	r29, r29
    21b4:	49 f0       	breq	.+18     	; 0x21c8 <atan+0x4c>
    21b6:	90 58       	subi	r25, 0x80	; 128
    21b8:	a2 ea       	ldi	r26, 0xA2	; 162
    21ba:	2a ed       	ldi	r18, 0xDA	; 218
    21bc:	3f e0       	ldi	r19, 0x0F	; 15
    21be:	49 ec       	ldi	r20, 0xC9	; 201
    21c0:	5f e3       	ldi	r21, 0x3F	; 63
    21c2:	d0 78       	andi	r29, 0x80	; 128
    21c4:	5d 27       	eor	r21, r29
    21c6:	4d df       	rcall	.-358    	; 0x2062 <__addsf3x>
    21c8:	df 91       	pop	r29
    21ca:	58 c1       	rjmp	.+688    	; 0x247c <__fp_round>

000021cc <cos>:
    21cc:	30 d1       	rcall	.+608    	; 0x242e <__fp_rempio2>
    21ce:	e3 95       	inc	r30
    21d0:	66 c1       	rjmp	.+716    	; 0x249e <__fp_sinus>

000021d2 <__divsf3>:
    21d2:	0c d0       	rcall	.+24     	; 0x21ec <__divsf3x>
    21d4:	53 c1       	rjmp	.+678    	; 0x247c <__fp_round>
    21d6:	23 d1       	rcall	.+582    	; 0x241e <__fp_pscB>
    21d8:	40 f0       	brcs	.+16     	; 0x21ea <__divsf3+0x18>
    21da:	1a d1       	rcall	.+564    	; 0x2410 <__fp_pscA>
    21dc:	30 f0       	brcs	.+12     	; 0x21ea <__divsf3+0x18>
    21de:	21 f4       	brne	.+8      	; 0x21e8 <__divsf3+0x16>
    21e0:	5f 3f       	cpi	r21, 0xFF	; 255
    21e2:	19 f0       	breq	.+6      	; 0x21ea <__divsf3+0x18>
    21e4:	e7 c0       	rjmp	.+462    	; 0x23b4 <__fp_inf>
    21e6:	51 11       	cpse	r21, r1
    21e8:	8e c1       	rjmp	.+796    	; 0x2506 <__fp_szero>
    21ea:	ea c0       	rjmp	.+468    	; 0x23c0 <__fp_nan>

000021ec <__divsf3x>:
    21ec:	69 d1       	rcall	.+722    	; 0x24c0 <__fp_split3>
    21ee:	98 f3       	brcs	.-26     	; 0x21d6 <__divsf3+0x4>

000021f0 <__divsf3_pse>:
    21f0:	99 23       	and	r25, r25
    21f2:	c9 f3       	breq	.-14     	; 0x21e6 <__divsf3+0x14>
    21f4:	55 23       	and	r21, r21
    21f6:	b1 f3       	breq	.-20     	; 0x21e4 <__divsf3+0x12>
    21f8:	95 1b       	sub	r25, r21
    21fa:	55 0b       	sbc	r21, r21
    21fc:	bb 27       	eor	r27, r27
    21fe:	aa 27       	eor	r26, r26
    2200:	62 17       	cp	r22, r18
    2202:	73 07       	cpc	r23, r19
    2204:	84 07       	cpc	r24, r20
    2206:	38 f0       	brcs	.+14     	; 0x2216 <__stack+0x17>
    2208:	9f 5f       	subi	r25, 0xFF	; 255
    220a:	5f 4f       	sbci	r21, 0xFF	; 255
    220c:	22 0f       	add	r18, r18
    220e:	33 1f       	adc	r19, r19
    2210:	44 1f       	adc	r20, r20
    2212:	aa 1f       	adc	r26, r26
    2214:	a9 f3       	breq	.-22     	; 0x2200 <__stack+0x1>
    2216:	33 d0       	rcall	.+102    	; 0x227e <__stack+0x7f>
    2218:	0e 2e       	mov	r0, r30
    221a:	3a f0       	brmi	.+14     	; 0x222a <__stack+0x2b>
    221c:	e0 e8       	ldi	r30, 0x80	; 128
    221e:	30 d0       	rcall	.+96     	; 0x2280 <__stack+0x81>
    2220:	91 50       	subi	r25, 0x01	; 1
    2222:	50 40       	sbci	r21, 0x00	; 0
    2224:	e6 95       	lsr	r30
    2226:	00 1c       	adc	r0, r0
    2228:	ca f7       	brpl	.-14     	; 0x221c <__stack+0x1d>
    222a:	29 d0       	rcall	.+82     	; 0x227e <__stack+0x7f>
    222c:	fe 2f       	mov	r31, r30
    222e:	27 d0       	rcall	.+78     	; 0x227e <__stack+0x7f>
    2230:	66 0f       	add	r22, r22
    2232:	77 1f       	adc	r23, r23
    2234:	88 1f       	adc	r24, r24
    2236:	bb 1f       	adc	r27, r27
    2238:	26 17       	cp	r18, r22
    223a:	37 07       	cpc	r19, r23
    223c:	48 07       	cpc	r20, r24
    223e:	ab 07       	cpc	r26, r27
    2240:	b0 e8       	ldi	r27, 0x80	; 128
    2242:	09 f0       	breq	.+2      	; 0x2246 <__stack+0x47>
    2244:	bb 0b       	sbc	r27, r27
    2246:	80 2d       	mov	r24, r0
    2248:	bf 01       	movw	r22, r30
    224a:	ff 27       	eor	r31, r31
    224c:	93 58       	subi	r25, 0x83	; 131
    224e:	5f 4f       	sbci	r21, 0xFF	; 255
    2250:	2a f0       	brmi	.+10     	; 0x225c <__stack+0x5d>
    2252:	9e 3f       	cpi	r25, 0xFE	; 254
    2254:	51 05       	cpc	r21, r1
    2256:	68 f0       	brcs	.+26     	; 0x2272 <__stack+0x73>
    2258:	ad c0       	rjmp	.+346    	; 0x23b4 <__fp_inf>
    225a:	55 c1       	rjmp	.+682    	; 0x2506 <__fp_szero>
    225c:	5f 3f       	cpi	r21, 0xFF	; 255
    225e:	ec f3       	brlt	.-6      	; 0x225a <__stack+0x5b>
    2260:	98 3e       	cpi	r25, 0xE8	; 232
    2262:	dc f3       	brlt	.-10     	; 0x225a <__stack+0x5b>
    2264:	86 95       	lsr	r24
    2266:	77 95       	ror	r23
    2268:	67 95       	ror	r22
    226a:	b7 95       	ror	r27
    226c:	f7 95       	ror	r31
    226e:	9f 5f       	subi	r25, 0xFF	; 255
    2270:	c9 f7       	brne	.-14     	; 0x2264 <__stack+0x65>
    2272:	88 0f       	add	r24, r24
    2274:	91 1d       	adc	r25, r1
    2276:	96 95       	lsr	r25
    2278:	87 95       	ror	r24
    227a:	97 f9       	bld	r25, 7
    227c:	08 95       	ret
    227e:	e1 e0       	ldi	r30, 0x01	; 1
    2280:	66 0f       	add	r22, r22
    2282:	77 1f       	adc	r23, r23
    2284:	88 1f       	adc	r24, r24
    2286:	bb 1f       	adc	r27, r27
    2288:	62 17       	cp	r22, r18
    228a:	73 07       	cpc	r23, r19
    228c:	84 07       	cpc	r24, r20
    228e:	ba 07       	cpc	r27, r26
    2290:	20 f0       	brcs	.+8      	; 0x229a <__stack+0x9b>
    2292:	62 1b       	sub	r22, r18
    2294:	73 0b       	sbc	r23, r19
    2296:	84 0b       	sbc	r24, r20
    2298:	ba 0b       	sbc	r27, r26
    229a:	ee 1f       	adc	r30, r30
    229c:	88 f7       	brcc	.-30     	; 0x2280 <__stack+0x81>
    229e:	e0 95       	com	r30
    22a0:	08 95       	ret

000022a2 <__fixsfsi>:
    22a2:	04 d0       	rcall	.+8      	; 0x22ac <__fixunssfsi>
    22a4:	68 94       	set
    22a6:	b1 11       	cpse	r27, r1
    22a8:	2e c1       	rjmp	.+604    	; 0x2506 <__fp_szero>
    22aa:	08 95       	ret

000022ac <__fixunssfsi>:
    22ac:	11 d1       	rcall	.+546    	; 0x24d0 <__fp_splitA>
    22ae:	88 f0       	brcs	.+34     	; 0x22d2 <__fixunssfsi+0x26>
    22b0:	9f 57       	subi	r25, 0x7F	; 127
    22b2:	90 f0       	brcs	.+36     	; 0x22d8 <__fixunssfsi+0x2c>
    22b4:	b9 2f       	mov	r27, r25
    22b6:	99 27       	eor	r25, r25
    22b8:	b7 51       	subi	r27, 0x17	; 23
    22ba:	a0 f0       	brcs	.+40     	; 0x22e4 <__fixunssfsi+0x38>
    22bc:	d1 f0       	breq	.+52     	; 0x22f2 <__fixunssfsi+0x46>
    22be:	66 0f       	add	r22, r22
    22c0:	77 1f       	adc	r23, r23
    22c2:	88 1f       	adc	r24, r24
    22c4:	99 1f       	adc	r25, r25
    22c6:	1a f0       	brmi	.+6      	; 0x22ce <__fixunssfsi+0x22>
    22c8:	ba 95       	dec	r27
    22ca:	c9 f7       	brne	.-14     	; 0x22be <__fixunssfsi+0x12>
    22cc:	12 c0       	rjmp	.+36     	; 0x22f2 <__fixunssfsi+0x46>
    22ce:	b1 30       	cpi	r27, 0x01	; 1
    22d0:	81 f0       	breq	.+32     	; 0x22f2 <__fixunssfsi+0x46>
    22d2:	18 d1       	rcall	.+560    	; 0x2504 <__fp_zero>
    22d4:	b1 e0       	ldi	r27, 0x01	; 1
    22d6:	08 95       	ret
    22d8:	15 c1       	rjmp	.+554    	; 0x2504 <__fp_zero>
    22da:	67 2f       	mov	r22, r23
    22dc:	78 2f       	mov	r23, r24
    22de:	88 27       	eor	r24, r24
    22e0:	b8 5f       	subi	r27, 0xF8	; 248
    22e2:	39 f0       	breq	.+14     	; 0x22f2 <__fixunssfsi+0x46>
    22e4:	b9 3f       	cpi	r27, 0xF9	; 249
    22e6:	cc f3       	brlt	.-14     	; 0x22da <__fixunssfsi+0x2e>
    22e8:	86 95       	lsr	r24
    22ea:	77 95       	ror	r23
    22ec:	67 95       	ror	r22
    22ee:	b3 95       	inc	r27
    22f0:	d9 f7       	brne	.-10     	; 0x22e8 <__fixunssfsi+0x3c>
    22f2:	3e f4       	brtc	.+14     	; 0x2302 <__fixunssfsi+0x56>
    22f4:	90 95       	com	r25
    22f6:	80 95       	com	r24
    22f8:	70 95       	com	r23
    22fa:	61 95       	neg	r22
    22fc:	7f 4f       	sbci	r23, 0xFF	; 255
    22fe:	8f 4f       	sbci	r24, 0xFF	; 255
    2300:	9f 4f       	sbci	r25, 0xFF	; 255
    2302:	08 95       	ret

00002304 <__floatunsisf>:
    2304:	e8 94       	clt
    2306:	09 c0       	rjmp	.+18     	; 0x231a <__floatsisf+0x12>

00002308 <__floatsisf>:
    2308:	97 fb       	bst	r25, 7
    230a:	3e f4       	brtc	.+14     	; 0x231a <__floatsisf+0x12>
    230c:	90 95       	com	r25
    230e:	80 95       	com	r24
    2310:	70 95       	com	r23
    2312:	61 95       	neg	r22
    2314:	7f 4f       	sbci	r23, 0xFF	; 255
    2316:	8f 4f       	sbci	r24, 0xFF	; 255
    2318:	9f 4f       	sbci	r25, 0xFF	; 255
    231a:	99 23       	and	r25, r25
    231c:	a9 f0       	breq	.+42     	; 0x2348 <__floatsisf+0x40>
    231e:	f9 2f       	mov	r31, r25
    2320:	96 e9       	ldi	r25, 0x96	; 150
    2322:	bb 27       	eor	r27, r27
    2324:	93 95       	inc	r25
    2326:	f6 95       	lsr	r31
    2328:	87 95       	ror	r24
    232a:	77 95       	ror	r23
    232c:	67 95       	ror	r22
    232e:	b7 95       	ror	r27
    2330:	f1 11       	cpse	r31, r1
    2332:	f8 cf       	rjmp	.-16     	; 0x2324 <__floatsisf+0x1c>
    2334:	fa f4       	brpl	.+62     	; 0x2374 <__floatsisf+0x6c>
    2336:	bb 0f       	add	r27, r27
    2338:	11 f4       	brne	.+4      	; 0x233e <__floatsisf+0x36>
    233a:	60 ff       	sbrs	r22, 0
    233c:	1b c0       	rjmp	.+54     	; 0x2374 <__floatsisf+0x6c>
    233e:	6f 5f       	subi	r22, 0xFF	; 255
    2340:	7f 4f       	sbci	r23, 0xFF	; 255
    2342:	8f 4f       	sbci	r24, 0xFF	; 255
    2344:	9f 4f       	sbci	r25, 0xFF	; 255
    2346:	16 c0       	rjmp	.+44     	; 0x2374 <__floatsisf+0x6c>
    2348:	88 23       	and	r24, r24
    234a:	11 f0       	breq	.+4      	; 0x2350 <__floatsisf+0x48>
    234c:	96 e9       	ldi	r25, 0x96	; 150
    234e:	11 c0       	rjmp	.+34     	; 0x2372 <__floatsisf+0x6a>
    2350:	77 23       	and	r23, r23
    2352:	21 f0       	breq	.+8      	; 0x235c <__floatsisf+0x54>
    2354:	9e e8       	ldi	r25, 0x8E	; 142
    2356:	87 2f       	mov	r24, r23
    2358:	76 2f       	mov	r23, r22
    235a:	05 c0       	rjmp	.+10     	; 0x2366 <__floatsisf+0x5e>
    235c:	66 23       	and	r22, r22
    235e:	71 f0       	breq	.+28     	; 0x237c <__floatsisf+0x74>
    2360:	96 e8       	ldi	r25, 0x86	; 134
    2362:	86 2f       	mov	r24, r22
    2364:	70 e0       	ldi	r23, 0x00	; 0
    2366:	60 e0       	ldi	r22, 0x00	; 0
    2368:	2a f0       	brmi	.+10     	; 0x2374 <__floatsisf+0x6c>
    236a:	9a 95       	dec	r25
    236c:	66 0f       	add	r22, r22
    236e:	77 1f       	adc	r23, r23
    2370:	88 1f       	adc	r24, r24
    2372:	da f7       	brpl	.-10     	; 0x236a <__floatsisf+0x62>
    2374:	88 0f       	add	r24, r24
    2376:	96 95       	lsr	r25
    2378:	87 95       	ror	r24
    237a:	97 f9       	bld	r25, 7
    237c:	08 95       	ret

0000237e <__fp_arccos>:
    237e:	df 93       	push	r29
    2380:	cf 93       	push	r28
    2382:	1f 93       	push	r17
    2384:	0f 93       	push	r16
    2386:	8b 01       	movw	r16, r22
    2388:	ec 01       	movw	r28, r24
    238a:	e9 ef       	ldi	r30, 0xF9	; 249
    238c:	f0 e0       	ldi	r31, 0x00	; 0
    238e:	1b d0       	rcall	.+54     	; 0x23c6 <__fp_powser>
    2390:	75 d0       	rcall	.+234    	; 0x247c <__fp_round>
    2392:	98 01       	movw	r18, r16
    2394:	ae 01       	movw	r20, r28
    2396:	8b 01       	movw	r16, r22
    2398:	ec 01       	movw	r28, r24
    239a:	60 e0       	ldi	r22, 0x00	; 0
    239c:	70 e0       	ldi	r23, 0x00	; 0
    239e:	80 e8       	ldi	r24, 0x80	; 128
    23a0:	9f e3       	ldi	r25, 0x3F	; 63
    23a2:	4d de       	rcall	.-870    	; 0x203e <__subsf3>
    23a4:	2a d1       	rcall	.+596    	; 0x25fa <sqrt>
    23a6:	98 01       	movw	r18, r16
    23a8:	ae 01       	movw	r20, r28
    23aa:	0f 91       	pop	r16
    23ac:	1f 91       	pop	r17
    23ae:	cf 91       	pop	r28
    23b0:	df 91       	pop	r29
    23b2:	c2 c0       	rjmp	.+388    	; 0x2538 <__mulsf3x>

000023b4 <__fp_inf>:
    23b4:	97 f9       	bld	r25, 7
    23b6:	9f 67       	ori	r25, 0x7F	; 127
    23b8:	80 e8       	ldi	r24, 0x80	; 128
    23ba:	70 e0       	ldi	r23, 0x00	; 0
    23bc:	60 e0       	ldi	r22, 0x00	; 0
    23be:	08 95       	ret

000023c0 <__fp_nan>:
    23c0:	9f ef       	ldi	r25, 0xFF	; 255
    23c2:	80 ec       	ldi	r24, 0xC0	; 192
    23c4:	08 95       	ret

000023c6 <__fp_powser>:
    23c6:	df 93       	push	r29
    23c8:	cf 93       	push	r28
    23ca:	1f 93       	push	r17
    23cc:	0f 93       	push	r16
    23ce:	ff 92       	push	r15
    23d0:	ef 92       	push	r14
    23d2:	df 92       	push	r13
    23d4:	7b 01       	movw	r14, r22
    23d6:	8c 01       	movw	r16, r24
    23d8:	68 94       	set
    23da:	05 c0       	rjmp	.+10     	; 0x23e6 <__fp_powser+0x20>
    23dc:	da 2e       	mov	r13, r26
    23de:	ef 01       	movw	r28, r30
    23e0:	ab d0       	rcall	.+342    	; 0x2538 <__mulsf3x>
    23e2:	fe 01       	movw	r30, r28
    23e4:	e8 94       	clt
    23e6:	a5 91       	lpm	r26, Z+
    23e8:	25 91       	lpm	r18, Z+
    23ea:	35 91       	lpm	r19, Z+
    23ec:	45 91       	lpm	r20, Z+
    23ee:	55 91       	lpm	r21, Z+
    23f0:	ae f3       	brts	.-22     	; 0x23dc <__fp_powser+0x16>
    23f2:	ef 01       	movw	r28, r30
    23f4:	36 de       	rcall	.-916    	; 0x2062 <__addsf3x>
    23f6:	fe 01       	movw	r30, r28
    23f8:	97 01       	movw	r18, r14
    23fa:	a8 01       	movw	r20, r16
    23fc:	da 94       	dec	r13
    23fe:	79 f7       	brne	.-34     	; 0x23de <__fp_powser+0x18>
    2400:	df 90       	pop	r13
    2402:	ef 90       	pop	r14
    2404:	ff 90       	pop	r15
    2406:	0f 91       	pop	r16
    2408:	1f 91       	pop	r17
    240a:	cf 91       	pop	r28
    240c:	df 91       	pop	r29
    240e:	08 95       	ret

00002410 <__fp_pscA>:
    2410:	00 24       	eor	r0, r0
    2412:	0a 94       	dec	r0
    2414:	16 16       	cp	r1, r22
    2416:	17 06       	cpc	r1, r23
    2418:	18 06       	cpc	r1, r24
    241a:	09 06       	cpc	r0, r25
    241c:	08 95       	ret

0000241e <__fp_pscB>:
    241e:	00 24       	eor	r0, r0
    2420:	0a 94       	dec	r0
    2422:	12 16       	cp	r1, r18
    2424:	13 06       	cpc	r1, r19
    2426:	14 06       	cpc	r1, r20
    2428:	05 06       	cpc	r0, r21
    242a:	08 95       	ret
    242c:	c9 cf       	rjmp	.-110    	; 0x23c0 <__fp_nan>

0000242e <__fp_rempio2>:
    242e:	50 d0       	rcall	.+160    	; 0x24d0 <__fp_splitA>
    2430:	e8 f3       	brcs	.-6      	; 0x242c <__fp_pscB+0xe>
    2432:	e8 94       	clt
    2434:	e0 e0       	ldi	r30, 0x00	; 0
    2436:	bb 27       	eor	r27, r27
    2438:	9f 57       	subi	r25, 0x7F	; 127
    243a:	f0 f0       	brcs	.+60     	; 0x2478 <__fp_rempio2+0x4a>
    243c:	2a ed       	ldi	r18, 0xDA	; 218
    243e:	3f e0       	ldi	r19, 0x0F	; 15
    2440:	49 ec       	ldi	r20, 0xC9	; 201
    2442:	06 c0       	rjmp	.+12     	; 0x2450 <__fp_rempio2+0x22>
    2444:	ee 0f       	add	r30, r30
    2446:	bb 0f       	add	r27, r27
    2448:	66 1f       	adc	r22, r22
    244a:	77 1f       	adc	r23, r23
    244c:	88 1f       	adc	r24, r24
    244e:	28 f0       	brcs	.+10     	; 0x245a <__fp_rempio2+0x2c>
    2450:	b2 3a       	cpi	r27, 0xA2	; 162
    2452:	62 07       	cpc	r22, r18
    2454:	73 07       	cpc	r23, r19
    2456:	84 07       	cpc	r24, r20
    2458:	28 f0       	brcs	.+10     	; 0x2464 <__fp_rempio2+0x36>
    245a:	b2 5a       	subi	r27, 0xA2	; 162
    245c:	62 0b       	sbc	r22, r18
    245e:	73 0b       	sbc	r23, r19
    2460:	84 0b       	sbc	r24, r20
    2462:	e3 95       	inc	r30
    2464:	9a 95       	dec	r25
    2466:	72 f7       	brpl	.-36     	; 0x2444 <__fp_rempio2+0x16>
    2468:	80 38       	cpi	r24, 0x80	; 128
    246a:	30 f4       	brcc	.+12     	; 0x2478 <__fp_rempio2+0x4a>
    246c:	9a 95       	dec	r25
    246e:	bb 0f       	add	r27, r27
    2470:	66 1f       	adc	r22, r22
    2472:	77 1f       	adc	r23, r23
    2474:	88 1f       	adc	r24, r24
    2476:	d2 f7       	brpl	.-12     	; 0x246c <__fp_rempio2+0x3e>
    2478:	90 48       	sbci	r25, 0x80	; 128
    247a:	02 c1       	rjmp	.+516    	; 0x2680 <__fp_mpack_finite>

0000247c <__fp_round>:
    247c:	09 2e       	mov	r0, r25
    247e:	03 94       	inc	r0
    2480:	00 0c       	add	r0, r0
    2482:	11 f4       	brne	.+4      	; 0x2488 <__fp_round+0xc>
    2484:	88 23       	and	r24, r24
    2486:	52 f0       	brmi	.+20     	; 0x249c <__fp_round+0x20>
    2488:	bb 0f       	add	r27, r27
    248a:	40 f4       	brcc	.+16     	; 0x249c <__fp_round+0x20>
    248c:	bf 2b       	or	r27, r31
    248e:	11 f4       	brne	.+4      	; 0x2494 <__fp_round+0x18>
    2490:	60 ff       	sbrs	r22, 0
    2492:	04 c0       	rjmp	.+8      	; 0x249c <__fp_round+0x20>
    2494:	6f 5f       	subi	r22, 0xFF	; 255
    2496:	7f 4f       	sbci	r23, 0xFF	; 255
    2498:	8f 4f       	sbci	r24, 0xFF	; 255
    249a:	9f 4f       	sbci	r25, 0xFF	; 255
    249c:	08 95       	ret

0000249e <__fp_sinus>:
    249e:	ef 93       	push	r30
    24a0:	e0 ff       	sbrs	r30, 0
    24a2:	06 c0       	rjmp	.+12     	; 0x24b0 <__fp_sinus+0x12>
    24a4:	a2 ea       	ldi	r26, 0xA2	; 162
    24a6:	2a ed       	ldi	r18, 0xDA	; 218
    24a8:	3f e0       	ldi	r19, 0x0F	; 15
    24aa:	49 ec       	ldi	r20, 0xC9	; 201
    24ac:	5f eb       	ldi	r21, 0xBF	; 191
    24ae:	d9 dd       	rcall	.-1102   	; 0x2062 <__addsf3x>
    24b0:	e5 df       	rcall	.-54     	; 0x247c <__fp_round>
    24b2:	0f 90       	pop	r0
    24b4:	03 94       	inc	r0
    24b6:	01 fc       	sbrc	r0, 1
    24b8:	90 58       	subi	r25, 0x80	; 128
    24ba:	e1 e2       	ldi	r30, 0x21	; 33
    24bc:	f1 e0       	ldi	r31, 0x01	; 1
    24be:	f3 c0       	rjmp	.+486    	; 0x26a6 <__fp_powsodd>

000024c0 <__fp_split3>:
    24c0:	57 fd       	sbrc	r21, 7
    24c2:	90 58       	subi	r25, 0x80	; 128
    24c4:	44 0f       	add	r20, r20
    24c6:	55 1f       	adc	r21, r21
    24c8:	59 f0       	breq	.+22     	; 0x24e0 <__fp_splitA+0x10>
    24ca:	5f 3f       	cpi	r21, 0xFF	; 255
    24cc:	71 f0       	breq	.+28     	; 0x24ea <__fp_splitA+0x1a>
    24ce:	47 95       	ror	r20

000024d0 <__fp_splitA>:
    24d0:	88 0f       	add	r24, r24
    24d2:	97 fb       	bst	r25, 7
    24d4:	99 1f       	adc	r25, r25
    24d6:	61 f0       	breq	.+24     	; 0x24f0 <__fp_splitA+0x20>
    24d8:	9f 3f       	cpi	r25, 0xFF	; 255
    24da:	79 f0       	breq	.+30     	; 0x24fa <__fp_splitA+0x2a>
    24dc:	87 95       	ror	r24
    24de:	08 95       	ret
    24e0:	12 16       	cp	r1, r18
    24e2:	13 06       	cpc	r1, r19
    24e4:	14 06       	cpc	r1, r20
    24e6:	55 1f       	adc	r21, r21
    24e8:	f2 cf       	rjmp	.-28     	; 0x24ce <__fp_split3+0xe>
    24ea:	46 95       	lsr	r20
    24ec:	f1 df       	rcall	.-30     	; 0x24d0 <__fp_splitA>
    24ee:	08 c0       	rjmp	.+16     	; 0x2500 <__fp_splitA+0x30>
    24f0:	16 16       	cp	r1, r22
    24f2:	17 06       	cpc	r1, r23
    24f4:	18 06       	cpc	r1, r24
    24f6:	99 1f       	adc	r25, r25
    24f8:	f1 cf       	rjmp	.-30     	; 0x24dc <__fp_splitA+0xc>
    24fa:	86 95       	lsr	r24
    24fc:	71 05       	cpc	r23, r1
    24fe:	61 05       	cpc	r22, r1
    2500:	08 94       	sec
    2502:	08 95       	ret

00002504 <__fp_zero>:
    2504:	e8 94       	clt

00002506 <__fp_szero>:
    2506:	bb 27       	eor	r27, r27
    2508:	66 27       	eor	r22, r22
    250a:	77 27       	eor	r23, r23
    250c:	cb 01       	movw	r24, r22
    250e:	97 f9       	bld	r25, 7
    2510:	08 95       	ret

00002512 <inverse>:
    2512:	9b 01       	movw	r18, r22
    2514:	ac 01       	movw	r20, r24
    2516:	60 e0       	ldi	r22, 0x00	; 0
    2518:	70 e0       	ldi	r23, 0x00	; 0
    251a:	80 e8       	ldi	r24, 0x80	; 128
    251c:	9f e3       	ldi	r25, 0x3F	; 63
    251e:	59 ce       	rjmp	.-846    	; 0x21d2 <__divsf3>

00002520 <__mulsf3>:
    2520:	0b d0       	rcall	.+22     	; 0x2538 <__mulsf3x>
    2522:	ac cf       	rjmp	.-168    	; 0x247c <__fp_round>
    2524:	75 df       	rcall	.-278    	; 0x2410 <__fp_pscA>
    2526:	28 f0       	brcs	.+10     	; 0x2532 <__mulsf3+0x12>
    2528:	7a df       	rcall	.-268    	; 0x241e <__fp_pscB>
    252a:	18 f0       	brcs	.+6      	; 0x2532 <__mulsf3+0x12>
    252c:	95 23       	and	r25, r21
    252e:	09 f0       	breq	.+2      	; 0x2532 <__mulsf3+0x12>
    2530:	41 cf       	rjmp	.-382    	; 0x23b4 <__fp_inf>
    2532:	46 cf       	rjmp	.-372    	; 0x23c0 <__fp_nan>
    2534:	11 24       	eor	r1, r1
    2536:	e7 cf       	rjmp	.-50     	; 0x2506 <__fp_szero>

00002538 <__mulsf3x>:
    2538:	c3 df       	rcall	.-122    	; 0x24c0 <__fp_split3>
    253a:	a0 f3       	brcs	.-24     	; 0x2524 <__mulsf3+0x4>

0000253c <__mulsf3_pse>:
    253c:	95 9f       	mul	r25, r21
    253e:	d1 f3       	breq	.-12     	; 0x2534 <__mulsf3+0x14>
    2540:	95 0f       	add	r25, r21
    2542:	50 e0       	ldi	r21, 0x00	; 0
    2544:	55 1f       	adc	r21, r21
    2546:	62 9f       	mul	r22, r18
    2548:	f0 01       	movw	r30, r0
    254a:	72 9f       	mul	r23, r18
    254c:	bb 27       	eor	r27, r27
    254e:	f0 0d       	add	r31, r0
    2550:	b1 1d       	adc	r27, r1
    2552:	63 9f       	mul	r22, r19
    2554:	aa 27       	eor	r26, r26
    2556:	f0 0d       	add	r31, r0
    2558:	b1 1d       	adc	r27, r1
    255a:	aa 1f       	adc	r26, r26
    255c:	64 9f       	mul	r22, r20
    255e:	66 27       	eor	r22, r22
    2560:	b0 0d       	add	r27, r0
    2562:	a1 1d       	adc	r26, r1
    2564:	66 1f       	adc	r22, r22
    2566:	82 9f       	mul	r24, r18
    2568:	22 27       	eor	r18, r18
    256a:	b0 0d       	add	r27, r0
    256c:	a1 1d       	adc	r26, r1
    256e:	62 1f       	adc	r22, r18
    2570:	73 9f       	mul	r23, r19
    2572:	b0 0d       	add	r27, r0
    2574:	a1 1d       	adc	r26, r1
    2576:	62 1f       	adc	r22, r18
    2578:	83 9f       	mul	r24, r19
    257a:	a0 0d       	add	r26, r0
    257c:	61 1d       	adc	r22, r1
    257e:	22 1f       	adc	r18, r18
    2580:	74 9f       	mul	r23, r20
    2582:	33 27       	eor	r19, r19
    2584:	a0 0d       	add	r26, r0
    2586:	61 1d       	adc	r22, r1
    2588:	23 1f       	adc	r18, r19
    258a:	84 9f       	mul	r24, r20
    258c:	60 0d       	add	r22, r0
    258e:	21 1d       	adc	r18, r1
    2590:	82 2f       	mov	r24, r18
    2592:	76 2f       	mov	r23, r22
    2594:	6a 2f       	mov	r22, r26
    2596:	11 24       	eor	r1, r1
    2598:	9f 57       	subi	r25, 0x7F	; 127
    259a:	50 40       	sbci	r21, 0x00	; 0
    259c:	8a f0       	brmi	.+34     	; 0x25c0 <__mulsf3_pse+0x84>
    259e:	e1 f0       	breq	.+56     	; 0x25d8 <__mulsf3_pse+0x9c>
    25a0:	88 23       	and	r24, r24
    25a2:	4a f0       	brmi	.+18     	; 0x25b6 <__mulsf3_pse+0x7a>
    25a4:	ee 0f       	add	r30, r30
    25a6:	ff 1f       	adc	r31, r31
    25a8:	bb 1f       	adc	r27, r27
    25aa:	66 1f       	adc	r22, r22
    25ac:	77 1f       	adc	r23, r23
    25ae:	88 1f       	adc	r24, r24
    25b0:	91 50       	subi	r25, 0x01	; 1
    25b2:	50 40       	sbci	r21, 0x00	; 0
    25b4:	a9 f7       	brne	.-22     	; 0x25a0 <__mulsf3_pse+0x64>
    25b6:	9e 3f       	cpi	r25, 0xFE	; 254
    25b8:	51 05       	cpc	r21, r1
    25ba:	70 f0       	brcs	.+28     	; 0x25d8 <__mulsf3_pse+0x9c>
    25bc:	fb ce       	rjmp	.-522    	; 0x23b4 <__fp_inf>
    25be:	a3 cf       	rjmp	.-186    	; 0x2506 <__fp_szero>
    25c0:	5f 3f       	cpi	r21, 0xFF	; 255
    25c2:	ec f3       	brlt	.-6      	; 0x25be <__mulsf3_pse+0x82>
    25c4:	98 3e       	cpi	r25, 0xE8	; 232
    25c6:	dc f3       	brlt	.-10     	; 0x25be <__mulsf3_pse+0x82>
    25c8:	86 95       	lsr	r24
    25ca:	77 95       	ror	r23
    25cc:	67 95       	ror	r22
    25ce:	b7 95       	ror	r27
    25d0:	f7 95       	ror	r31
    25d2:	e7 95       	ror	r30
    25d4:	9f 5f       	subi	r25, 0xFF	; 255
    25d6:	c1 f7       	brne	.-16     	; 0x25c8 <__mulsf3_pse+0x8c>
    25d8:	fe 2b       	or	r31, r30
    25da:	88 0f       	add	r24, r24
    25dc:	91 1d       	adc	r25, r1
    25de:	96 95       	lsr	r25
    25e0:	87 95       	ror	r24
    25e2:	97 f9       	bld	r25, 7
    25e4:	08 95       	ret

000025e6 <sin>:
    25e6:	9f 93       	push	r25
    25e8:	22 df       	rcall	.-444    	; 0x242e <__fp_rempio2>
    25ea:	0f 90       	pop	r0
    25ec:	07 fc       	sbrc	r0, 7
    25ee:	ee 5f       	subi	r30, 0xFE	; 254
    25f0:	56 cf       	rjmp	.-340    	; 0x249e <__fp_sinus>
    25f2:	11 f4       	brne	.+4      	; 0x25f8 <sin+0x12>
    25f4:	0e f4       	brtc	.+2      	; 0x25f8 <sin+0x12>
    25f6:	e4 ce       	rjmp	.-568    	; 0x23c0 <__fp_nan>
    25f8:	41 c0       	rjmp	.+130    	; 0x267c <__fp_mpack>

000025fa <sqrt>:
    25fa:	6a df       	rcall	.-300    	; 0x24d0 <__fp_splitA>
    25fc:	d0 f3       	brcs	.-12     	; 0x25f2 <sin+0xc>
    25fe:	99 23       	and	r25, r25
    2600:	d9 f3       	breq	.-10     	; 0x25f8 <sin+0x12>
    2602:	ce f3       	brts	.-14     	; 0x25f6 <sin+0x10>
    2604:	9f 57       	subi	r25, 0x7F	; 127
    2606:	55 0b       	sbc	r21, r21
    2608:	87 ff       	sbrs	r24, 7
    260a:	46 d0       	rcall	.+140    	; 0x2698 <__fp_norm2>
    260c:	00 24       	eor	r0, r0
    260e:	a0 e6       	ldi	r26, 0x60	; 96
    2610:	40 ea       	ldi	r20, 0xA0	; 160
    2612:	90 01       	movw	r18, r0
    2614:	80 58       	subi	r24, 0x80	; 128
    2616:	56 95       	lsr	r21
    2618:	97 95       	ror	r25
    261a:	28 f4       	brcc	.+10     	; 0x2626 <sqrt+0x2c>
    261c:	80 5c       	subi	r24, 0xC0	; 192
    261e:	66 0f       	add	r22, r22
    2620:	77 1f       	adc	r23, r23
    2622:	88 1f       	adc	r24, r24
    2624:	20 f0       	brcs	.+8      	; 0x262e <sqrt+0x34>
    2626:	26 17       	cp	r18, r22
    2628:	37 07       	cpc	r19, r23
    262a:	48 07       	cpc	r20, r24
    262c:	30 f4       	brcc	.+12     	; 0x263a <sqrt+0x40>
    262e:	62 1b       	sub	r22, r18
    2630:	73 0b       	sbc	r23, r19
    2632:	84 0b       	sbc	r24, r20
    2634:	20 29       	or	r18, r0
    2636:	31 29       	or	r19, r1
    2638:	4a 2b       	or	r20, r26
    263a:	a6 95       	lsr	r26
    263c:	17 94       	ror	r1
    263e:	07 94       	ror	r0
    2640:	20 25       	eor	r18, r0
    2642:	31 25       	eor	r19, r1
    2644:	4a 27       	eor	r20, r26
    2646:	58 f7       	brcc	.-42     	; 0x261e <sqrt+0x24>
    2648:	66 0f       	add	r22, r22
    264a:	77 1f       	adc	r23, r23
    264c:	88 1f       	adc	r24, r24
    264e:	20 f0       	brcs	.+8      	; 0x2658 <sqrt+0x5e>
    2650:	26 17       	cp	r18, r22
    2652:	37 07       	cpc	r19, r23
    2654:	48 07       	cpc	r20, r24
    2656:	30 f4       	brcc	.+12     	; 0x2664 <sqrt+0x6a>
    2658:	62 0b       	sbc	r22, r18
    265a:	73 0b       	sbc	r23, r19
    265c:	84 0b       	sbc	r24, r20
    265e:	20 0d       	add	r18, r0
    2660:	31 1d       	adc	r19, r1
    2662:	41 1d       	adc	r20, r1
    2664:	a0 95       	com	r26
    2666:	81 f7       	brne	.-32     	; 0x2648 <sqrt+0x4e>
    2668:	b9 01       	movw	r22, r18
    266a:	84 2f       	mov	r24, r20
    266c:	91 58       	subi	r25, 0x81	; 129
    266e:	88 0f       	add	r24, r24
    2670:	96 95       	lsr	r25
    2672:	87 95       	ror	r24
    2674:	08 95       	ret

00002676 <square>:
    2676:	9b 01       	movw	r18, r22
    2678:	ac 01       	movw	r20, r24
    267a:	52 cf       	rjmp	.-348    	; 0x2520 <__mulsf3>

0000267c <__fp_mpack>:
    267c:	9f 3f       	cpi	r25, 0xFF	; 255
    267e:	31 f0       	breq	.+12     	; 0x268c <__fp_mpack_finite+0xc>

00002680 <__fp_mpack_finite>:
    2680:	91 50       	subi	r25, 0x01	; 1
    2682:	20 f4       	brcc	.+8      	; 0x268c <__fp_mpack_finite+0xc>
    2684:	87 95       	ror	r24
    2686:	77 95       	ror	r23
    2688:	67 95       	ror	r22
    268a:	b7 95       	ror	r27
    268c:	88 0f       	add	r24, r24
    268e:	91 1d       	adc	r25, r1
    2690:	96 95       	lsr	r25
    2692:	87 95       	ror	r24
    2694:	97 f9       	bld	r25, 7
    2696:	08 95       	ret

00002698 <__fp_norm2>:
    2698:	91 50       	subi	r25, 0x01	; 1
    269a:	50 40       	sbci	r21, 0x00	; 0
    269c:	66 0f       	add	r22, r22
    269e:	77 1f       	adc	r23, r23
    26a0:	88 1f       	adc	r24, r24
    26a2:	d2 f7       	brpl	.-12     	; 0x2698 <__fp_norm2>
    26a4:	08 95       	ret

000026a6 <__fp_powsodd>:
    26a6:	9f 93       	push	r25
    26a8:	8f 93       	push	r24
    26aa:	7f 93       	push	r23
    26ac:	6f 93       	push	r22
    26ae:	ff 93       	push	r31
    26b0:	ef 93       	push	r30
    26b2:	9b 01       	movw	r18, r22
    26b4:	ac 01       	movw	r20, r24
    26b6:	34 df       	rcall	.-408    	; 0x2520 <__mulsf3>
    26b8:	ef 91       	pop	r30
    26ba:	ff 91       	pop	r31
    26bc:	84 de       	rcall	.-760    	; 0x23c6 <__fp_powser>
    26be:	2f 91       	pop	r18
    26c0:	3f 91       	pop	r19
    26c2:	4f 91       	pop	r20
    26c4:	5f 91       	pop	r21
    26c6:	2c cf       	rjmp	.-424    	; 0x2520 <__mulsf3>

000026c8 <fdevopen>:
    26c8:	0f 93       	push	r16
    26ca:	1f 93       	push	r17
    26cc:	cf 93       	push	r28
    26ce:	df 93       	push	r29
    26d0:	ec 01       	movw	r28, r24
    26d2:	8b 01       	movw	r16, r22
    26d4:	00 97       	sbiw	r24, 0x00	; 0
    26d6:	31 f4       	brne	.+12     	; 0x26e4 <fdevopen+0x1c>
    26d8:	61 15       	cp	r22, r1
    26da:	71 05       	cpc	r23, r1
    26dc:	19 f4       	brne	.+6      	; 0x26e4 <fdevopen+0x1c>
    26de:	e0 e0       	ldi	r30, 0x00	; 0
    26e0:	f0 e0       	ldi	r31, 0x00	; 0
    26e2:	36 c0       	rjmp	.+108    	; 0x2750 <fdevopen+0x88>
    26e4:	6e e0       	ldi	r22, 0x0E	; 14
    26e6:	70 e0       	ldi	r23, 0x00	; 0
    26e8:	81 e0       	ldi	r24, 0x01	; 1
    26ea:	90 e0       	ldi	r25, 0x00	; 0
    26ec:	37 d0       	rcall	.+110    	; 0x275c <calloc>
    26ee:	fc 01       	movw	r30, r24
    26f0:	00 97       	sbiw	r24, 0x00	; 0
    26f2:	a9 f3       	breq	.-22     	; 0x26de <fdevopen+0x16>
    26f4:	80 e8       	ldi	r24, 0x80	; 128
    26f6:	83 83       	std	Z+3, r24	; 0x03
    26f8:	01 15       	cp	r16, r1
    26fa:	11 05       	cpc	r17, r1
    26fc:	71 f0       	breq	.+28     	; 0x271a <fdevopen+0x52>
    26fe:	13 87       	std	Z+11, r17	; 0x0b
    2700:	02 87       	std	Z+10, r16	; 0x0a
    2702:	81 e8       	ldi	r24, 0x81	; 129
    2704:	83 83       	std	Z+3, r24	; 0x03
    2706:	80 91 2e 05 	lds	r24, 0x052E
    270a:	90 91 2f 05 	lds	r25, 0x052F
    270e:	89 2b       	or	r24, r25
    2710:	21 f4       	brne	.+8      	; 0x271a <fdevopen+0x52>
    2712:	f0 93 2f 05 	sts	0x052F, r31
    2716:	e0 93 2e 05 	sts	0x052E, r30
    271a:	20 97       	sbiw	r28, 0x00	; 0
    271c:	c9 f0       	breq	.+50     	; 0x2750 <fdevopen+0x88>
    271e:	d1 87       	std	Z+9, r29	; 0x09
    2720:	c0 87       	std	Z+8, r28	; 0x08
    2722:	83 81       	ldd	r24, Z+3	; 0x03
    2724:	82 60       	ori	r24, 0x02	; 2
    2726:	83 83       	std	Z+3, r24	; 0x03
    2728:	80 91 30 05 	lds	r24, 0x0530
    272c:	90 91 31 05 	lds	r25, 0x0531
    2730:	89 2b       	or	r24, r25
    2732:	71 f4       	brne	.+28     	; 0x2750 <fdevopen+0x88>
    2734:	f0 93 31 05 	sts	0x0531, r31
    2738:	e0 93 30 05 	sts	0x0530, r30
    273c:	80 91 32 05 	lds	r24, 0x0532
    2740:	90 91 33 05 	lds	r25, 0x0533
    2744:	89 2b       	or	r24, r25
    2746:	21 f4       	brne	.+8      	; 0x2750 <fdevopen+0x88>
    2748:	f0 93 33 05 	sts	0x0533, r31
    274c:	e0 93 32 05 	sts	0x0532, r30
    2750:	cf 01       	movw	r24, r30
    2752:	df 91       	pop	r29
    2754:	cf 91       	pop	r28
    2756:	1f 91       	pop	r17
    2758:	0f 91       	pop	r16
    275a:	08 95       	ret

0000275c <calloc>:
    275c:	0f 93       	push	r16
    275e:	1f 93       	push	r17
    2760:	cf 93       	push	r28
    2762:	df 93       	push	r29
    2764:	68 9f       	mul	r22, r24
    2766:	80 01       	movw	r16, r0
    2768:	69 9f       	mul	r22, r25
    276a:	10 0d       	add	r17, r0
    276c:	78 9f       	mul	r23, r24
    276e:	10 0d       	add	r17, r0
    2770:	11 24       	eor	r1, r1
    2772:	c8 01       	movw	r24, r16
    2774:	0f d0       	rcall	.+30     	; 0x2794 <malloc>
    2776:	c8 2f       	mov	r28, r24
    2778:	d9 2f       	mov	r29, r25
    277a:	20 97       	sbiw	r28, 0x00	; 0
    277c:	29 f0       	breq	.+10     	; 0x2788 <calloc+0x2c>
    277e:	a8 01       	movw	r20, r16
    2780:	60 e0       	ldi	r22, 0x00	; 0
    2782:	70 e0       	ldi	r23, 0x00	; 0
    2784:	8c 2f       	mov	r24, r28
    2786:	40 d1       	rcall	.+640    	; 0x2a08 <memset>
    2788:	ce 01       	movw	r24, r28
    278a:	df 91       	pop	r29
    278c:	cf 91       	pop	r28
    278e:	1f 91       	pop	r17
    2790:	0f 91       	pop	r16
    2792:	08 95       	ret

00002794 <malloc>:
    2794:	0f 93       	push	r16
    2796:	1f 93       	push	r17
    2798:	cf 93       	push	r28
    279a:	df 93       	push	r29
    279c:	82 30       	cpi	r24, 0x02	; 2
    279e:	91 05       	cpc	r25, r1
    27a0:	10 f4       	brcc	.+4      	; 0x27a6 <malloc+0x12>
    27a2:	82 e0       	ldi	r24, 0x02	; 2
    27a4:	90 e0       	ldi	r25, 0x00	; 0
    27a6:	e0 91 36 05 	lds	r30, 0x0536
    27aa:	f0 91 37 05 	lds	r31, 0x0537
    27ae:	20 e0       	ldi	r18, 0x00	; 0
    27b0:	30 e0       	ldi	r19, 0x00	; 0
    27b2:	c0 e0       	ldi	r28, 0x00	; 0
    27b4:	d0 e0       	ldi	r29, 0x00	; 0
    27b6:	23 c0       	rjmp	.+70     	; 0x27fe <malloc+0x6a>
    27b8:	40 81       	ld	r20, Z
    27ba:	51 81       	ldd	r21, Z+1	; 0x01
    27bc:	48 17       	cp	r20, r24
    27be:	59 07       	cpc	r21, r25
    27c0:	a8 f0       	brcs	.+42     	; 0x27ec <malloc+0x58>
    27c2:	48 17       	cp	r20, r24
    27c4:	59 07       	cpc	r21, r25
    27c6:	61 f4       	brne	.+24     	; 0x27e0 <malloc+0x4c>
    27c8:	82 81       	ldd	r24, Z+2	; 0x02
    27ca:	93 81       	ldd	r25, Z+3	; 0x03
    27cc:	20 97       	sbiw	r28, 0x00	; 0
    27ce:	19 f0       	breq	.+6      	; 0x27d6 <malloc+0x42>
    27d0:	9b 83       	std	Y+3, r25	; 0x03
    27d2:	8a 83       	std	Y+2, r24	; 0x02
    27d4:	2e c0       	rjmp	.+92     	; 0x2832 <malloc+0x9e>
    27d6:	90 93 37 05 	sts	0x0537, r25
    27da:	80 93 36 05 	sts	0x0536, r24
    27de:	29 c0       	rjmp	.+82     	; 0x2832 <malloc+0x9e>
    27e0:	21 15       	cp	r18, r1
    27e2:	31 05       	cpc	r19, r1
    27e4:	29 f0       	breq	.+10     	; 0x27f0 <malloc+0x5c>
    27e6:	42 17       	cp	r20, r18
    27e8:	53 07       	cpc	r21, r19
    27ea:	10 f0       	brcs	.+4      	; 0x27f0 <malloc+0x5c>
    27ec:	a9 01       	movw	r20, r18
    27ee:	02 c0       	rjmp	.+4      	; 0x27f4 <malloc+0x60>
    27f0:	be 01       	movw	r22, r28
    27f2:	df 01       	movw	r26, r30
    27f4:	02 81       	ldd	r16, Z+2	; 0x02
    27f6:	13 81       	ldd	r17, Z+3	; 0x03
    27f8:	ef 01       	movw	r28, r30
    27fa:	9a 01       	movw	r18, r20
    27fc:	f8 01       	movw	r30, r16
    27fe:	30 97       	sbiw	r30, 0x00	; 0
    2800:	d9 f6       	brne	.-74     	; 0x27b8 <malloc+0x24>
    2802:	21 15       	cp	r18, r1
    2804:	31 05       	cpc	r19, r1
    2806:	09 f1       	breq	.+66     	; 0x284a <malloc+0xb6>
    2808:	28 1b       	sub	r18, r24
    280a:	39 0b       	sbc	r19, r25
    280c:	24 30       	cpi	r18, 0x04	; 4
    280e:	31 05       	cpc	r19, r1
    2810:	90 f4       	brcc	.+36     	; 0x2836 <malloc+0xa2>
    2812:	12 96       	adiw	r26, 0x02	; 2
    2814:	8d 91       	ld	r24, X+
    2816:	9c 91       	ld	r25, X
    2818:	13 97       	sbiw	r26, 0x03	; 3
    281a:	61 15       	cp	r22, r1
    281c:	71 05       	cpc	r23, r1
    281e:	21 f0       	breq	.+8      	; 0x2828 <malloc+0x94>
    2820:	fb 01       	movw	r30, r22
    2822:	93 83       	std	Z+3, r25	; 0x03
    2824:	82 83       	std	Z+2, r24	; 0x02
    2826:	04 c0       	rjmp	.+8      	; 0x2830 <malloc+0x9c>
    2828:	90 93 37 05 	sts	0x0537, r25
    282c:	80 93 36 05 	sts	0x0536, r24
    2830:	fd 01       	movw	r30, r26
    2832:	32 96       	adiw	r30, 0x02	; 2
    2834:	44 c0       	rjmp	.+136    	; 0x28be <malloc+0x12a>
    2836:	fd 01       	movw	r30, r26
    2838:	e2 0f       	add	r30, r18
    283a:	f3 1f       	adc	r31, r19
    283c:	81 93       	st	Z+, r24
    283e:	91 93       	st	Z+, r25
    2840:	22 50       	subi	r18, 0x02	; 2
    2842:	31 09       	sbc	r19, r1
    2844:	2d 93       	st	X+, r18
    2846:	3c 93       	st	X, r19
    2848:	3a c0       	rjmp	.+116    	; 0x28be <malloc+0x12a>
    284a:	20 91 34 05 	lds	r18, 0x0534
    284e:	30 91 35 05 	lds	r19, 0x0535
    2852:	23 2b       	or	r18, r19
    2854:	41 f4       	brne	.+16     	; 0x2866 <malloc+0xd2>
    2856:	20 91 02 02 	lds	r18, 0x0202
    285a:	30 91 03 02 	lds	r19, 0x0203
    285e:	30 93 35 05 	sts	0x0535, r19
    2862:	20 93 34 05 	sts	0x0534, r18
    2866:	20 91 00 02 	lds	r18, 0x0200
    286a:	30 91 01 02 	lds	r19, 0x0201
    286e:	21 15       	cp	r18, r1
    2870:	31 05       	cpc	r19, r1
    2872:	41 f4       	brne	.+16     	; 0x2884 <malloc+0xf0>
    2874:	2d b7       	in	r18, 0x3d	; 61
    2876:	3e b7       	in	r19, 0x3e	; 62
    2878:	40 91 04 02 	lds	r20, 0x0204
    287c:	50 91 05 02 	lds	r21, 0x0205
    2880:	24 1b       	sub	r18, r20
    2882:	35 0b       	sbc	r19, r21
    2884:	e0 91 34 05 	lds	r30, 0x0534
    2888:	f0 91 35 05 	lds	r31, 0x0535
    288c:	e2 17       	cp	r30, r18
    288e:	f3 07       	cpc	r31, r19
    2890:	a0 f4       	brcc	.+40     	; 0x28ba <malloc+0x126>
    2892:	2e 1b       	sub	r18, r30
    2894:	3f 0b       	sbc	r19, r31
    2896:	28 17       	cp	r18, r24
    2898:	39 07       	cpc	r19, r25
    289a:	78 f0       	brcs	.+30     	; 0x28ba <malloc+0x126>
    289c:	ac 01       	movw	r20, r24
    289e:	4e 5f       	subi	r20, 0xFE	; 254
    28a0:	5f 4f       	sbci	r21, 0xFF	; 255
    28a2:	24 17       	cp	r18, r20
    28a4:	35 07       	cpc	r19, r21
    28a6:	48 f0       	brcs	.+18     	; 0x28ba <malloc+0x126>
    28a8:	4e 0f       	add	r20, r30
    28aa:	5f 1f       	adc	r21, r31
    28ac:	50 93 35 05 	sts	0x0535, r21
    28b0:	40 93 34 05 	sts	0x0534, r20
    28b4:	81 93       	st	Z+, r24
    28b6:	91 93       	st	Z+, r25
    28b8:	02 c0       	rjmp	.+4      	; 0x28be <malloc+0x12a>
    28ba:	e0 e0       	ldi	r30, 0x00	; 0
    28bc:	f0 e0       	ldi	r31, 0x00	; 0
    28be:	cf 01       	movw	r24, r30
    28c0:	df 91       	pop	r29
    28c2:	cf 91       	pop	r28
    28c4:	1f 91       	pop	r17
    28c6:	0f 91       	pop	r16
    28c8:	08 95       	ret

000028ca <free>:
    28ca:	ef 92       	push	r14
    28cc:	ff 92       	push	r15
    28ce:	0f 93       	push	r16
    28d0:	1f 93       	push	r17
    28d2:	cf 93       	push	r28
    28d4:	df 93       	push	r29
    28d6:	00 97       	sbiw	r24, 0x00	; 0
    28d8:	09 f4       	brne	.+2      	; 0x28dc <free+0x12>
    28da:	8f c0       	rjmp	.+286    	; 0x29fa <free+0x130>
    28dc:	dc 01       	movw	r26, r24
    28de:	12 97       	sbiw	r26, 0x02	; 2
    28e0:	13 96       	adiw	r26, 0x03	; 3
    28e2:	1c 92       	st	X, r1
    28e4:	1e 92       	st	-X, r1
    28e6:	12 97       	sbiw	r26, 0x02	; 2
    28e8:	e0 90 36 05 	lds	r14, 0x0536
    28ec:	f0 90 37 05 	lds	r15, 0x0537
    28f0:	e1 14       	cp	r14, r1
    28f2:	f1 04       	cpc	r15, r1
    28f4:	89 f4       	brne	.+34     	; 0x2918 <free+0x4e>
    28f6:	2d 91       	ld	r18, X+
    28f8:	3c 91       	ld	r19, X
    28fa:	11 97       	sbiw	r26, 0x01	; 1
    28fc:	28 0f       	add	r18, r24
    28fe:	39 1f       	adc	r19, r25
    2900:	80 91 34 05 	lds	r24, 0x0534
    2904:	90 91 35 05 	lds	r25, 0x0535
    2908:	82 17       	cp	r24, r18
    290a:	93 07       	cpc	r25, r19
    290c:	89 f5       	brne	.+98     	; 0x2970 <free+0xa6>
    290e:	b0 93 35 05 	sts	0x0535, r27
    2912:	a0 93 34 05 	sts	0x0534, r26
    2916:	71 c0       	rjmp	.+226    	; 0x29fa <free+0x130>
    2918:	e7 01       	movw	r28, r14
    291a:	20 e0       	ldi	r18, 0x00	; 0
    291c:	30 e0       	ldi	r19, 0x00	; 0
    291e:	01 c0       	rjmp	.+2      	; 0x2922 <free+0x58>
    2920:	ea 01       	movw	r28, r20
    2922:	ca 17       	cp	r28, r26
    2924:	db 07       	cpc	r29, r27
    2926:	38 f4       	brcc	.+14     	; 0x2936 <free+0x6c>
    2928:	4a 81       	ldd	r20, Y+2	; 0x02
    292a:	5b 81       	ldd	r21, Y+3	; 0x03
    292c:	9e 01       	movw	r18, r28
    292e:	41 15       	cp	r20, r1
    2930:	51 05       	cpc	r21, r1
    2932:	b1 f7       	brne	.-20     	; 0x2920 <free+0x56>
    2934:	22 c0       	rjmp	.+68     	; 0x297a <free+0xb0>
    2936:	bc 01       	movw	r22, r24
    2938:	62 50       	subi	r22, 0x02	; 2
    293a:	71 09       	sbc	r23, r1
    293c:	fb 01       	movw	r30, r22
    293e:	d3 83       	std	Z+3, r29	; 0x03
    2940:	c2 83       	std	Z+2, r28	; 0x02
    2942:	00 81       	ld	r16, Z
    2944:	11 81       	ldd	r17, Z+1	; 0x01
    2946:	ac 01       	movw	r20, r24
    2948:	40 0f       	add	r20, r16
    294a:	51 1f       	adc	r21, r17
    294c:	4c 17       	cp	r20, r28
    294e:	5d 07       	cpc	r21, r29
    2950:	61 f4       	brne	.+24     	; 0x296a <free+0xa0>
    2952:	48 81       	ld	r20, Y
    2954:	59 81       	ldd	r21, Y+1	; 0x01
    2956:	40 0f       	add	r20, r16
    2958:	51 1f       	adc	r21, r17
    295a:	4e 5f       	subi	r20, 0xFE	; 254
    295c:	5f 4f       	sbci	r21, 0xFF	; 255
    295e:	51 83       	std	Z+1, r21	; 0x01
    2960:	40 83       	st	Z, r20
    2962:	4a 81       	ldd	r20, Y+2	; 0x02
    2964:	5b 81       	ldd	r21, Y+3	; 0x03
    2966:	53 83       	std	Z+3, r21	; 0x03
    2968:	42 83       	std	Z+2, r20	; 0x02
    296a:	21 15       	cp	r18, r1
    296c:	31 05       	cpc	r19, r1
    296e:	29 f4       	brne	.+10     	; 0x297a <free+0xb0>
    2970:	b0 93 37 05 	sts	0x0537, r27
    2974:	a0 93 36 05 	sts	0x0536, r26
    2978:	40 c0       	rjmp	.+128    	; 0x29fa <free+0x130>
    297a:	f9 01       	movw	r30, r18
    297c:	b3 83       	std	Z+3, r27	; 0x03
    297e:	a2 83       	std	Z+2, r26	; 0x02
    2980:	e9 01       	movw	r28, r18
    2982:	69 91       	ld	r22, Y+
    2984:	79 91       	ld	r23, Y+
    2986:	c6 0f       	add	r28, r22
    2988:	d7 1f       	adc	r29, r23
    298a:	ac 17       	cp	r26, r28
    298c:	bd 07       	cpc	r27, r29
    298e:	79 f4       	brne	.+30     	; 0x29ae <free+0xe4>
    2990:	dc 01       	movw	r26, r24
    2992:	5e 91       	ld	r21, -X
    2994:	4e 91       	ld	r20, -X
    2996:	46 0f       	add	r20, r22
    2998:	57 1f       	adc	r21, r23
    299a:	4e 5f       	subi	r20, 0xFE	; 254
    299c:	5f 4f       	sbci	r21, 0xFF	; 255
    299e:	51 83       	std	Z+1, r21	; 0x01
    29a0:	40 83       	st	Z, r20
    29a2:	12 96       	adiw	r26, 0x02	; 2
    29a4:	8d 91       	ld	r24, X+
    29a6:	9c 91       	ld	r25, X
    29a8:	13 97       	sbiw	r26, 0x03	; 3
    29aa:	93 83       	std	Z+3, r25	; 0x03
    29ac:	82 83       	std	Z+2, r24	; 0x02
    29ae:	a0 e0       	ldi	r26, 0x00	; 0
    29b0:	b0 e0       	ldi	r27, 0x00	; 0
    29b2:	02 c0       	rjmp	.+4      	; 0x29b8 <free+0xee>
    29b4:	d7 01       	movw	r26, r14
    29b6:	7c 01       	movw	r14, r24
    29b8:	f7 01       	movw	r30, r14
    29ba:	82 81       	ldd	r24, Z+2	; 0x02
    29bc:	93 81       	ldd	r25, Z+3	; 0x03
    29be:	00 97       	sbiw	r24, 0x00	; 0
    29c0:	c9 f7       	brne	.-14     	; 0x29b4 <free+0xea>
    29c2:	c7 01       	movw	r24, r14
    29c4:	02 96       	adiw	r24, 0x02	; 2
    29c6:	20 81       	ld	r18, Z
    29c8:	31 81       	ldd	r19, Z+1	; 0x01
    29ca:	82 0f       	add	r24, r18
    29cc:	93 1f       	adc	r25, r19
    29ce:	20 91 34 05 	lds	r18, 0x0534
    29d2:	30 91 35 05 	lds	r19, 0x0535
    29d6:	28 17       	cp	r18, r24
    29d8:	39 07       	cpc	r19, r25
    29da:	79 f4       	brne	.+30     	; 0x29fa <free+0x130>
    29dc:	10 97       	sbiw	r26, 0x00	; 0
    29de:	29 f4       	brne	.+10     	; 0x29ea <free+0x120>
    29e0:	10 92 37 05 	sts	0x0537, r1
    29e4:	10 92 36 05 	sts	0x0536, r1
    29e8:	04 c0       	rjmp	.+8      	; 0x29f2 <free+0x128>
    29ea:	13 96       	adiw	r26, 0x03	; 3
    29ec:	1c 92       	st	X, r1
    29ee:	1e 92       	st	-X, r1
    29f0:	12 97       	sbiw	r26, 0x02	; 2
    29f2:	f0 92 35 05 	sts	0x0535, r15
    29f6:	e0 92 34 05 	sts	0x0534, r14
    29fa:	df 91       	pop	r29
    29fc:	cf 91       	pop	r28
    29fe:	1f 91       	pop	r17
    2a00:	0f 91       	pop	r16
    2a02:	ff 90       	pop	r15
    2a04:	ef 90       	pop	r14
    2a06:	08 95       	ret

00002a08 <memset>:
    2a08:	dc 01       	movw	r26, r24
    2a0a:	01 c0       	rjmp	.+2      	; 0x2a0e <memset+0x6>
    2a0c:	6d 93       	st	X+, r22
    2a0e:	41 50       	subi	r20, 0x01	; 1
    2a10:	50 40       	sbci	r21, 0x00	; 0
    2a12:	e0 f7       	brcc	.-8      	; 0x2a0c <memset+0x4>
    2a14:	08 95       	ret

00002a16 <_exit>:
    2a16:	f8 94       	cli

00002a18 <__stop_program>:
    2a18:	ff cf       	rjmp	.-2      	; 0x2a18 <__stop_program>
